/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  WorbooRegistry,
  WorbooRegistryInterface,
} from "../WorbooRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "dayId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "wordHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "guesses",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "victory",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "streak",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "totalGames",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "totalWins",
        type: "uint64",
      },
    ],
    name: "GameRecorded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_GUESSES",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getProfile",
    outputs: [
      {
        internalType: "bool",
        name: "isRegistered",
        type: "bool",
      },
      {
        internalType: "uint64",
        name: "totalGames",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "totalWins",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "currentStreak",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "lastDayId",
        type: "uint64",
      },
      {
        internalType: "uint40",
        name: "lastSubmissionAt",
        type: "uint40",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "dayId",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "wordHash",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "guesses",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "victory",
        type: "bool",
      },
    ],
    name: "recordGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610620806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630f53a470146100515780631aa3a0081461010b57806339b3639a14610115578063684d467814610128575b600080fd5b6100bf61005f36600461051b565b6001600160a01b03166000908152602081905260409020805460019091015460ff82169261010083046001600160401b0390811693600160481b8104821693600160881b90910482169291811691600160401b90910464ffffffffff1690565b6040805196151587526001600160401b039586166020880152938516938601939093529083166060850152909116608083015264ffffffffff1660a082015260c0015b60405180910390f35b610113610142565b005b61011361012336600461054b565b6101d5565b610130600a81565b60405160ff9091168152602001610102565b336000908152602081905260409020805460ff161561019c5760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e549959da5cdd195c9959607a1b60448201526064015b60405180910390fd5b805460ff1916600117815560405133907f8cd3331e32cec677d80b82cf0f71496605e7ed6ff864a3ccedc7d5d11d838c8390600090a250565b336000908152602081905260409020805460ff166102255760405162461bcd60e51b815260206004820152600d60248201526c139bdd149959da5cdd195c9959609a1b6044820152606401610193565b836102645760405162461bcd60e51b815260206004820152600f60248201526e092dcecc2d8d2c8aedee4c890c2e6d608b1b6044820152606401610193565b60008360ff1611801561027b5750600a60ff841611155b6102b85760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69644775657373657360901b6044820152606401610193565b60018101546001600160401b03908116908616116103185760405162461bcd60e51b815260206004820152601860248201527f4461794e6f745374726963746c79496e6372656173696e6700000000000000006044820152606401610193565b80546001908290829061033a90829061010090046001600160401b03166105b5565b92506101000a8154816001600160401b0302191690836001600160401b0316021790555081156104545780546001908290600990610389908490600160481b90046001600160401b03166105b5565b92506101000a8154816001600160401b0302191690836001600160401b03160217905550846001600160401b03168160010160009054906101000a90046001600160401b031660016103db91906105b5565b6001600160401b031603610437578054600190829060119061040e908490600160881b90046001600160401b03166105b5565b92506101000a8154816001600160401b0302191690836001600160401b03160217905550610467565b805467ffffffffffffffff60881b1916600160881b178155610467565b805467ffffffffffffffff60881b191681555b6001810180546001600160401b038781166cffffffffffffffffffffffffff199092168217600160401b4264ffffffffff16021790925582546040805188815260ff8816602082015286151591810191909152600160881b820484166060820152610100820484166080820152600160481b90910490921660a08301529033907f59d3d3aceb88eecace682bb12490fb17fca703d76371ff8b254b3e4db95165a09060c00160405180910390a35050505050565b60006020828403121561052d57600080fd5b81356001600160a01b038116811461054457600080fd5b9392505050565b6000806000806080858703121561056157600080fd5b84356001600160401b038116811461057857600080fd5b935060208501359250604085013560ff8116811461059557600080fd5b9150606085013580151581146105aa57600080fd5b939692955090935050565b6001600160401b038181168382160190808211156105e357634e487b7160e01b600052601160045260246000fd5b509291505056fea264697066735822122028ecbc265ead17b9843fbddf74dc5d33b9192dffd3197ae649a6b9b0f20fbcb764736f6c63430008180033";

type WorbooRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorbooRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorbooRegistry__factory extends ContractFactory {
  constructor(...args: WorbooRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WorbooRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WorbooRegistry__factory {
    return super.connect(runner) as WorbooRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorbooRegistryInterface {
    return new Interface(_abi) as WorbooRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WorbooRegistry {
    return new Contract(address, _abi, runner) as unknown as WorbooRegistry;
  }
}
