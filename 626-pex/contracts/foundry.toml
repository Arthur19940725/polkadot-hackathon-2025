[profile.default]
src = "src"
out = "out"
libs = ["lib"]
test = "test"
cache_path = "cache"

# Compiler settings
solc_version = "0.8.19"
optimizer = true
optimizer_runs = 200
via_ir = false

# Test settings
verbosity = 2
fuzz_runs = 256
fuzz_max_test_rejects = 65536

# Gas settings
gas_limit = 9223372036854775807
gas_price = 20000000000

# RPC settings
eth_rpc_url = "http://localhost:8545"
auto_detect_solc = false

# Formatter settings
line_length = 100
tab_width = 4
bracket_spacing = true

# Dependencies
remappings = [
    "@openzeppelin/=lib/openzeppelin-contracts/",
    "@chainlink/=lib/chainlink/",
    "forge-std/=lib/forge-std/src/"
]

[profile.ci]
fuzz_runs = 10000

[profile.lite]
optimizer = false
optimizer_runs = 0

[rpc_endpoints]
mainnet = "https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_API_KEY}"
goerli = "https://eth-goerli.alchemyapi.io/v2/${ALCHEMY_API_KEY}"
sepolia = "https://eth-sepolia.alchemyapi.io/v2/${ALCHEMY_API_KEY}"
polygon = "https://polygon-mainnet.alchemyapi.io/v2/${ALCHEMY_API_KEY}"
arbitrum = "https://arb-mainnet.alchemyapi.io/v2/${ALCHEMY_API_KEY}"
optimism = "https://opt-mainnet.alchemyapi.io/v2/${ALCHEMY_API_KEY}"

[etherscan]
mainnet = { key = "${ETHERSCAN_API_KEY}" }
goerli = { key = "${ETHERSCAN_API_KEY}" }
sepolia = { key = "${ETHERSCAN_API_KEY}" }
polygon = { key = "${POLYGONSCAN_API_KEY}" }
arbitrum = { key = "${ARBISCAN_API_KEY}" }
optimism = { key = "${OPTIMISTIC_ETHERSCAN_API_KEY}" }