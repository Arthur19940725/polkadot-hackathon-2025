[profile.default]
# Solidity compiler version
solc_version = "0.8.19"

# Source directory
src = "contracts"

# Test directory
test = "test/foundry"

# Script directory
script = "script"

# Output directory
out = "out"

# Library directory
libs = ["lib"]

# Cache directory
cache_path = "cache_forge"

# Remappings for dependencies
remappings = [
    "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
    "@chainlink/contracts/=lib/chainlink/contracts/",
    "forge-std/=lib/forge-std/src/",
    "ds-test/=lib/ds-test/src/",
]

# Optimizer settings
optimizer = true
optimizer_runs = 200

# Enable via-ir compilation
via_ir = true

# Gas limit for tests
gas_limit = 12000000

# Gas price for tests (in wei)
gas_price = 20000000000

# Block gas limit
block_gas_limit = 12000000

# Enable FFI (Foreign Function Interface)
ffi = false

# Enable assertions in tests
assertions = true

# Verbosity level (0-5)
verbosity = 2

# Auto detect solc version
auto_detect_solc = false

# Offline mode
offline = false

# Use literal content for metadata hash
use_literal_content = false

# Bytecode hash
bytecode_hash = "none"

# CBOR metadata
cbor_metadata = true

# Sparse mode for faster compilation
sparse_mode = false

# Build info
build_info = true

# Extra output
extra_output = ["storageLayout", "metadata"]

# EVM version
evm_version = "london"

# Ignored error codes
ignored_error_codes = [1878, 5574]

# Deny warnings
deny_warnings = false

# Libraries to link
libraries = []

# Force compilation
force = false

# No storage check
no_storage_check = false

# No match test
no_match_test = []

# Match test
match_test = []

# Match contract
match_contract = []

# No match contract
no_match_contract = []

# Match path
match_path = []

# No match path
no_match_path = []

# Test timeout
test_timeout = 300000

# Fail fast
fail_fast = false

# Show stack traces
show_stack_traces = true

[profile.ci]
# CI profile with stricter settings
verbosity = 4
deny_warnings = true
fail_fast = true
show_stack_traces = true
gas_reports = ["*"]

[profile.lite]
# Lite profile for faster compilation
optimizer = false
via_ir = false
build_info = false
extra_output = []

[profile.production]
# Production profile with maximum optimization
optimizer = true
optimizer_runs = 1000
via_ir = true
deny_warnings = true

[fmt]
# Formatting configuration
line_length = 100
tab_width = 4
bracket_spacing = true
int_types = "long"
multiline_func_header = "all"
quote_style = "double"
number_underscore = "thousands"
single_line_statement_blocks = "preserve"

[doc]
# Documentation configuration
out = "docs"
title = "PEX DEX Smart Contracts"
book = true
homepage = "https://github.com/your-org/pex-dex"
repository = "https://github.com/your-org/pex-dex"

[fuzz]
# Fuzzing configuration
runs = 1000
max_test_rejects = 65536
seed = "0x1"
dictionary_weight = 40
include_storage = true
include_push_bytes = true

[invariant]
# Invariant testing configuration
runs = 256
depth = 15
fail_on_revert = false
call_override = false
dictionary_weight = 80
include_storage = true
include_push_bytes = true
shrink_run_limit = 5000

# RPC endpoints for different networks
[rpc_endpoints]
mainnet = "https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_API_KEY}"
sepolia = "https://eth-sepolia.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
localhost = "http://127.0.0.1:8545"
polkavm_testnet = "http://localhost:9944"

# Etherscan API keys for verification
[etherscan]
mainnet = { key = "${ETHERSCAN_API_KEY}" }
sepolia = { key = "${ETHERSCAN_API_KEY}" }

# Gas snapshots
[snapshot]
# Gas snapshot configuration
out = "gas-snapshots"
group = 1

# Model checker configuration (experimental)
[model_checker]
contracts = {}
engine = "chc"
timeout = 10000
targets = ["assert", "underflow", "overflow", "divByZero", "constantCondition", "popEmptyArray", "outOfBounds"]

# Bind configuration for external libraries
[bind]
# Rust bindings configuration
out = "bindings"
select = ["*"]
skip = []