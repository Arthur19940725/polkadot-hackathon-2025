{
  "id": "b022458a2d36235ecb118f1ee8557539",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "contracts/DeciCourt.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\ncontract DeciCourt is ReentrancyGuard {\n\n    // --- Events ---\n    event CaseCreated(uint256 indexed caseId, address indexed plaintiff, address indexed defendant, uint256 filingFee);\n    event JurorRegistered(address indexed juror, uint256 stakeAmount);\n    event JurorUnregistered(address indexed juror);\n    event VoteCommitted(uint256 indexed caseId, address indexed juror);\n    event VoteRevealed(uint256 indexed caseId, address indexed juror, VoteOption vote);\n    event CaseResolved(uint256 indexed caseId, address winner, uint256 plaintiffReward, uint256 defendantReward, uint256 totalJurorReward);\n    event AppealInitiated(uint256 indexed caseId, address indexed appellant, uint256 appealDeposit);\n    event AppealResolved(uint256 indexed caseId, address winner, bool appealSuccessful);\n    event JurorReputationUpdated(address indexed juror, uint256 newReputation, uint256 correctVotes, uint256 totalVotes);\n    event JurorPenalized(address indexed juror, uint256 penaltyAmount, uint256 penaltyRate, string reason);\n\n\n    // --- Enums and Structs ---\n    enum CaseStatus { Created, Voting, Resolving, Resolved, Appealing, AppealResolved }\n    enum VoteOption { None, ForPlaintiff, ForDefendant }\n\n    struct Case {\n        uint256 id;\n        address plaintiff;\n        address defendant;\n        string evidenceCID;         // 用户上传到IPFS的证据CID\n        CaseStatus status;\n        uint256 filingFee;          // 原告支付的立案费\n        address[] jurors;           // 本案的陪审员\n        mapping(address => bytes32) committedVotes; // 陪审员的承诺哈希\n        mapping(address => VoteOption) revealedVotes; // 陪审员揭示的投票\n        uint256 plaintiffVoteCount;\n        uint256 defendantVoteCount;\n        uint256 creationTime;\n        uint256 commitDeadline;     // 承诺截止时间\n        uint256 revealDeadline;     // 揭示截止时间\n        address winner;\n        // Appeal related fields\n        address appellant;          // 上诉方\n        uint256 appealDeposit;      // 上诉押金\n        uint256 appealDeadline;     // 上诉截止时间\n        bool isAppealed;            // 是否已上诉\n        uint256 appealJurySize;     // 上诉时的陪审团规模\n    }\n\n    struct JurorInfo {\n        bool isRegistered;\n        uint256 stakedAmount;       // 当前质押的总金额\n        bool isServing;             // 是否正在审理案件\n        uint256 correctVotes;       // 正确投票次数\n        uint256 totalVotes;         // 总投票次数\n        uint256 reputationScore;    // 声誉分数 (0-100)\n        uint256 consecutiveWrong;   // 连续错误投票次数\n    }\n\n    // --- State Variables ---\n    IERC20 public immutable juryToken; // ERC20代币合约地址\n\n    // Configurable parameters (set in constructor)\n    uint256 public filingFeeAmount;     // 固定的立案费用\n    uint256 public jurorStakeAmount;    // 成为陪审员需要质押的金额\n    uint256 public jurySize;            // 每个案件的陪审员数量\n    uint256 public commitDuration;      // 投票承诺阶段时长\n    uint256 public revealDuration;      // 投票揭示阶段时长\n    uint256 public jurorPenaltyRate;    // 败诉/未投票陪审员的罚款比例 (e.g., 50 for 50%)\n    uint256 public appealDepositMultiplier; // 上诉押金倍数 (相对于立案费)\n    uint256 public appealDuration;      // 上诉时限\n    uint256 public appealJurySize;      // 上诉时的陪审团规模\n\n    // System state\n    uint256 public nextCaseId;\n    mapping(uint256 => Case) public cases;\n\n    address[] public jurorPool; // 可用的陪审员池，用于随机抽取\n    mapping(address => uint256) private jurorPoolIndex; // 用于O(1)删除陪审员\n    mapping(address => JurorInfo) public jurorsInfo;\n\n    // --- Constructor ---\n    constructor(\n        address _tokenAddress,\n        uint256 _filingFee,\n        uint256 _jurorStake,\n        uint256 _jurySize,\n        uint256 _commitDuration,\n        uint256 _revealDuration,\n        uint256 _penaltyRate,\n        uint256 _appealDepositMultiplier,\n        uint256 _appealDuration,\n        uint256 _appealJurySize\n    ) {\n        require(_tokenAddress != address(0), \"Invalid token address\");\n        require(_filingFee > 0, \"Filing fee must be positive\");\n        require(_jurorStake > 0, \"Juror stake must be positive\");\n        require(_jurySize > 0 && _jurySize <= 100, \"Invalid jury size\");\n        require(_commitDuration > 0, \"Commit duration must be positive\");\n        require(_revealDuration > 0, \"Reveal duration must be positive\");\n        require(_penaltyRate <= 100, \"Penalty rate cannot exceed 100%\");\n        require(_appealDepositMultiplier > 0, \"Appeal deposit multiplier must be positive\");\n        require(_appealDuration > 0, \"Appeal duration must be positive\");\n        require(_appealJurySize >= _jurySize, \"Appeal jury size must be >= regular jury size\");\n        \n        juryToken = IERC20(_tokenAddress);\n        filingFeeAmount = _filingFee;\n        jurorStakeAmount = _jurorStake;\n        jurySize = _jurySize;\n        commitDuration = _commitDuration;\n        revealDuration = _revealDuration;\n        jurorPenaltyRate = _penaltyRate;\n        appealDepositMultiplier = _appealDepositMultiplier;\n        appealDuration = _appealDuration;\n        appealJurySize = _appealJurySize;\n        nextCaseId = 1;\n    }\n\n    // --- Juror Management Functions ---\n\n    // 陪审员注册，质押一定的金额\n    function registerAsJuror() external {\n        require(!jurorsInfo[msg.sender].isRegistered, \"Already registered\");\n\n        // 从调用者地址转移质押代币到本合约\n        bool success = juryToken.transferFrom(msg.sender, address(this), jurorStakeAmount);\n        require(success, \"Token transfer failed. Did you approve?\");\n        \n        jurorsInfo[msg.sender] = JurorInfo({\n            isRegistered: true,\n            stakedAmount: jurorStakeAmount,\n            isServing: false,\n            correctVotes: 0,\n            totalVotes: 0,\n            reputationScore: 50, // 初始声誉分数50\n            consecutiveWrong: 0\n        });\n\n        // 加入陪审员池\n        jurorPool.push(msg.sender);\n        jurorPoolIndex[msg.sender] = jurorPool.length - 1;\n\n        emit JurorRegistered(msg.sender, jurorStakeAmount);\n    }\n\n    // 陪审员注销，需要质押的金额返回给陪审员\n    function unregisterAsJuror() external {\n        JurorInfo storage juror = jurorsInfo[msg.sender];\n        require(juror.isRegistered, \"Not a registered juror\");\n        require(!juror.isServing, \"Cannot unregister while serving on a case\");\n\n        // 保存质押金额（在删除之前）\n        uint256 stakedAmount = juror.stakedAmount;\n\n        // 从陪审员池中移除 (O(1)操作)\n        uint256 indexToRemove = jurorPoolIndex[msg.sender];\n        address lastJuror = jurorPool[jurorPool.length - 1];\n        jurorPool[indexToRemove] = lastJuror;\n        jurorPoolIndex[lastJuror] = indexToRemove;\n        jurorPool.pop();\n\n        // 删除信息并退还质押金\n        delete jurorsInfo[msg.sender];\n        delete jurorPoolIndex[msg.sender];\n        \n        bool success = juryToken.transfer(msg.sender, stakedAmount);\n        require(success, \"Token transfer failed\");\n\n        emit JurorUnregistered(msg.sender);\n    }\n\n    // --- Case Workflow Functions ---\n    // 创建案件\n    function createCase(address _defendant, string calldata _evidenceCID) external {\n        require(_defendant != address(0) && _defendant != msg.sender, \"Invalid defendant\");\n        require(jurorPool.length >= jurySize, \"Not enough available jurors\");\n\n        // 转移立案费\n        bool success = juryToken.transferFrom(msg.sender, address(this), filingFeeAmount);\n        require(success, \"Filing fee transfer failed. Did you approve?\");\n        \n        uint256 caseId = nextCaseId++;\n        Case storage newCase = cases[caseId];\n        newCase.id = caseId;\n        newCase.plaintiff = msg.sender;\n        newCase.defendant = _defendant;\n        newCase.evidenceCID = _evidenceCID;\n        newCase.status = CaseStatus.Voting; // 直接进入投票阶段\n        newCase.filingFee = filingFeeAmount;\n        newCase.creationTime = block.timestamp;\n        newCase.commitDeadline = block.timestamp + commitDuration;\n        newCase.revealDeadline = newCase.commitDeadline + revealDuration;\n\n        _assignJurors(caseId);\n\n        emit CaseCreated(caseId, msg.sender, _defendant, filingFeeAmount);\n    }\n\n    // 陪审员承诺投票\n    function commitVote(uint256 _caseId, bytes32 _voteHash) external {\n        Case storage currentCase = cases[_caseId];\n        require(currentCase.status == CaseStatus.Voting, \"Not in voting phase\");\n        require(block.timestamp <= currentCase.commitDeadline, \"Commit phase ended\");\n        require(_isJurorForCase(currentCase, msg.sender), \"Not a juror for this case\");\n        require(currentCase.committedVotes[msg.sender] == bytes32(0), \"Already committed\");\n\n        currentCase.committedVotes[msg.sender] = _voteHash;\n        emit VoteCommitted(_caseId, msg.sender);\n    }\n\n    // 陪审员揭示投票\n    function revealVote(uint256 _caseId, VoteOption _vote, bytes32 _salt) external {\n        Case storage currentCase = cases[_caseId];\n        require(currentCase.status == CaseStatus.Voting, \"Not in voting phase\");\n        require(block.timestamp > currentCase.commitDeadline, \"Commit phase not ended yet\");\n        require(block.timestamp <= currentCase.revealDeadline, \"Reveal phase ended\");\n        require(_isJurorForCase(currentCase, msg.sender), \"Not a juror for this case\");\n        require(currentCase.committedVotes[msg.sender] != bytes32(0), \"Did not commit\");\n        require(currentCase.revealedVotes[msg.sender] == VoteOption.None, \"Already revealed\");\n        \n        bytes32 regeneratedHash = keccak256(abi.encodePacked(_vote, _salt));\n        require(regeneratedHash == currentCase.committedVotes[msg.sender], \"Vote does not match commit\");\n\n        currentCase.revealedVotes[msg.sender] = _vote;\n        if (_vote == VoteOption.ForPlaintiff) {\n            currentCase.plaintiffVoteCount++;\n        } else if (_vote == VoteOption.ForDefendant) {\n            currentCase.defendantVoteCount++;\n        }\n\n        emit VoteRevealed(_caseId, msg.sender, _vote);\n    }\n\n    // 执行判决\n    function executeVerdict(uint256 _caseId) external nonReentrant {\n        Case storage currentCase = cases[_caseId];\n        require(currentCase.status == CaseStatus.Voting, \"Case not ready for verdict\");\n        require(block.timestamp > currentCase.revealDeadline, \"Reveal phase not ended yet\");\n        \n        currentCase.status = CaseStatus.Resolving; // 防止重入\n\n        // 确定胜者，平票则被告胜\n        address winner = (currentCase.plaintiffVoteCount > currentCase.defendantVoteCount) ? currentCase.plaintiff : currentCase.defendant;\n        currentCase.winner = winner;\n        VoteOption winningVote = (winner == currentCase.plaintiff) ? VoteOption.ForPlaintiff : VoteOption.ForDefendant;\n\n        uint256 totalPenaltyPool = 0;\n        uint256 winningJurorCount = 0;\n\n        // 计算罚金池和获胜陪审员数量\n        for (uint i = 0; i < currentCase.jurors.length; i++) {\n            address jurorAddr = currentCase.jurors[i];\n            VoteOption jurorVote = currentCase.revealedVotes[jurorAddr];\n            JurorInfo storage juror = jurorsInfo[jurorAddr];\n            \n            // 更新总投票次数\n            juror.totalVotes++;\n\n            if (jurorVote == winningVote && jurorVote != VoteOption.None) {\n                // 投票正确\n                winningJurorCount++;\n                juror.correctVotes++;\n                juror.consecutiveWrong = 0; // 重置连续错误计数\n                \n                // 更新声誉分数 (最大100)\n                if (juror.reputationScore < 100) {\n                    juror.reputationScore = juror.reputationScore + 2;\n                    if (juror.reputationScore > 100) {\n                        juror.reputationScore = 100;\n                    }\n                }\n                \n                emit JurorReputationUpdated(jurorAddr, juror.reputationScore, juror.correctVotes, juror.totalVotes);\n            } else {\n                // 投错票或未投票的陪审员\n                juror.consecutiveWrong++;\n                \n                // 动态惩罚计算\n                uint256 basePenalty = jurorPenaltyRate;\n                \n                // 新手保护：前3次投票错误减少惩罚\n                if (juror.totalVotes <= 3) {\n                    basePenalty = basePenalty / 2; // 减半惩罚\n                }\n                \n                // 连续错误增加惩罚\n                if (juror.consecutiveWrong > 1) {\n                    basePenalty = basePenalty + (juror.consecutiveWrong - 1) * 10;\n                    if (basePenalty > 80) basePenalty = 80; // 最大80%惩罚\n                }\n                \n                // 高声誉陪审员减少惩罚\n                if (juror.reputationScore > 70) {\n                    basePenalty = basePenalty * 80 / 100; // 减少20%惩罚\n                }\n                \n                uint256 penalty = (juror.stakedAmount * basePenalty) / 100;\n                // 确保陪审员至少保留10%的质押金额\n                uint256 minStake = jurorStakeAmount / 10;\n                if (juror.stakedAmount - penalty < minStake) {\n                    penalty = juror.stakedAmount - minStake;\n                }\n                juror.stakedAmount = juror.stakedAmount - penalty;\n                totalPenaltyPool = totalPenaltyPool + penalty;\n                \n                // 更新声誉分数 (最小0)\n                if (juror.reputationScore > 5) {\n                    juror.reputationScore = juror.reputationScore - 5;\n                } else {\n                    juror.reputationScore = 0;\n                }\n                \n                // 确定惩罚原因\n                string memory reason = jurorVote == VoteOption.None ? \"No vote\" : \"Wrong vote\";\n                emit JurorPenalized(jurorAddr, penalty, basePenalty, reason);\n                emit JurorReputationUpdated(jurorAddr, juror.reputationScore, juror.correctVotes, juror.totalVotes);\n            }\n        }\n        \n        // 分配资金\n        uint256 plaintiffReward = 0;\n        uint256 defendantReward = 0;\n        uint256 jurorRewardPerPerson = 0;\n        uint256 totalJurorReward = 0;\n\n        uint256 jurorRewardPool = totalPenaltyPool; // 陪审员奖励池只来自罚金\n        uint256 winnerRewardPool = currentCase.filingFee; // 获胜方奖励池来自立案费\n\n        if (winningJurorCount > 0) {\n            jurorRewardPerPerson = jurorRewardPool / winningJurorCount;\n        }\n        \n        if (winner == currentCase.plaintiff) {\n            // 原告获胜：退还立案费\n            plaintiffReward = winnerRewardPool;\n            if (plaintiffReward > 0) {\n                juryToken.transfer(currentCase.plaintiff, plaintiffReward);\n            }\n        } else {\n            // 被告获胜：获得立案费作为补偿\n            defendantReward = winnerRewardPool;\n            if (defendantReward > 0) {\n                juryToken.transfer(currentCase.defendant, defendantReward);\n            }\n        }\n\n        // 分配奖励给获胜的陪审员\n        for (uint i = 0; i < currentCase.jurors.length; i++) {\n            address jurorAddr = currentCase.jurors[i];\n            if (currentCase.revealedVotes[jurorAddr] == winningVote) {\n                jurorsInfo[jurorAddr].stakedAmount = jurorsInfo[jurorAddr].stakedAmount + jurorRewardPerPerson;\n                totalJurorReward = totalJurorReward + jurorRewardPerPerson;\n            }\n            // 案件结束，解除陪审员的 \"isServing\" 状态\n            jurorsInfo[jurorAddr].isServing = false;\n        }\n\n        // 检查是否为上诉案件\n        if (currentCase.isAppealed) {\n            // 上诉案件的特殊处理\n            _handleAppealVerdict(_caseId, winner, plaintiffReward, defendantReward, totalJurorReward);\n        } else {\n            // 普通案件：设置上诉截止时间，允许败诉方上诉\n            currentCase.appealDeadline = block.timestamp + appealDuration;\n            currentCase.status = CaseStatus.Resolved;\n            emit CaseResolved(_caseId, winner, plaintiffReward, defendantReward, totalJurorReward);\n        }\n    }\n\n    // 上诉功能\n    function appeal(uint256 _caseId) external nonReentrant {\n        Case storage currentCase = cases[_caseId];\n        require(currentCase.status == CaseStatus.Resolved, \"Case not resolved yet\");\n        require(block.timestamp <= currentCase.appealDeadline, \"Appeal deadline passed\");\n        require(!currentCase.isAppealed, \"Case already appealed\");\n        \n        // 只有败诉方可以上诉\n        address loser = (currentCase.winner == currentCase.plaintiff) ? currentCase.defendant : currentCase.plaintiff;\n        require(msg.sender == loser, \"Only losing party can appeal\");\n        \n        // 计算上诉押金\n        uint256 requiredDeposit = currentCase.filingFee * appealDepositMultiplier;\n        \n        // 转移上诉押金\n        bool success = juryToken.transferFrom(msg.sender, address(this), requiredDeposit);\n        require(success, \"Appeal deposit transfer failed\");\n        \n        // 更新案件状态\n        currentCase.appellant = msg.sender;\n        currentCase.appealDeposit = requiredDeposit;\n        currentCase.isAppealed = true;\n        currentCase.status = CaseStatus.Appealing;\n        currentCase.appealJurySize = appealJurySize;\n        \n        // 重置投票相关数据\n        currentCase.plaintiffVoteCount = 0;\n        currentCase.defendantVoteCount = 0;\n        \n        // 清除之前的陪审员状态\n        for (uint i = 0; i < currentCase.jurors.length; i++) {\n            address jurorAddr = currentCase.jurors[i];\n            delete currentCase.committedVotes[jurorAddr];\n            delete currentCase.revealedVotes[jurorAddr];\n            jurorsInfo[jurorAddr].isServing = false;\n        }\n        \n        // 清空陪审员数组\n        delete currentCase.jurors;\n        \n        // 重新分配更大规模的陪审团\n        _assignAppealJurors(_caseId);\n        \n        // 设置新的投票时间\n        currentCase.commitDeadline = block.timestamp + commitDuration;\n        currentCase.revealDeadline = currentCase.commitDeadline + revealDuration;\n        currentCase.status = CaseStatus.Voting;\n        \n        emit AppealInitiated(_caseId, msg.sender, requiredDeposit);\n    }\n\n    // --- Internal & View Functions ---\n    /**\n     * @dev 内部函数：为案件分配陪审员\n     */\n    function _assignJurors(uint256 _caseId) internal {\n        Case storage currentCase = cases[_caseId];\n        uint256 poolSize = jurorPool.length;\n        \n        // 如果陪审员池大小等于所需陪审员数量，直接分配所有陪审员\n        if (poolSize == jurySize) {\n            for (uint i = 0; i < poolSize; i++) {\n                address juror = jurorPool[i];\n                currentCase.jurors.push(juror);\n                jurorsInfo[juror].isServing = true;\n            }\n            return;\n        }\n        \n        // 使用Fisher-Yates洗牌算法的变种进行随机选择\n        uint256 seed = uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, _caseId)));\n        \n        // 创建临时数组来跟踪已选择的陪审员\n        bool[] memory selected = new bool[](poolSize);\n        uint256 selectedCount = 0;\n        \n        for (uint256 i = 0; i < jurySize && selectedCount < poolSize; i++) {\n            uint256 attempts = 0;\n            uint256 randomIndex;\n            \n            // 最多尝试poolSize次来找到未被选中的陪审员\n            do {\n                randomIndex = uint256(keccak256(abi.encodePacked(seed, i, attempts))) % poolSize;\n                attempts++;\n            } while (selected[randomIndex] && attempts < poolSize);\n            \n            // 如果找到了未被选中的陪审员\n            if (!selected[randomIndex]) {\n                selected[randomIndex] = true;\n                address selectedJuror = jurorPool[randomIndex];\n                currentCase.jurors.push(selectedJuror);\n                jurorsInfo[selectedJuror].isServing = true;\n                selectedCount++;\n            }\n        }\n        \n        require(currentCase.jurors.length == jurySize, \"Failed to assign enough jurors\");\n    }\n    \n    /**\n     * @dev 内部函数：为上诉案件分配更大规模的陪审员\n     */\n    function _assignAppealJurors(uint256 _caseId) internal {\n        Case storage currentCase = cases[_caseId];\n        uint256 poolSize = jurorPool.length;\n        uint256 requiredJurors = currentCase.appealJurySize;\n        \n        require(poolSize >= requiredJurors, \"Not enough available jurors for appeal\");\n        \n        // 如果陪审员池大小等于所需陪审员数量，直接分配所有陪审员\n        if (poolSize == requiredJurors) {\n            for (uint i = 0; i < poolSize; i++) {\n                address juror = jurorPool[i];\n                currentCase.jurors.push(juror);\n                jurorsInfo[juror].isServing = true;\n            }\n            return;\n        }\n        \n        // 使用Fisher-Yates洗牌算法的变种进行随机选择\n        uint256 seed = uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, _caseId, \"appeal\")));\n        \n        // 创建临时数组来跟踪已选择的陪审员\n        bool[] memory selected = new bool[](poolSize);\n        uint256 selectedCount = 0;\n        \n        for (uint256 i = 0; i < requiredJurors && selectedCount < poolSize; i++) {\n            uint256 attempts = 0;\n            uint256 randomIndex;\n            \n            // 最多尝试poolSize次来找到未被选中的陪审员\n            do {\n                randomIndex = uint256(keccak256(abi.encodePacked(seed, i, attempts))) % poolSize;\n                attempts++;\n            } while (selected[randomIndex] && attempts < poolSize);\n            \n            // 如果找到了未被选中的陪审员\n            if (!selected[randomIndex]) {\n                selected[randomIndex] = true;\n                address selectedJuror = jurorPool[randomIndex];\n                currentCase.jurors.push(selectedJuror);\n                jurorsInfo[selectedJuror].isServing = true;\n                selectedCount++;\n            }\n        }\n        \n        require(currentCase.jurors.length == requiredJurors, \"Failed to assign enough appeal jurors\");\n    }\n    \n    /**\n     * @dev 处理上诉案件的判决\n     */\n    function _handleAppealVerdict(\n        uint256 _caseId, \n        address winner, \n        uint256 plaintiffReward, \n        uint256 defendantReward, \n        uint256 totalJurorReward\n    ) internal {\n        Case storage currentCase = cases[_caseId];\n        \n        // 判断上诉是否成功（上诉方是否获胜）\n        bool appealSuccessful = (winner == currentCase.appellant);\n        \n        if (appealSuccessful) {\n            // 上诉成功：上诉方获胜，获得部分押金返还\n            uint256 refund = (currentCase.appealDeposit * 3) / 4; // 返还75%押金\n            juryToken.transfer(currentCase.appellant, refund);\n            \n            // 剩余押金分给陪审员\n            totalJurorReward += (currentCase.appealDeposit - refund);\n        } else {\n            // 上诉失败：维持原判，上诉方失去押金\n            // 押金的一半分给获胜方，一半分给陪审员\n            uint256 winnerBonus = currentCase.appealDeposit / 2;\n            if (winner == currentCase.plaintiff) {\n                juryToken.transfer(currentCase.plaintiff, winnerBonus);\n                plaintiffReward += winnerBonus;\n            } else {\n                juryToken.transfer(currentCase.defendant, winnerBonus);\n                defendantReward += winnerBonus;\n            }\n            totalJurorReward += (currentCase.appealDeposit - winnerBonus);\n        }\n        \n        currentCase.status = CaseStatus.AppealResolved;\n        emit AppealResolved(_caseId, winner, appealSuccessful);\n        emit CaseResolved(_caseId, winner, plaintiffReward, defendantReward, totalJurorReward);\n    }\n    \n    /**\n     * @dev 检查一个地址是否是指定案件的陪审员\n     */\n    function _isJurorForCase(Case storage _case, address _addr) internal view returns (bool) {\n        for (uint i = 0; i < _case.jurors.length; i++) {\n            if (_case.jurors[i] == _addr) {\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    /**\n     * @dev 获取陪审员的详细声誉信息\n     */\n    function getJurorReputation(address _juror) external view returns (\n         uint256 correctVotes,\n         uint256 totalVotes,\n         uint256 reputationScore,\n         uint256 consecutiveWrong,\n         uint256 accuracyRate\n     ) {\n         JurorInfo storage juror = jurorsInfo[_juror];\n         require(juror.isRegistered, \"Juror not registered\");\n         \n         correctVotes = juror.correctVotes;\n         totalVotes = juror.totalVotes;\n         reputationScore = juror.reputationScore;\n         consecutiveWrong = juror.consecutiveWrong;\n         \n         // 计算准确率 (百分比)\n         if (totalVotes > 0) {\n             accuracyRate = (correctVotes * 100) / totalVotes;\n         } else {\n             accuracyRate = 0;\n         }\n     }\n     \n     /**\n     * @dev 获取指定案件的陪审员列表\n     */\n    function getCaseJurors(uint256 _caseId) external view returns (address[] memory) {\n        return cases[_caseId].jurors;\n    }\n\n    function getCaseDetails(uint256 _caseId) external view returns (\n        uint256 id,\n        address plaintiff,\n        address defendant,\n        string memory evidenceCID,\n        CaseStatus status,\n        uint256 filingFee,\n        uint256 plaintiffVoteCount,\n        uint256 defendantVoteCount,\n        uint256 creationTime,\n        uint256 commitDeadline,\n        uint256 revealDeadline,\n        address winner\n    ) {\n        Case storage caseData = cases[_caseId];\n        return (\n            caseData.id,\n            caseData.plaintiff,\n            caseData.defendant,\n            caseData.evidenceCID,\n            caseData.status,\n            caseData.filingFee,\n            caseData.plaintiffVoteCount,\n            caseData.defendantVoteCount,\n            caseData.creationTime,\n            caseData.commitDeadline,\n            caseData.revealDeadline,\n            caseData.winner\n        );\n    }\n\n}"
      },
      "contracts/JuryToken.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n// 从OpenZeppelin导入预设的ERC20合约，它包含了铸造、销毁、暂停等功能\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {ERC20Burnable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport {ERC20Pausable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract JuryToken is ERC20, ERC20Burnable, ERC20Pausable, Ownable {\n    constructor()\n        ERC20(\"JuryToken\", \"JURY\")\n        Ownable(msg.sender)\n    {\n        _mint(msg.sender, 1000000 * 10 ** decimals());\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _update(address from, address to, uint256 value)\n        internal\n        override(ERC20, ERC20Pausable)\n    {\n        super._update(from, to, value);\n    }\n}"
      },
      "contracts/SimpleTest.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ncontract SimpleTest {\n    string public message;\n    address public owner;\n\n    constructor() {}\n\n    function setMessage(string memory _message) external {\n        require(msg.sender == owner, \"Only owner can set message\");\n        message = _message;\n    }\n\n    function getMessage() external view returns (string memory) {\n        return message;\n    }\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "viaIR": true,
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              1013
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 1014,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1013,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1013,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                1013
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 995,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 995,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              284
            ],
            "IERC20Errors": [
              189
            ],
            "IERC721Errors": [
              237
            ]
          },
          "id": 285,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 150,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:1",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 189,
              "linearizedBaseContracts": [
                189
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 151,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:1",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 159,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "654:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 155,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "670:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 157,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "687:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:1"
                  },
                  "src": "623:80:1"
                },
                {
                  "documentation": {
                    "id": 160,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 164,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 164,
                        "src": "891:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:1"
                  },
                  "src": "866:41:1"
                },
                {
                  "documentation": {
                    "id": 165,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 169,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 167,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "1104:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:1"
                  },
                  "src": "1077:45:1"
                },
                {
                  "documentation": {
                    "id": 170,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:1",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 178,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1511:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 174,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1528:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 176,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1547:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:1"
                  },
                  "src": "1478:85:1"
                },
                {
                  "documentation": {
                    "id": 179,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 183,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 182,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 181,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "1775:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 180,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:1"
                  },
                  "src": "1748:45:1"
                },
                {
                  "documentation": {
                    "id": 184,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:1",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 188,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 186,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "2025:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 185,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:1"
                  },
                  "src": "1999:43:1"
                }
              ],
              "scope": 285,
              "src": "280:1764:1",
              "usedErrors": [
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 190,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:1",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 237,
              "linearizedBaseContracts": [
                237
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 191,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:1",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 195,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 193,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 195,
                        "src": "2469:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:1"
                  },
                  "src": "2444:40:1"
                },
                {
                  "documentation": {
                    "id": 196,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:1",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 200,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 200,
                        "src": "2656:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:1"
                  },
                  "src": "2627:46:1"
                },
                {
                  "documentation": {
                    "id": 201,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:1",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 209,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 203,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3000:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 205,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3016:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3033:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:1"
                  },
                  "src": "2973:75:1"
                },
                {
                  "documentation": {
                    "id": 210,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 214,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 212,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 214,
                        "src": "3237:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 211,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:1"
                  },
                  "src": "3211:42:1"
                },
                {
                  "documentation": {
                    "id": 215,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 219,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "3451:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:1"
                  },
                  "src": "3423:46:1"
                },
                {
                  "documentation": {
                    "id": 220,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:1",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 226,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "3760:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "3778:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:1"
                  },
                  "src": "3727:68:1"
                },
                {
                  "documentation": {
                    "id": 227,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 231,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 229,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "4008:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:1"
                  },
                  "src": "3980:46:1"
                },
                {
                  "documentation": {
                    "id": 232,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:1",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 236,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 234,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 236,
                        "src": "4262:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 233,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:1"
                  },
                  "src": "4234:46:1"
                }
              ],
              "scope": 285,
              "src": "2190:2092:1",
              "usedErrors": [
                195,
                200,
                209,
                214,
                219,
                226,
                231,
                236
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 238,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:1",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 284,
              "linearizedBaseContracts": [
                284
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 239,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:1",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 249,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4860:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 240,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4876:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4893:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 247,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4909:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:1"
                  },
                  "src": "4827:99:1"
                },
                {
                  "documentation": {
                    "id": 250,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 254,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "5116:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:1"
                  },
                  "src": "5089:43:1"
                },
                {
                  "documentation": {
                    "id": 255,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 259,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 259,
                        "src": "5331:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:1"
                  },
                  "src": "5302:47:1"
                },
                {
                  "documentation": {
                    "id": 260,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:1",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 266,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 266,
                        "src": "5651:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 266,
                        "src": "5669:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:1"
                  },
                  "src": "5616:68:1"
                },
                {
                  "documentation": {
                    "id": 267,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 271,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 271,
                        "src": "5898:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 268,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:1"
                  },
                  "src": "5869:47:1"
                },
                {
                  "documentation": {
                    "id": 272,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:1",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 276,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "6153:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:1"
                  },
                  "src": "6124:47:1"
                },
                {
                  "documentation": {
                    "id": 277,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:1",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 283,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 282,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 279,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 283,
                        "src": "6494:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 278,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 283,
                        "src": "6513:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:1"
                  },
                  "src": "6462:73:1"
                }
              ],
              "scope": 285,
              "src": "4430:2107:1",
              "usedErrors": [
                249,
                254,
                259,
                266,
                271,
                276,
                283
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              1013
            ],
            "ERC20": [
              799
            ],
            "IERC20": [
              877
            ],
            "IERC20Errors": [
              189
            ],
            "IERC20Metadata": [
              983
            ]
          },
          "id": 800,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 286,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 288,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 878,
              "src": "131:36:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 287,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "139:6:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 290,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 984,
              "src": "168:63:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 289,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 983,
                    "src": "176:14:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 292,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 1014,
              "src": "232:48:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 291,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1013,
                    "src": "240:7:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 294,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 285,
              "src": "281:65:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 293,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 189,
                    "src": "289:12:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 296,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1013,
                    "src": "1133:7:2"
                  },
                  "id": 297,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:2"
                },
                {
                  "baseName": {
                    "id": 298,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 877,
                    "src": "1142:6:2"
                  },
                  "id": 299,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:2"
                },
                {
                  "baseName": {
                    "id": 300,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 983,
                    "src": "1150:14:2"
                  },
                  "id": 301,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:2"
                },
                {
                  "baseName": {
                    "id": 302,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 189,
                    "src": "1166:12:2"
                  },
                  "id": 303,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:2"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 295,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:2",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 799,
              "linearizedBaseContracts": [
                799,
                189,
                983,
                877,
                1013
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1185:53:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 306,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:2",
                    "keyType": {
                      "id": 304,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 305,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1245:83:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 312,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:2",
                    "keyType": {
                      "id": 308,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 311,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:2",
                      "keyType": {
                        "id": 309,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 310,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1335:28:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 317,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1370:20:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1396:22:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 335,
                    "nodeType": "Block",
                    "src": "1638:57:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 327,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "1648:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 328,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 322,
                            "src": "1656:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 330,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:2"
                      },
                      {
                        "expression": {
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 331,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 319,
                            "src": "1671:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 332,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 324,
                            "src": "1681:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 334,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 320,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:2",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 336,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 322,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "1594:19:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 324,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "1615:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:2"
                  },
                  "returnParameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:2"
                  },
                  "scope": 799,
                  "src": "1582:113:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    970
                  ],
                  "body": {
                    "id": 344,
                    "nodeType": "Block",
                    "src": "1820:29:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 342,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 317,
                          "src": "1837:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 341,
                        "id": 343,
                        "nodeType": "Return",
                        "src": "1830:12:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 337,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:2",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 345,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 338,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:2"
                  },
                  "returnParameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1805:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:2"
                  },
                  "scope": 799,
                  "src": "1760:89:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    976
                  ],
                  "body": {
                    "id": 353,
                    "nodeType": "Block",
                    "src": "2024:31:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 351,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "2041:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 350,
                        "id": 352,
                        "nodeType": "Return",
                        "src": "2034:14:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 346,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:2",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 354,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 347,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:2"
                  },
                  "returnParameters": {
                    "id": 350,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 349,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 354,
                        "src": "2009:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 348,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:2"
                  },
                  "scope": 799,
                  "src": "1962:93:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    982
                  ],
                  "body": {
                    "id": 362,
                    "nodeType": "Block",
                    "src": "2744:26:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 359,
                        "id": 361,
                        "nodeType": "Return",
                        "src": "2754:9:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 355,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:2",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 363,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 356,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:2"
                  },
                  "returnParameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 363,
                        "src": "2737:5:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:2"
                  },
                  "scope": 799,
                  "src": "2688:82:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    826
                  ],
                  "body": {
                    "id": 371,
                    "nodeType": "Block",
                    "src": "2864:36:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 369,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "2881:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 368,
                        "id": 370,
                        "nodeType": "Return",
                        "src": "2874:19:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 364,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:22:2",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "18160ddd",
                  "id": 372,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2812:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 365,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2823:2:2"
                  },
                  "returnParameters": {
                    "id": 368,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 367,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 372,
                        "src": "2855:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 366,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2855:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2854:9:2"
                  },
                  "scope": 799,
                  "src": "2803:97:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    834
                  ],
                  "body": {
                    "id": 384,
                    "nodeType": "Block",
                    "src": "3007:42:2",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 380,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "3024:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 382,
                          "indexExpression": {
                            "id": 381,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "3034:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3024:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 379,
                        "id": 383,
                        "nodeType": "Return",
                        "src": "3017:25:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 373,
                    "nodeType": "StructuredDocumentation",
                    "src": "2906:22:2",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "70a08231",
                  "id": 385,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2942:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2960:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 385,
                        "src": "2952:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2952:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2951:17:2"
                  },
                  "returnParameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 378,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 385,
                        "src": "2998:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2998:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2997:9:2"
                  },
                  "scope": 799,
                  "src": "2933:116:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    844
                  ],
                  "body": {
                    "id": 408,
                    "nodeType": "Block",
                    "src": "3319:103:2",
                    "statements": [
                      {
                        "assignments": [
                          396
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 396,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3337:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 408,
                            "src": "3329:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 395,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3329:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 399,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 397,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 995,
                            "src": "3345:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3345:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3329:28:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 401,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "3377:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 402,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 388,
                              "src": "3384:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 403,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "3388:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 400,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "3367:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3367:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 405,
                        "nodeType": "ExpressionStatement",
                        "src": "3367:27:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3411:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 394,
                        "id": 407,
                        "nodeType": "Return",
                        "src": "3404:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 386,
                    "nodeType": "StructuredDocumentation",
                    "src": "3055:184:2",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 409,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3253:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3270:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3262:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3262:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 390,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3282:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3274:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3274:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3261:27:2"
                  },
                  "returnParameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3313:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3313:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3312:6:2"
                  },
                  "scope": 799,
                  "src": "3244:178:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    854
                  ],
                  "body": {
                    "id": 425,
                    "nodeType": "Block",
                    "src": "3544:51:2",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 419,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 313,
                              "src": "3561:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 421,
                            "indexExpression": {
                              "id": 420,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 412,
                              "src": "3573:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3561:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 423,
                          "indexExpression": {
                            "id": 422,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "3580:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3561:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 418,
                        "id": 424,
                        "nodeType": "Return",
                        "src": "3554:34:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 410,
                    "nodeType": "StructuredDocumentation",
                    "src": "3428:22:2",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 426,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3464:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 415,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3482:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3474:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3474:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 414,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3497:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3489:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 413,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3489:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3473:32:2"
                  },
                  "returnParameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3535:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3535:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3534:9:2"
                  },
                  "scope": 799,
                  "src": "3455:140:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    864
                  ],
                  "body": {
                    "id": 449,
                    "nodeType": "Block",
                    "src": "3981:107:2",
                    "statements": [
                      {
                        "assignments": [
                          437
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 437,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3999:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 449,
                            "src": "3991:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 436,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3991:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 440,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 438,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 995,
                            "src": "4007:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4007:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3991:28:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 442,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 437,
                              "src": "4038:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 443,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 429,
                              "src": "4045:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 444,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 431,
                              "src": "4054:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 441,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              690,
                              750
                            ],
                            "referencedDeclaration": 690,
                            "src": "4029:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4029:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 446,
                        "nodeType": "ExpressionStatement",
                        "src": "4029:31:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4077:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 435,
                        "id": 448,
                        "nodeType": "Return",
                        "src": "4070:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "3601:296:2",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 450,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3911:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 429,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3927:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "3919:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3919:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 431,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3944:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "3936:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3936:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3918:32:2"
                  },
                  "returnParameters": {
                    "id": 435,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "3975:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3975:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3974:6:2"
                  },
                  "scope": 799,
                  "src": "3902:186:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    876
                  ],
                  "body": {
                    "id": 481,
                    "nodeType": "Block",
                    "src": "4773:151:2",
                    "statements": [
                      {
                        "assignments": [
                          463
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 463,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4791:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 481,
                            "src": "4783:15:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 462,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4783:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 466,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 464,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 995,
                            "src": "4801:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4801:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4783:30:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 468,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "4839:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 469,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "4845:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 470,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "4854:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 467,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 798,
                            "src": "4823:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4823:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 472,
                        "nodeType": "ExpressionStatement",
                        "src": "4823:37:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 474,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "4880:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 475,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 455,
                              "src": "4886:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 476,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "4890:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 473,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "4870:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4870:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 478,
                        "nodeType": "ExpressionStatement",
                        "src": "4870:26:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4913:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 461,
                        "id": 480,
                        "nodeType": "Return",
                        "src": "4906:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 451,
                    "nodeType": "StructuredDocumentation",
                    "src": "4094:581:2",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 482,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4689:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4710:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4702:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4702:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4724:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4716:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4716:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 457,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4736:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4728:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4728:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4701:41:2"
                  },
                  "returnParameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4767:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4767:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4766:6:2"
                  },
                  "scope": 799,
                  "src": "4680:244:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 528,
                    "nodeType": "Block",
                    "src": "5366:231:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 492,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 485,
                            "src": "5380:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5396:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5388:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 493,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5388:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5388:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5380:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 506,
                        "nodeType": "IfStatement",
                        "src": "5376:86:2",
                        "trueBody": {
                          "id": 505,
                          "nodeType": "Block",
                          "src": "5400:62:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 501,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5448:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 500,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5440:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 499,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5440:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 502,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5440:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 498,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "5421:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5421:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 504,
                              "nodeType": "RevertStatement",
                              "src": "5414:37:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 507,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 487,
                            "src": "5475:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5489:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5481:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 508,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5481:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5481:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5475:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 521,
                        "nodeType": "IfStatement",
                        "src": "5471:86:2",
                        "trueBody": {
                          "id": 520,
                          "nodeType": "Block",
                          "src": "5493:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 516,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5543:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 515,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5535:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 514,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5535:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 517,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5535:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 513,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 169,
                                  "src": "5514:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5514:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 519,
                              "nodeType": "RevertStatement",
                              "src": "5507:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 523,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 485,
                              "src": "5574:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 524,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 487,
                              "src": "5580:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 525,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "5584:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 522,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "5566:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5566:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 527,
                        "nodeType": "ExpressionStatement",
                        "src": "5566:24:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 483,
                    "nodeType": "StructuredDocumentation",
                    "src": "4930:362:2",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 529,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5306:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 490,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5324:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5316:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5316:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 487,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5338:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5330:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 486,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5330:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 489,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5350:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5342:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 488,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5342:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5315:41:2"
                  },
                  "returnParameters": {
                    "id": 491,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5366:0:2"
                  },
                  "scope": 799,
                  "src": "5297:300:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 605,
                    "nodeType": "Block",
                    "src": "5987:1032:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 539,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 532,
                            "src": "6001:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6017:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6009:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 540,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6009:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6009:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6001:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 576,
                          "nodeType": "Block",
                          "src": "6175:362:2",
                          "statements": [
                            {
                              "assignments": [
                                551
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 551,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6197:11:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 576,
                                  "src": "6189:19:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 550,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6189:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 555,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 552,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 307,
                                  "src": "6211:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 554,
                                "indexExpression": {
                                  "id": 553,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 532,
                                  "src": "6221:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6211:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6189:37:2"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 556,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 551,
                                  "src": "6244:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 557,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "6258:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6244:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 566,
                              "nodeType": "IfStatement",
                              "src": "6240:115:2",
                              "trueBody": {
                                "id": 565,
                                "nodeType": "Block",
                                "src": "6265:90:2",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 560,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 532,
                                          "src": "6315:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 561,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 551,
                                          "src": "6321:11:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 562,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 536,
                                          "src": "6334:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 559,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 159,
                                        "src": "6290:24:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 563,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6290:50:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 564,
                                    "nodeType": "RevertStatement",
                                    "src": "6283:57:2"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 575,
                              "nodeType": "UncheckedBlock",
                              "src": "6368:159:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 573,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 567,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 307,
                                        "src": "6475:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 569,
                                      "indexExpression": {
                                        "id": 568,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 532,
                                        "src": "6485:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6475:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 572,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 570,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 551,
                                        "src": "6493:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 571,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 536,
                                        "src": "6507:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6493:19:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6475:37:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 574,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6475:37:2"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 577,
                        "nodeType": "IfStatement",
                        "src": "5997:540:2",
                        "trueBody": {
                          "id": 549,
                          "nodeType": "Block",
                          "src": "6021:148:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 545,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 315,
                                  "src": "6137:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 546,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "6153:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6137:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 548,
                              "nodeType": "ExpressionStatement",
                              "src": "6137:21:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 578,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "6551:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6565:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6557:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 579,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6557:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6557:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6551:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 597,
                          "nodeType": "Block",
                          "src": "6766:206:2",
                          "statements": [
                            {
                              "id": 596,
                              "nodeType": "UncheckedBlock",
                              "src": "6780:182:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 594,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 590,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 307,
                                        "src": "6925:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 592,
                                      "indexExpression": {
                                        "id": 591,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 534,
                                        "src": "6935:2:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6925:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 593,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 536,
                                      "src": "6942:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6925:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 595,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6925:22:2"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 598,
                        "nodeType": "IfStatement",
                        "src": "6547:425:2",
                        "trueBody": {
                          "id": 589,
                          "nodeType": "Block",
                          "src": "6569:191:2",
                          "statements": [
                            {
                              "id": 588,
                              "nodeType": "UncheckedBlock",
                              "src": "6583:167:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 586,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 584,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 315,
                                      "src": "6714:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 585,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 536,
                                      "src": "6730:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6714:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 587,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6714:21:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 600,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "6996:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 601,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "7002:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 602,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 536,
                              "src": "7006:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 599,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 811,
                            "src": "6987:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6987:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 604,
                        "nodeType": "EmitStatement",
                        "src": "6982:30:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 530,
                    "nodeType": "StructuredDocumentation",
                    "src": "5603:304:2",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 606,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5921:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 532,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5937:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "5929:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5929:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 534,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5951:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "5943:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 533,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5943:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5963:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "5955:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5955:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5928:41:2"
                  },
                  "returnParameters": {
                    "id": 538,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5987:0:2"
                  },
                  "scope": 799,
                  "src": "5912:1107:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 638,
                    "nodeType": "Block",
                    "src": "7418:152:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 614,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "7432:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7451:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7443:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 615,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7443:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7443:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7432:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 628,
                        "nodeType": "IfStatement",
                        "src": "7428:91:2",
                        "trueBody": {
                          "id": 627,
                          "nodeType": "Block",
                          "src": "7455:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 623,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7505:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 622,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7497:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 621,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7497:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 624,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7497:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 620,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 169,
                                  "src": "7476:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7476:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 626,
                              "nodeType": "RevertStatement",
                              "src": "7469:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 632,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7544:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7536:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 630,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7536:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7536:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 634,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "7548:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 635,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 611,
                              "src": "7557:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 629,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "7528:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7528:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 637,
                        "nodeType": "ExpressionStatement",
                        "src": "7528:35:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 607,
                    "nodeType": "StructuredDocumentation",
                    "src": "7025:332:2",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 639,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7371:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 612,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7385:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "7377:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7377:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 611,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7402:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "7394:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7394:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7376:32:2"
                  },
                  "returnParameters": {
                    "id": 613,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7418:0:2"
                  },
                  "scope": 799,
                  "src": "7362:208:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 671,
                    "nodeType": "Block",
                    "src": "7944:150:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 647,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "7958:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 650,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7977:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7969:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 648,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7969:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7969:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7958:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 661,
                        "nodeType": "IfStatement",
                        "src": "7954:89:2",
                        "trueBody": {
                          "id": 660,
                          "nodeType": "Block",
                          "src": "7981:62:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 656,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8029:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 655,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8021:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 654,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8021:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 657,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8021:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 653,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "8002:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8002:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 659,
                              "nodeType": "RevertStatement",
                              "src": "7995:37:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 663,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "8060:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 666,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8077:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8069:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 664,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8069:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8069:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 668,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 644,
                              "src": "8081:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 662,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "8052:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8052:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 670,
                        "nodeType": "ExpressionStatement",
                        "src": "8052:35:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 640,
                    "nodeType": "StructuredDocumentation",
                    "src": "7576:307:2",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 672,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7897:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 642,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7911:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "7903:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 641,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7903:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 644,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7928:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "7920:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 643,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7920:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7902:32:2"
                  },
                  "returnParameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7944:0:2"
                  },
                  "scope": 799,
                  "src": "7888:206:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 689,
                    "nodeType": "Block",
                    "src": "8704:54:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 683,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 675,
                              "src": "8723:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 684,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 677,
                              "src": "8730:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 685,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "8739:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8746:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 682,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              690,
                              750
                            ],
                            "referencedDeclaration": 750,
                            "src": "8714:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8714:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 688,
                        "nodeType": "ExpressionStatement",
                        "src": "8714:37:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 673,
                    "nodeType": "StructuredDocumentation",
                    "src": "8100:525:2",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 690,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8639:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 680,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 675,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8656:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "8648:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 674,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8648:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 677,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8671:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "8663:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 676,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8663:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 679,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8688:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "8680:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 678,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8680:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8647:47:2"
                  },
                  "returnParameters": {
                    "id": 681,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8704:0:2"
                  },
                  "scope": 799,
                  "src": "8630:128:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 749,
                    "nodeType": "Block",
                    "src": "9703:334:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 702,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "9717:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9734:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9726:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 703,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9726:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9726:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9717:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 716,
                        "nodeType": "IfStatement",
                        "src": "9713:89:2",
                        "trueBody": {
                          "id": 715,
                          "nodeType": "Block",
                          "src": "9738:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 711,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9788:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 710,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9780:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 709,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9780:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 712,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9780:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 708,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 183,
                                  "src": "9759:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9759:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 714,
                              "nodeType": "RevertStatement",
                              "src": "9752:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 717,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 695,
                            "src": "9815:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9834:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9826:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 718,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9826:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9826:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9815:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 731,
                        "nodeType": "IfStatement",
                        "src": "9811:90:2",
                        "trueBody": {
                          "id": 730,
                          "nodeType": "Block",
                          "src": "9838:63:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 726,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9887:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 725,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9879:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 724,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9879:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 727,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9879:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 723,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 188,
                                  "src": "9859:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9859:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 729,
                              "nodeType": "RevertStatement",
                              "src": "9852:38:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 732,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 313,
                                "src": "9910:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 735,
                              "indexExpression": {
                                "id": 733,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 693,
                                "src": "9922:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9910:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 736,
                            "indexExpression": {
                              "id": 734,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 695,
                              "src": "9929:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9910:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 737,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 697,
                            "src": "9940:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9910:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 739,
                        "nodeType": "ExpressionStatement",
                        "src": "9910:35:2"
                      },
                      {
                        "condition": {
                          "id": 740,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 699,
                          "src": "9959:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 748,
                        "nodeType": "IfStatement",
                        "src": "9955:76:2",
                        "trueBody": {
                          "id": 747,
                          "nodeType": "Block",
                          "src": "9970:61:2",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 742,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 693,
                                    "src": "9998:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 743,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 695,
                                    "src": "10005:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 744,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 697,
                                    "src": "10014:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 741,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 820,
                                  "src": "9989:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9989:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 746,
                              "nodeType": "EmitStatement",
                              "src": "9984:36:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 691,
                    "nodeType": "StructuredDocumentation",
                    "src": "8764:836:2",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 750,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9614:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 700,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 693,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9631:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9623:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9623:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 695,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9646:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9638:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 694,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9638:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 697,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9663:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9655:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 696,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9655:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9675:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9670:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9670:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9622:63:2"
                  },
                  "returnParameters": {
                    "id": 701,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9703:0:2"
                  },
                  "scope": 799,
                  "src": "9605:432:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 797,
                    "nodeType": "Block",
                    "src": "10408:387:2",
                    "statements": [
                      {
                        "assignments": [
                          761
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 761,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10426:16:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 797,
                            "src": "10418:24:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 760,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10418:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 766,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 763,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "10455:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 764,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "10462:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 762,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "10445:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10445:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10418:52:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 767,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "10484:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 770,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10508:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 769,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10508:7:2",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 768,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10503:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10503:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10517:3:2",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10503:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10484:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 796,
                        "nodeType": "IfStatement",
                        "src": "10480:309:2",
                        "trueBody": {
                          "id": 795,
                          "nodeType": "Block",
                          "src": "10522:267:2",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 774,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 761,
                                  "src": "10540:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 775,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 757,
                                  "src": "10559:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10540:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 784,
                              "nodeType": "IfStatement",
                              "src": "10536:130:2",
                              "trueBody": {
                                "id": 783,
                                "nodeType": "Block",
                                "src": "10566:100:2",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 778,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 755,
                                          "src": "10618:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 779,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 761,
                                          "src": "10627:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 780,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 757,
                                          "src": "10645:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 777,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 178,
                                        "src": "10591:26:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 781,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10591:60:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 782,
                                    "nodeType": "RevertStatement",
                                    "src": "10584:67:2"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 794,
                              "nodeType": "UncheckedBlock",
                              "src": "10679:100:2",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 786,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 753,
                                        "src": "10716:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 787,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 755,
                                        "src": "10723:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 790,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 788,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 761,
                                          "src": "10732:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 789,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 757,
                                          "src": "10751:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10732:24:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 791,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10758:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 785,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        690,
                                        750
                                      ],
                                      "referencedDeclaration": 750,
                                      "src": "10707:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 792,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10707:57:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 793,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10707:57:2"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 751,
                    "nodeType": "StructuredDocumentation",
                    "src": "10043:271:2",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 798,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10328:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 753,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10352:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10344:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 752,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10344:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 755,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10367:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10359:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 754,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10359:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 757,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10384:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10376:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 756,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10376:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10343:47:2"
                  },
                  "returnParameters": {
                    "id": 759,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10408:0:2"
                  },
                  "scope": 799,
                  "src": "10319:476:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 800,
              "src": "1106:9691:2",
              "usedErrors": [
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "105:10693:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              877
            ]
          },
          "id": 878,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 801,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:25:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 802,
                "nodeType": "StructuredDocumentation",
                "src": "133:71:3",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 877,
              "linearizedBaseContracts": [
                877
              ],
              "name": "IERC20",
              "nameLocation": "215:6:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 803,
                    "nodeType": "StructuredDocumentation",
                    "src": "228:158:3",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 811,
                  "name": "Transfer",
                  "nameLocation": "397:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 805,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "422:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "406:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 804,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "406:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 807,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "444:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "428:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "428:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 809,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "456:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "448:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 808,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "448:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "405:57:3"
                  },
                  "src": "391:72:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 812,
                    "nodeType": "StructuredDocumentation",
                    "src": "469:148:3",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 820,
                  "name": "Approval",
                  "nameLocation": "628:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 819,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 814,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "653:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "637:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 813,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "637:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 816,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "676:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "660:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 815,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "660:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 818,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "693:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "685:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 817,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "685:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "636:63:3"
                  },
                  "src": "622:78:3"
                },
                {
                  "documentation": {
                    "id": 821,
                    "nodeType": "StructuredDocumentation",
                    "src": "706:65:3",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 826,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "785:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 822,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "796:2:3"
                  },
                  "returnParameters": {
                    "id": 825,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 824,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 826,
                        "src": "822:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 823,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:9:3"
                  },
                  "scope": 877,
                  "src": "776:55:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 827,
                    "nodeType": "StructuredDocumentation",
                    "src": "837:71:3",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 834,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "922:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 830,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 829,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "940:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 834,
                        "src": "932:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 828,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "932:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "931:17:3"
                  },
                  "returnParameters": {
                    "id": 833,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 832,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 834,
                        "src": "972:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 831,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "972:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "971:9:3"
                  },
                  "scope": 877,
                  "src": "913:68:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 835,
                    "nodeType": "StructuredDocumentation",
                    "src": "987:213:3",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 844,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1214:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 840,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 837,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1231:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1223:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 836,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 839,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1243:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1235:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 838,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1235:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1222:27:3"
                  },
                  "returnParameters": {
                    "id": 843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 842,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1268:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1268:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1267:6:3"
                  },
                  "scope": 877,
                  "src": "1205:69:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 845,
                    "nodeType": "StructuredDocumentation",
                    "src": "1280:264:3",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 854,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1558:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 850,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1576:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1568:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1568:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 849,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1591:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1583:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 848,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1583:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1567:32:3"
                  },
                  "returnParameters": {
                    "id": 853,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 852,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1623:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 851,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1623:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1622:9:3"
                  },
                  "scope": 877,
                  "src": "1549:83:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 855,
                    "nodeType": "StructuredDocumentation",
                    "src": "1638:667:3",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 864,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2319:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 860,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 857,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2335:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2327:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 856,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2327:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2352:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2344:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2344:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2326:32:3"
                  },
                  "returnParameters": {
                    "id": 863,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 862,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2377:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 861,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2377:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2376:6:3"
                  },
                  "scope": 877,
                  "src": "2310:73:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 865,
                    "nodeType": "StructuredDocumentation",
                    "src": "2389:297:3",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 876,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2700:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 872,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 867,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2721:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2713:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 866,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2713:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 869,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2735:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2727:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 868,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2727:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 871,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2747:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2739:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 870,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2739:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2712:41:3"
                  },
                  "returnParameters": {
                    "id": 875,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 874,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2772:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 873,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2772:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2771:6:3"
                  },
                  "scope": 877,
                  "src": "2691:87:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 878,
              "src": "205:2575:3",
              "usedErrors": [],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "106:2675:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
          "exportedSymbols": {
            "Context": [
              1013
            ],
            "ERC20": [
              799
            ],
            "ERC20Burnable": [
              923
            ]
          },
          "id": 924,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 879,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "124:24:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "../ERC20.sol",
              "id": 881,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 924,
              "sourceUnit": 800,
              "src": "150:35:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 880,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 799,
                    "src": "158:5:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../../utils/Context.sol",
              "id": 883,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 924,
              "sourceUnit": 1014,
              "src": "186:51:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 882,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1013,
                    "src": "194:7:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 885,
                    "name": "Context",
                    "nameLocations": [
                      "483:7:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1013,
                    "src": "483:7:4"
                  },
                  "id": 886,
                  "nodeType": "InheritanceSpecifier",
                  "src": "483:7:4"
                },
                {
                  "baseName": {
                    "id": 887,
                    "name": "ERC20",
                    "nameLocations": [
                      "492:5:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 799,
                    "src": "492:5:4"
                  },
                  "id": 888,
                  "nodeType": "InheritanceSpecifier",
                  "src": "492:5:4"
                }
              ],
              "canonicalName": "ERC20Burnable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 884,
                "nodeType": "StructuredDocumentation",
                "src": "239:208:4",
                "text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
              },
              "fullyImplemented": true,
              "id": 923,
              "linearizedBaseContracts": [
                923,
                799,
                189,
                983,
                877,
                1013
              ],
              "name": "ERC20Burnable",
              "nameLocation": "466:13:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 900,
                    "nodeType": "Block",
                    "src": "662:43:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 895,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 995,
                                "src": "678:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "678:12:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 897,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 891,
                              "src": "692:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 894,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 672,
                            "src": "672:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "672:26:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 899,
                        "nodeType": "ExpressionStatement",
                        "src": "672:26:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 889,
                    "nodeType": "StructuredDocumentation",
                    "src": "504:109:4",
                    "text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
                  },
                  "functionSelector": "42966c68",
                  "id": 901,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "627:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 892,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 891,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "640:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 901,
                        "src": "632:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 890,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "632:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "631:15:4"
                  },
                  "returnParameters": {
                    "id": 893,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "662:0:4"
                  },
                  "scope": 923,
                  "src": "618:87:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 921,
                    "nodeType": "Block",
                    "src": "1086:93:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 910,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 904,
                              "src": "1112:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 911,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 995,
                                "src": "1121:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1121:12:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 913,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "1135:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 909,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 798,
                            "src": "1096:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1096:45:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 915,
                        "nodeType": "ExpressionStatement",
                        "src": "1096:45:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 917,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 904,
                              "src": "1157:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 918,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "1166:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 916,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 672,
                            "src": "1151:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1151:21:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 920,
                        "nodeType": "ExpressionStatement",
                        "src": "1151:21:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 902,
                    "nodeType": "StructuredDocumentation",
                    "src": "711:305:4",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "79cc6790",
                  "id": 922,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burnFrom",
                  "nameLocation": "1030:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 907,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 904,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1047:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 922,
                        "src": "1039:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 903,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1039:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 906,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1064:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 922,
                        "src": "1056:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 905,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1056:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1038:32:4"
                  },
                  "returnParameters": {
                    "id": 908,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1086:0:4"
                  },
                  "scope": 923,
                  "src": "1021:158:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 924,
              "src": "448:733:4",
              "usedErrors": [
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "124:1058:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
          "exportedSymbols": {
            "ERC20": [
              799
            ],
            "ERC20Pausable": [
              957
            ],
            "Pausable": [
              1121
            ]
          },
          "id": 958,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 925,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "124:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "../ERC20.sol",
              "id": 927,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 958,
              "sourceUnit": 800,
              "src": "150:35:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 926,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 799,
                    "src": "158:5:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "../../../utils/Pausable.sol",
              "id": 929,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 958,
              "sourceUnit": 1122,
              "src": "186:53:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 928,
                    "name": "Pausable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1121,
                    "src": "194:8:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 931,
                    "name": "ERC20",
                    "nameLocations": [
                      "965:5:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 799,
                    "src": "965:5:5"
                  },
                  "id": 932,
                  "nodeType": "InheritanceSpecifier",
                  "src": "965:5:5"
                },
                {
                  "baseName": {
                    "id": 933,
                    "name": "Pausable",
                    "nameLocations": [
                      "972:8:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1121,
                    "src": "972:8:5"
                  },
                  "id": 934,
                  "nodeType": "InheritanceSpecifier",
                  "src": "972:8:5"
                }
              ],
              "canonicalName": "ERC20Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 930,
                "nodeType": "StructuredDocumentation",
                "src": "241:688:5",
                "text": " @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
              },
              "fullyImplemented": true,
              "id": 957,
              "linearizedBaseContracts": [
                957,
                1121,
                799,
                189,
                983,
                877,
                1013
              ],
              "name": "ERC20Pausable",
              "nameLocation": "948:13:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    606
                  ],
                  "body": {
                    "id": 955,
                    "nodeType": "Block",
                    "src": "1211:47:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 950,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 937,
                              "src": "1235:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 951,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 939,
                              "src": "1241:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 952,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 941,
                              "src": "1245:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 947,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "1221:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC20Pausable_$957_$",
                                "typeString": "type(contract super ERC20Pausable)"
                              }
                            },
                            "id": 949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1227:7:5",
                            "memberName": "_update",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 606,
                            "src": "1221:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1221:30:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 954,
                        "nodeType": "ExpressionStatement",
                        "src": "1221:30:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 935,
                    "nodeType": "StructuredDocumentation",
                    "src": "987:121:5",
                    "text": " @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."
                  },
                  "id": 956,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 945,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 944,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "1197:13:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1046,
                        "src": "1197:13:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1197:13:5"
                    }
                  ],
                  "name": "_update",
                  "nameLocation": "1122:7:5",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 943,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1188:8:5"
                  },
                  "parameters": {
                    "id": 942,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 937,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1138:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 956,
                        "src": "1130:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 936,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1130:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 939,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1152:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 956,
                        "src": "1144:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 938,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1144:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 941,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1164:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 956,
                        "src": "1156:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 940,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1156:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1129:41:5"
                  },
                  "returnParameters": {
                    "id": 946,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1211:0:5"
                  },
                  "scope": 957,
                  "src": "1113:145:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 958,
              "src": "930:330:5",
              "usedErrors": [
                159,
                164,
                169,
                178,
                183,
                188,
                1035,
                1038
              ],
              "usedEvents": [
                811,
                820,
                1027,
                1032
              ]
            }
          ],
          "src": "124:1137:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              877
            ],
            "IERC20Metadata": [
              983
            ]
          },
          "id": 984,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 959,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".2"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 961,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 984,
              "sourceUnit": 878,
              "src": "151:37:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 960,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "159:6:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 963,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 877,
                    "src": "306:6:6"
                  },
                  "id": 964,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:6"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 962,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:6",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 983,
              "linearizedBaseContracts": [
                983,
                877
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 965,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:6",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 970,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 966,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:6"
                  },
                  "returnParameters": {
                    "id": 969,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 968,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 970,
                        "src": "417:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 967,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:6"
                  },
                  "scope": 983,
                  "src": "378:54:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 971,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:6",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 976,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 972,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:6"
                  },
                  "returnParameters": {
                    "id": 975,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 974,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 976,
                        "src": "540:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 973,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:6"
                  },
                  "scope": 983,
                  "src": "499:56:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 977,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:6",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 982,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 978,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:6"
                  },
                  "returnParameters": {
                    "id": 981,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 980,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 982,
                        "src": "674:5:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 979,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:6"
                  },
                  "scope": 983,
                  "src": "631:50:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 984,
              "src": "278:405:6",
              "usedErrors": [],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "125:559:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              1013
            ]
          },
          "id": 1014,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 985,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:7"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 986,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:7",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 1013,
              "linearizedBaseContracts": [
                1013
              ],
              "name": "Context",
              "nameLocation": "642:7:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 994,
                    "nodeType": "Block",
                    "src": "718:34:7",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 991,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:7",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 990,
                        "id": 993,
                        "nodeType": "Return",
                        "src": "728:17:7"
                      }
                    ]
                  },
                  "id": 995,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 987,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:7"
                  },
                  "returnParameters": {
                    "id": 990,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 989,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 995,
                        "src": "709:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 988,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:7"
                  },
                  "scope": 1013,
                  "src": "656:96:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1003,
                    "nodeType": "Block",
                    "src": "825:32:7",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1000,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:7",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 999,
                        "id": 1002,
                        "nodeType": "Return",
                        "src": "835:15:7"
                      }
                    ]
                  },
                  "id": 1004,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 996,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:7"
                  },
                  "returnParameters": {
                    "id": 999,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 998,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1004,
                        "src": "809:14:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 997,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:7"
                  },
                  "scope": 1013,
                  "src": "758:99:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1011,
                    "nodeType": "Block",
                    "src": "935:25:7",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1008,
                        "id": 1010,
                        "nodeType": "Return",
                        "src": "945:8:7"
                      }
                    ]
                  },
                  "id": 1012,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1005,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:7"
                  },
                  "returnParameters": {
                    "id": 1008,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1007,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1012,
                        "src": "926:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1006,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:7"
                  },
                  "scope": 1013,
                  "src": "863:97:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1014,
              "src": "624:338:7",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:7"
        },
        "id": 7
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              1013
            ],
            "Pausable": [
              1121
            ]
          },
          "id": 1122,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1015,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 1017,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1122,
              "sourceUnit": 1014,
              "src": "128:45:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1016,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1013,
                    "src": "136:7:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1019,
                    "name": "Context",
                    "nameLocations": [
                      "645:7:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1013,
                    "src": "645:7:8"
                  },
                  "id": 1020,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:7:8"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1018,
                "nodeType": "StructuredDocumentation",
                "src": "175:439:8",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 1121,
              "linearizedBaseContracts": [
                1121,
                1013
              ],
              "name": "Pausable",
              "nameLocation": "633:8:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1022,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "672:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1121,
                  "src": "659:20:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1021,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1023,
                    "nodeType": "StructuredDocumentation",
                    "src": "686:73:8",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 1027,
                  "name": "Paused",
                  "nameLocation": "770:6:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1026,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1025,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "785:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1027,
                        "src": "777:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1024,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:17:8"
                  },
                  "src": "764:30:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1028,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:70:8",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 1032,
                  "name": "Unpaused",
                  "nameLocation": "881:8:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1031,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1030,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "898:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1032,
                        "src": "890:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1029,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:17:8"
                  },
                  "src": "875:32:8"
                },
                {
                  "documentation": {
                    "id": 1033,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:76:8",
                    "text": " @dev The operation failed because the contract is paused."
                  },
                  "errorSelector": "d93c0665",
                  "id": 1035,
                  "name": "EnforcedPause",
                  "nameLocation": "1000:13:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1034,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1013:2:8"
                  },
                  "src": "994:22:8"
                },
                {
                  "documentation": {
                    "id": 1036,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:80:8",
                    "text": " @dev The operation failed because the contract is not paused."
                  },
                  "errorSelector": "8dfc202b",
                  "id": 1038,
                  "name": "ExpectedPause",
                  "nameLocation": "1113:13:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1037,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1126:2:8"
                  },
                  "src": "1107:22:8"
                },
                {
                  "body": {
                    "id": 1045,
                    "nodeType": "Block",
                    "src": "1340:47:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1041,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1075,
                            "src": "1350:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:19:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1043,
                        "nodeType": "ExpressionStatement",
                        "src": "1350:19:8"
                      },
                      {
                        "id": 1044,
                        "nodeType": "PlaceholderStatement",
                        "src": "1379:1:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1039,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:175:8",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 1046,
                  "name": "whenNotPaused",
                  "nameLocation": "1324:13:8",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1040,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1337:2:8"
                  },
                  "src": "1315:72:8",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1053,
                    "nodeType": "Block",
                    "src": "1587:44:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1049,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1088,
                            "src": "1597:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1597:16:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1051,
                        "nodeType": "ExpressionStatement",
                        "src": "1597:16:8"
                      },
                      {
                        "id": 1052,
                        "nodeType": "PlaceholderStatement",
                        "src": "1623:1:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1047,
                    "nodeType": "StructuredDocumentation",
                    "src": "1393:167:8",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 1054,
                  "name": "whenPaused",
                  "nameLocation": "1574:10:8",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1048,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1584:2:8"
                  },
                  "src": "1565:66:8",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1062,
                    "nodeType": "Block",
                    "src": "1779:31:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1060,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1022,
                          "src": "1796:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1059,
                        "id": 1061,
                        "nodeType": "Return",
                        "src": "1789:14:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1055,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:84:8",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 1063,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1735:6:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1056,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1741:2:8"
                  },
                  "returnParameters": {
                    "id": 1059,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1058,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1063,
                        "src": "1773:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1057,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:6:8"
                  },
                  "scope": 1121,
                  "src": "1726:84:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1074,
                    "nodeType": "Block",
                    "src": "1929:77:8",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1067,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1063,
                            "src": "1943:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1943:8:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1073,
                        "nodeType": "IfStatement",
                        "src": "1939:61:8",
                        "trueBody": {
                          "id": 1072,
                          "nodeType": "Block",
                          "src": "1953:47:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1069,
                                  "name": "EnforcedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1035,
                                  "src": "1974:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1070,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1974:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1071,
                              "nodeType": "RevertStatement",
                              "src": "1967:22:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1064,
                    "nodeType": "StructuredDocumentation",
                    "src": "1816:57:8",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 1075,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1887:17:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1065,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1904:2:8"
                  },
                  "returnParameters": {
                    "id": 1066,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1929:0:8"
                  },
                  "scope": 1121,
                  "src": "1878:128:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1087,
                    "nodeType": "Block",
                    "src": "2126:78:8",
                    "statements": [
                      {
                        "condition": {
                          "id": 1081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2140:9:8",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1079,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1063,
                              "src": "2141:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 1080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2141:8:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1086,
                        "nodeType": "IfStatement",
                        "src": "2136:62:8",
                        "trueBody": {
                          "id": 1085,
                          "nodeType": "Block",
                          "src": "2151:47:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1082,
                                  "name": "ExpectedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1038,
                                  "src": "2172:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1083,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2172:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1084,
                              "nodeType": "RevertStatement",
                              "src": "2165:22:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1076,
                    "nodeType": "StructuredDocumentation",
                    "src": "2012:61:8",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 1088,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "2087:14:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1077,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2101:2:8"
                  },
                  "returnParameters": {
                    "id": 1078,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2126:0:8"
                  },
                  "scope": 1121,
                  "src": "2078:126:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1103,
                    "nodeType": "Block",
                    "src": "2388:66:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1094,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1022,
                            "src": "2398:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1095,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2408:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2398:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1097,
                        "nodeType": "ExpressionStatement",
                        "src": "2398:14:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1099,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 995,
                                "src": "2434:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2434:12:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1098,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "2427:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2427:20:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1102,
                        "nodeType": "EmitStatement",
                        "src": "2422:25:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1089,
                    "nodeType": "StructuredDocumentation",
                    "src": "2210:124:8",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 1104,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1092,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1091,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2374:13:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1046,
                        "src": "2374:13:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2374:13:8"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2348:6:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1090,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2354:2:8"
                  },
                  "returnParameters": {
                    "id": 1093,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2388:0:8"
                  },
                  "scope": 1121,
                  "src": "2339:115:8",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1119,
                    "nodeType": "Block",
                    "src": "2634:69:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1110,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1022,
                            "src": "2644:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2654:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2644:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1113,
                        "nodeType": "ExpressionStatement",
                        "src": "2644:15:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1115,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 995,
                                "src": "2683:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2683:12:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1114,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1032,
                            "src": "2674:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2674:22:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1118,
                        "nodeType": "EmitStatement",
                        "src": "2669:27:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1105,
                    "nodeType": "StructuredDocumentation",
                    "src": "2460:121:8",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 1120,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1108,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1107,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2623:10:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1054,
                        "src": "2623:10:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2623:10:8"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2595:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1106,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:8"
                  },
                  "returnParameters": {
                    "id": 1109,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2634:0:8"
                  },
                  "scope": 1121,
                  "src": "2586:117:8",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1122,
              "src": "615:2090:8",
              "usedErrors": [
                1035,
                1038
              ],
              "usedEvents": [
                1027,
                1032
              ]
            }
          ],
          "src": "102:2604:8"
        },
        "id": 8
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              1190
            ]
          },
          "id": 1191,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1123,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:9"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1124,
                "nodeType": "StructuredDocumentation",
                "src": "135:894:9",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 1190,
              "linearizedBaseContracts": [
                1190
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "1048:15:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1127,
                  "mutability": "constant",
                  "name": "NOT_ENTERED",
                  "nameLocation": "1843:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "1818:40:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1857:1:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 1130,
                  "mutability": "constant",
                  "name": "ENTERED",
                  "nameLocation": "1889:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "1864:36:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 1129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1899:1:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1132,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1923:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "1907:23:9",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 1133,
                    "nodeType": "StructuredDocumentation",
                    "src": "1937:52:9",
                    "text": " @dev Unauthorized reentrant call."
                  },
                  "errorSelector": "3ee5aeb5",
                  "id": 1135,
                  "name": "ReentrancyGuardReentrantCall",
                  "nameLocation": "2000:28:9",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1134,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:9"
                  },
                  "src": "1994:37:9"
                },
                {
                  "body": {
                    "id": 1142,
                    "nodeType": "Block",
                    "src": "2051:38:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1138,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1132,
                            "src": "2061:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1139,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1127,
                            "src": "2071:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2061:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1141,
                        "nodeType": "ExpressionStatement",
                        "src": "2061:21:9"
                      }
                    ]
                  },
                  "id": 1143,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1136,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2048:2:9"
                  },
                  "returnParameters": {
                    "id": 1137,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2051:0:9"
                  },
                  "scope": 1190,
                  "src": "2037:52:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1153,
                    "nodeType": "Block",
                    "src": "2490:79:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1146,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1170,
                            "src": "2500:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2500:21:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1148,
                        "nodeType": "ExpressionStatement",
                        "src": "2500:21:9"
                      },
                      {
                        "id": 1149,
                        "nodeType": "PlaceholderStatement",
                        "src": "2531:1:9"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1150,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1178,
                            "src": "2542:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2542:20:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1152,
                        "nodeType": "ExpressionStatement",
                        "src": "2542:20:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1144,
                    "nodeType": "StructuredDocumentation",
                    "src": "2095:366:9",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 1154,
                  "name": "nonReentrant",
                  "nameLocation": "2475:12:9",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1145,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2487:2:9"
                  },
                  "src": "2466:103:9",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1169,
                    "nodeType": "Block",
                    "src": "2614:268:9",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1157,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1132,
                            "src": "2702:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1158,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "2713:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2702:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1164,
                        "nodeType": "IfStatement",
                        "src": "2698:86:9",
                        "trueBody": {
                          "id": 1163,
                          "nodeType": "Block",
                          "src": "2722:62:9",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1160,
                                  "name": "ReentrancyGuardReentrantCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1135,
                                  "src": "2743:28:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1161,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2743:30:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1162,
                              "nodeType": "RevertStatement",
                              "src": "2736:37:9"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1165,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1132,
                            "src": "2858:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1166,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "2868:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2858:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1168,
                        "nodeType": "ExpressionStatement",
                        "src": "2858:17:9"
                      }
                    ]
                  },
                  "id": 1170,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2584:19:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1155,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:9"
                  },
                  "returnParameters": {
                    "id": 1156,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2614:0:9"
                  },
                  "scope": 1190,
                  "src": "2575:307:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1177,
                    "nodeType": "Block",
                    "src": "2926:170:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1173,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1132,
                            "src": "3068:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1174,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1127,
                            "src": "3078:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3068:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1176,
                        "nodeType": "ExpressionStatement",
                        "src": "3068:21:9"
                      }
                    ]
                  },
                  "id": 1178,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2897:18:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1171,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2915:2:9"
                  },
                  "returnParameters": {
                    "id": 1172,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2926:0:9"
                  },
                  "scope": 1190,
                  "src": "2888:208:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1188,
                    "nodeType": "Block",
                    "src": "3339:42:9",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1184,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1132,
                            "src": "3356:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1185,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "3367:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3356:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1183,
                        "id": 1187,
                        "nodeType": "Return",
                        "src": "3349:25:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1179,
                    "nodeType": "StructuredDocumentation",
                    "src": "3102:168:9",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 1189,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3284:23:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1180,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3307:2:9"
                  },
                  "returnParameters": {
                    "id": 1183,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1182,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1189,
                        "src": "3333:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1181,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:6:9"
                  },
                  "scope": 1190,
                  "src": "3275:106:9",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1191,
              "src": "1030:2353:9",
              "usedErrors": [
                1135
              ],
              "usedEvents": []
            }
          ],
          "src": "109:3275:9"
        },
        "id": 9
      },
      "contracts/.deps/npm/@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              2269
            ],
            "Ownable": [
              1338
            ]
          },
          "id": 1339,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1192,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:10"
            },
            {
              "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 1194,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1339,
              "sourceUnit": 2270,
              "src": "128:45:10",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1193,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2269,
                    "src": "136:7:10",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1196,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:10"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2269,
                    "src": "692:7:10"
                  },
                  "id": 1197,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:10"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1195,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:10",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 1338,
              "linearizedBaseContracts": [
                1338,
                2269
              ],
              "name": "Ownable",
              "nameLocation": "681:7:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1199,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1338,
                  "src": "706:22:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 1200,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:10",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 1204,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:10",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1203,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1202,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1204,
                        "src": "858:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1201,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:10"
                  },
                  "src": "825:50:10"
                },
                {
                  "documentation": {
                    "id": 1205,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:10",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 1209,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:10",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1207,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1209,
                        "src": "994:13:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:10"
                  },
                  "src": "968:41:10"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 1215,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:10",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1211,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1215,
                        "src": "1042:29:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1210,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1213,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1215,
                        "src": "1073:24:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1212,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:10"
                  },
                  "src": "1015:84:10"
                },
                {
                  "body": {
                    "id": 1240,
                    "nodeType": "Block",
                    "src": "1259:153:10",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1221,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1218,
                            "src": "1273:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1224,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1222,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1225,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1235,
                        "nodeType": "IfStatement",
                        "src": "1269:95:10",
                        "trueBody": {
                          "id": 1234,
                          "nodeType": "Block",
                          "src": "1301:63:10",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1230,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1229,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1228,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:10",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1231,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1227,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1209,
                                  "src": "1322:19:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1233,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:10"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1237,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1218,
                              "src": "1392:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1236,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1337,
                            "src": "1373:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1239,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1216,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:10",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 1241,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1219,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1218,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1241,
                        "src": "1237:20:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1217,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:10"
                  },
                  "returnParameters": {
                    "id": 1220,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:10"
                  },
                  "scope": 1338,
                  "src": "1225:187:10",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1248,
                    "nodeType": "Block",
                    "src": "1521:41:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1244,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1275,
                            "src": "1531:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1246,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:10"
                      },
                      {
                        "id": 1247,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1242,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:10",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 1249,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:10",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1243,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:10"
                  },
                  "src": "1500:62:10",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1257,
                    "nodeType": "Block",
                    "src": "1693:30:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1255,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "1710:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1254,
                        "id": 1256,
                        "nodeType": "Return",
                        "src": "1703:13:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1250,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:10",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 1258,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1251,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:10"
                  },
                  "returnParameters": {
                    "id": 1254,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1253,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1258,
                        "src": "1684:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1252,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:10"
                  },
                  "scope": 1338,
                  "src": "1638:85:10",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1274,
                    "nodeType": "Block",
                    "src": "1841:117:10",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1262,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1258,
                              "src": "1855:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1264,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2251,
                              "src": "1866:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1273,
                        "nodeType": "IfStatement",
                        "src": "1851:101:10",
                        "trueBody": {
                          "id": 1272,
                          "nodeType": "Block",
                          "src": "1880:72:10",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 1268,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2251,
                                      "src": "1928:10:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 1269,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1267,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1204,
                                  "src": "1901:26:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1271,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:10"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1259,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:10",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 1275,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1260,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:10"
                  },
                  "returnParameters": {
                    "id": 1261,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:10"
                  },
                  "scope": 1338,
                  "src": "1796:162:10",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1288,
                    "nodeType": "Block",
                    "src": "2347:47:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1284,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1282,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1281,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1337,
                            "src": "2357:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1287,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1276,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:10",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 1289,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1279,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1278,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1249,
                        "src": "2337:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:10"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1277,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:10"
                  },
                  "returnParameters": {
                    "id": 1280,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:10"
                  },
                  "scope": 1338,
                  "src": "2293:101:10",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1316,
                    "nodeType": "Block",
                    "src": "2613:145:10",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1297,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1292,
                            "src": "2627:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1298,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1311,
                        "nodeType": "IfStatement",
                        "src": "2623:91:10",
                        "trueBody": {
                          "id": 1310,
                          "nodeType": "Block",
                          "src": "2651:63:10",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1306,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1305,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1304,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:10",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1307,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1303,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1209,
                                  "src": "2672:19:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1308,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1309,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:10"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1313,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1292,
                              "src": "2742:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1312,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1337,
                            "src": "2723:18:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1315,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1290,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:10",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 1317,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1295,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1294,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:10"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1249,
                        "src": "2603:9:10"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:10"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1293,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1292,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1317,
                        "src": "2570:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1291,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:10"
                  },
                  "returnParameters": {
                    "id": 1296,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:10"
                  },
                  "scope": 1338,
                  "src": "2543:215:10",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1336,
                    "nodeType": "Block",
                    "src": "2975:124:10",
                    "statements": [
                      {
                        "assignments": [
                          1324
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1324,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 1336,
                            "src": "2985:16:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1323,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:10",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1326,
                        "initialValue": {
                          "id": 1325,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "3004:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:10"
                      },
                      {
                        "expression": {
                          "id": 1329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1327,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "3020:6:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1328,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1320,
                            "src": "3029:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1330,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1332,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1324,
                              "src": "3073:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1333,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1320,
                              "src": "3083:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1331,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1215,
                            "src": "3052:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1335,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:10"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1318,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:10",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 1337,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1321,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1320,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1337,
                        "src": "2940:16:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1319,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:10"
                  },
                  "returnParameters": {
                    "id": 1322,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:10"
                  },
                  "scope": 1338,
                  "src": "2912:187:10",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1339,
              "src": "663:2438:10",
              "usedErrors": [
                1204,
                1209
              ],
              "usedEvents": [
                1215
              ]
            }
          ],
          "src": "102:3000:10"
        },
        "id": 10
      },
      "contracts/.deps/npm/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              1475
            ],
            "IERC20Errors": [
              1380
            ],
            "IERC721Errors": [
              1428
            ]
          },
          "id": 1476,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1340,
              "literals": [
                "solidity",
                ">=",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:11"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1341,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:11",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 1380,
              "linearizedBaseContracts": [
                1380
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1342,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:11",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 1350,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1344,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1350,
                        "src": "654:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1343,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1346,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1350,
                        "src": "670:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1345,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1348,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1350,
                        "src": "687:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1347,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:11"
                  },
                  "src": "623:80:11"
                },
                {
                  "documentation": {
                    "id": 1351,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:11",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 1355,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1354,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1353,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1355,
                        "src": "891:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1352,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:11"
                  },
                  "src": "866:41:11"
                },
                {
                  "documentation": {
                    "id": 1356,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:11",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 1360,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1358,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1360,
                        "src": "1104:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1357,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:11"
                  },
                  "src": "1077:45:11"
                },
                {
                  "documentation": {
                    "id": 1361,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:11",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 1369,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1368,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1363,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1369,
                        "src": "1511:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1362,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1365,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1369,
                        "src": "1528:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1364,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1367,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1369,
                        "src": "1547:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1366,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:11"
                  },
                  "src": "1478:85:11"
                },
                {
                  "documentation": {
                    "id": 1370,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:11",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 1374,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1373,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1372,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1374,
                        "src": "1775:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1371,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:11"
                  },
                  "src": "1748:45:11"
                },
                {
                  "documentation": {
                    "id": 1375,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:11",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 1379,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1378,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1377,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1379,
                        "src": "2025:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1376,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:11"
                  },
                  "src": "1999:43:11"
                }
              ],
              "scope": 1476,
              "src": "280:1764:11",
              "usedErrors": [
                1350,
                1355,
                1360,
                1369,
                1374,
                1379
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1381,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:11",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 1428,
              "linearizedBaseContracts": [
                1428
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1382,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:11",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 1386,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1385,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1384,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1386,
                        "src": "2469:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1383,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:11"
                  },
                  "src": "2444:40:11"
                },
                {
                  "documentation": {
                    "id": 1387,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:11",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 1391,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1390,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1389,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1391,
                        "src": "2656:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1388,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:11"
                  },
                  "src": "2627:46:11"
                },
                {
                  "documentation": {
                    "id": 1392,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:11",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 1400,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1399,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1394,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1400,
                        "src": "3000:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1393,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1396,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1400,
                        "src": "3016:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1395,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1398,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1400,
                        "src": "3033:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1397,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:11"
                  },
                  "src": "2973:75:11"
                },
                {
                  "documentation": {
                    "id": 1401,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:11",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 1405,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1404,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1403,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1405,
                        "src": "3237:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1402,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:11"
                  },
                  "src": "3211:42:11"
                },
                {
                  "documentation": {
                    "id": 1406,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:11",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 1410,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1409,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1408,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1410,
                        "src": "3451:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1407,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:11"
                  },
                  "src": "3423:46:11"
                },
                {
                  "documentation": {
                    "id": 1411,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:11",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 1417,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1416,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1413,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1417,
                        "src": "3760:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1412,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1415,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1417,
                        "src": "3778:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1414,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:11"
                  },
                  "src": "3727:68:11"
                },
                {
                  "documentation": {
                    "id": 1418,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:11",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 1422,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1421,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1420,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1422,
                        "src": "4008:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1419,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:11"
                  },
                  "src": "3980:46:11"
                },
                {
                  "documentation": {
                    "id": 1423,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:11",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 1427,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1426,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1425,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1427,
                        "src": "4262:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1424,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:11"
                  },
                  "src": "4234:46:11"
                }
              ],
              "scope": 1476,
              "src": "2190:2092:11",
              "usedErrors": [
                1386,
                1391,
                1400,
                1405,
                1410,
                1417,
                1422,
                1427
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1429,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:11",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 1475,
              "linearizedBaseContracts": [
                1475
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1430,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:11",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 1440,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1439,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1432,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1440,
                        "src": "4860:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1431,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1434,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1440,
                        "src": "4876:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1433,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1436,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1440,
                        "src": "4893:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1435,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1438,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1440,
                        "src": "4909:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1437,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:11"
                  },
                  "src": "4827:99:11"
                },
                {
                  "documentation": {
                    "id": 1441,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:11",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 1445,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1444,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1443,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1445,
                        "src": "5116:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1442,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:11"
                  },
                  "src": "5089:43:11"
                },
                {
                  "documentation": {
                    "id": 1446,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:11",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 1450,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1449,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1448,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1450,
                        "src": "5331:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1447,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:11"
                  },
                  "src": "5302:47:11"
                },
                {
                  "documentation": {
                    "id": 1451,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:11",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 1457,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1456,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1453,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1457,
                        "src": "5651:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1455,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1457,
                        "src": "5669:13:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:11"
                  },
                  "src": "5616:68:11"
                },
                {
                  "documentation": {
                    "id": 1458,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:11",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 1462,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1460,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1462,
                        "src": "5898:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1459,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:11"
                  },
                  "src": "5869:47:11"
                },
                {
                  "documentation": {
                    "id": 1463,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:11",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 1467,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1466,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1465,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1467,
                        "src": "6153:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1464,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:11"
                  },
                  "src": "6124:47:11"
                },
                {
                  "documentation": {
                    "id": 1468,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:11",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 1474,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:11",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1473,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1470,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1474,
                        "src": "6494:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1469,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1472,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1474,
                        "src": "6513:20:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1471,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:11"
                  },
                  "src": "6462:73:11"
                }
              ],
              "scope": 1476,
              "src": "4430:2107:11",
              "usedErrors": [
                1440,
                1445,
                1450,
                1457,
                1462,
                1467,
                1474
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:11"
        },
        "id": 11
      },
      "contracts/.deps/npm/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/security/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              1540
            ]
          },
          "id": 1541,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1477,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:23:12"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1478,
                "nodeType": "StructuredDocumentation",
                "src": "137:750:12",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 1540,
              "linearizedBaseContracts": [
                1540
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "906:15:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1481,
                  "mutability": "constant",
                  "name": "_NOT_ENTERED",
                  "nameLocation": "1701:12:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1540,
                  "src": "1676:41:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1676:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 1480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1716:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 1484,
                  "mutability": "constant",
                  "name": "_ENTERED",
                  "nameLocation": "1748:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1540,
                  "src": "1723:37:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1723:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 1483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1759:1:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1486,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1783:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1540,
                  "src": "1767:23:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1767:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1493,
                    "nodeType": "Block",
                    "src": "1811:39:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1489,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1486,
                            "src": "1821:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1490,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1481,
                            "src": "1831:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1821:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1492,
                        "nodeType": "ExpressionStatement",
                        "src": "1821:22:12"
                      }
                    ]
                  },
                  "id": 1494,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1487,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1808:2:12"
                  },
                  "returnParameters": {
                    "id": 1488,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1811:0:12"
                  },
                  "scope": 1540,
                  "src": "1797:53:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1504,
                    "nodeType": "Block",
                    "src": "2251:79:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1497,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1520,
                            "src": "2261:19:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2261:21:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1499,
                        "nodeType": "ExpressionStatement",
                        "src": "2261:21:12"
                      },
                      {
                        "id": 1500,
                        "nodeType": "PlaceholderStatement",
                        "src": "2292:1:12"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1501,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1528,
                            "src": "2303:18:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2303:20:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1503,
                        "nodeType": "ExpressionStatement",
                        "src": "2303:20:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1495,
                    "nodeType": "StructuredDocumentation",
                    "src": "1856:366:12",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 1505,
                  "name": "nonReentrant",
                  "nameLocation": "2236:12:12",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1496,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2248:2:12"
                  },
                  "src": "2227:103:12",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1519,
                    "nodeType": "Block",
                    "src": "2375:248:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1509,
                                "name": "_status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1486,
                                "src": "2468:7:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 1510,
                                "name": "_ENTERED",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1484,
                                "src": "2479:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2468:19:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                              "id": 1512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2489:33:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              },
                              "value": "ReentrancyGuard: reentrant call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              }
                            ],
                            "id": 1508,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2460:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2460:63:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1514,
                        "nodeType": "ExpressionStatement",
                        "src": "2460:63:12"
                      },
                      {
                        "expression": {
                          "id": 1517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1515,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1486,
                            "src": "2598:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1516,
                            "name": "_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1484,
                            "src": "2608:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2598:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1518,
                        "nodeType": "ExpressionStatement",
                        "src": "2598:18:12"
                      }
                    ]
                  },
                  "id": 1520,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2345:19:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1506,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2364:2:12"
                  },
                  "returnParameters": {
                    "id": 1507,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2375:0:12"
                  },
                  "scope": 1540,
                  "src": "2336:287:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1527,
                    "nodeType": "Block",
                    "src": "2667:171:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1523,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1486,
                            "src": "2809:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1524,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1481,
                            "src": "2819:12:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2809:22:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1526,
                        "nodeType": "ExpressionStatement",
                        "src": "2809:22:12"
                      }
                    ]
                  },
                  "id": 1528,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2638:18:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1521,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2656:2:12"
                  },
                  "returnParameters": {
                    "id": 1522,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2667:0:12"
                  },
                  "scope": 1540,
                  "src": "2629:209:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1538,
                    "nodeType": "Block",
                    "src": "3081:43:12",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1534,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1486,
                            "src": "3098:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1535,
                            "name": "_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1484,
                            "src": "3109:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3098:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1533,
                        "id": 1537,
                        "nodeType": "Return",
                        "src": "3091:26:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1529,
                    "nodeType": "StructuredDocumentation",
                    "src": "2844:168:12",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 1539,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3026:23:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1530,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3049:2:12"
                  },
                  "returnParameters": {
                    "id": 1533,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1532,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1539,
                        "src": "3075:4:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1531,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3075:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3074:6:12"
                  },
                  "scope": 1540,
                  "src": "3017:107:12",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1541,
              "src": "888:2238:12",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "112:3015:12"
        },
        "id": 12
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ast": {
          "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              2269
            ],
            "ERC20": [
              2055
            ],
            "IERC20": [
              2133
            ],
            "IERC20Errors": [
              1380
            ],
            "IERC20Metadata": [
              2239
            ]
          },
          "id": 2056,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1542,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:13"
            },
            {
              "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 1544,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2056,
              "sourceUnit": 2134,
              "src": "131:36:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1543,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2133,
                    "src": "139:6:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 1546,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2056,
              "sourceUnit": 2240,
              "src": "168:63:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1545,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2239,
                    "src": "176:14:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 1548,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2056,
              "sourceUnit": 2270,
              "src": "232:48:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1547,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2269,
                    "src": "240:7:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 1550,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2056,
              "sourceUnit": 1476,
              "src": "281:65:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1549,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1380,
                    "src": "289:12:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1552,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2269,
                    "src": "1133:7:13"
                  },
                  "id": 1553,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:13"
                },
                {
                  "baseName": {
                    "id": 1554,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2133,
                    "src": "1142:6:13"
                  },
                  "id": 1555,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:13"
                },
                {
                  "baseName": {
                    "id": 1556,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2239,
                    "src": "1150:14:13"
                  },
                  "id": 1557,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:13"
                },
                {
                  "baseName": {
                    "id": 1558,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1380,
                    "src": "1166:12:13"
                  },
                  "id": 1559,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:13"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1551,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:13",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 2055,
              "linearizedBaseContracts": [
                2055,
                1380,
                2239,
                2133,
                2269
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1563,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2055,
                  "src": "1185:53:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1562,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:13",
                    "keyType": {
                      "id": 1560,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1561,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1569,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2055,
                  "src": "1245:83:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 1568,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:13",
                    "keyType": {
                      "id": 1564,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1567,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:13",
                      "keyType": {
                        "id": 1565,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 1566,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1571,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2055,
                  "src": "1335:28:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1573,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2055,
                  "src": "1370:20:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1572,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1575,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2055,
                  "src": "1396:22:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1574,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1591,
                    "nodeType": "Block",
                    "src": "1638:57:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 1585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1583,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1573,
                            "src": "1648:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1584,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1578,
                            "src": "1656:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1586,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:13"
                      },
                      {
                        "expression": {
                          "id": 1589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1587,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1575,
                            "src": "1671:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1588,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1580,
                            "src": "1681:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1590,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1576,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:13",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 1592,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1578,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1592,
                        "src": "1594:19:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1577,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1580,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1592,
                        "src": "1615:21:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1579,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:13"
                  },
                  "returnParameters": {
                    "id": 1582,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:13"
                  },
                  "scope": 2055,
                  "src": "1582:113:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    2226
                  ],
                  "body": {
                    "id": 1600,
                    "nodeType": "Block",
                    "src": "1820:29:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 1598,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1573,
                          "src": "1837:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 1597,
                        "id": 1599,
                        "nodeType": "Return",
                        "src": "1830:12:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1593,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:13",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 1601,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1594,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:13"
                  },
                  "returnParameters": {
                    "id": 1597,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1596,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1601,
                        "src": "1805:13:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1595,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:13"
                  },
                  "scope": 2055,
                  "src": "1760:89:13",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2232
                  ],
                  "body": {
                    "id": 1609,
                    "nodeType": "Block",
                    "src": "2024:31:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 1607,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1575,
                          "src": "2041:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 1606,
                        "id": 1608,
                        "nodeType": "Return",
                        "src": "2034:14:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1602,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:13",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 1610,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1603,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:13"
                  },
                  "returnParameters": {
                    "id": 1606,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1605,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1610,
                        "src": "2009:13:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1604,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:13"
                  },
                  "scope": 2055,
                  "src": "1962:93:13",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2238
                  ],
                  "body": {
                    "id": 1618,
                    "nodeType": "Block",
                    "src": "2744:26:13",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 1616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 1615,
                        "id": 1617,
                        "nodeType": "Return",
                        "src": "2754:9:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1611,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:13",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 1619,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1612,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:13"
                  },
                  "returnParameters": {
                    "id": 1615,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1614,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1619,
                        "src": "2737:5:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1613,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:13"
                  },
                  "scope": 2055,
                  "src": "2688:82:13",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2082
                  ],
                  "body": {
                    "id": 1627,
                    "nodeType": "Block",
                    "src": "2864:36:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 1625,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1571,
                          "src": "2881:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1624,
                        "id": 1626,
                        "nodeType": "Return",
                        "src": "2874:19:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1620,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:22:13",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "18160ddd",
                  "id": 1628,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2812:11:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1621,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2823:2:13"
                  },
                  "returnParameters": {
                    "id": 1624,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1623,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1628,
                        "src": "2855:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1622,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2855:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2854:9:13"
                  },
                  "scope": 2055,
                  "src": "2803:97:13",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2090
                  ],
                  "body": {
                    "id": 1640,
                    "nodeType": "Block",
                    "src": "3007:42:13",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1636,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1563,
                            "src": "3024:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1638,
                          "indexExpression": {
                            "id": 1637,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1631,
                            "src": "3034:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3024:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1635,
                        "id": 1639,
                        "nodeType": "Return",
                        "src": "3017:25:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1629,
                    "nodeType": "StructuredDocumentation",
                    "src": "2906:22:13",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "70a08231",
                  "id": 1641,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2942:9:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1632,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1631,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2960:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
                        "src": "2952:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1630,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2952:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2951:17:13"
                  },
                  "returnParameters": {
                    "id": 1635,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1634,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1641,
                        "src": "2998:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1633,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2998:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2997:9:13"
                  },
                  "scope": 2055,
                  "src": "2933:116:13",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2100
                  ],
                  "body": {
                    "id": 1664,
                    "nodeType": "Block",
                    "src": "3319:103:13",
                    "statements": [
                      {
                        "assignments": [
                          1652
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1652,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3337:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1664,
                            "src": "3329:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1651,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3329:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1655,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1653,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2251,
                            "src": "3345:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3345:12:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3329:28:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1657,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1652,
                              "src": "3377:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1658,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1644,
                              "src": "3384:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1659,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1646,
                              "src": "3388:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1656,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1785,
                            "src": "3367:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3367:27:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1661,
                        "nodeType": "ExpressionStatement",
                        "src": "3367:27:13"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3411:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1650,
                        "id": 1663,
                        "nodeType": "Return",
                        "src": "3404:11:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1642,
                    "nodeType": "StructuredDocumentation",
                    "src": "3055:184:13",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1665,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3253:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1647,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1644,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3270:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1665,
                        "src": "3262:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1643,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3262:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1646,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3282:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1665,
                        "src": "3274:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1645,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3274:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3261:27:13"
                  },
                  "returnParameters": {
                    "id": 1650,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1649,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1665,
                        "src": "3313:4:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1648,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3313:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3312:6:13"
                  },
                  "scope": 2055,
                  "src": "3244:178:13",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2110
                  ],
                  "body": {
                    "id": 1681,
                    "nodeType": "Block",
                    "src": "3544:51:13",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1675,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1569,
                              "src": "3561:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1677,
                            "indexExpression": {
                              "id": 1676,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1668,
                              "src": "3573:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3561:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1679,
                          "indexExpression": {
                            "id": 1678,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1670,
                            "src": "3580:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3561:27:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1674,
                        "id": 1680,
                        "nodeType": "Return",
                        "src": "3554:34:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1666,
                    "nodeType": "StructuredDocumentation",
                    "src": "3428:22:13",
                    "text": "@inheritdoc IERC20"
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1682,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3464:9:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1671,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1668,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3482:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1682,
                        "src": "3474:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1667,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3474:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1670,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3497:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1682,
                        "src": "3489:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1669,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3489:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3473:32:13"
                  },
                  "returnParameters": {
                    "id": 1674,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1673,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1682,
                        "src": "3535:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1672,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3535:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3534:9:13"
                  },
                  "scope": 2055,
                  "src": "3455:140:13",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2120
                  ],
                  "body": {
                    "id": 1705,
                    "nodeType": "Block",
                    "src": "3981:107:13",
                    "statements": [
                      {
                        "assignments": [
                          1693
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1693,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3999:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1705,
                            "src": "3991:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1692,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3991:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1696,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1694,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2251,
                            "src": "4007:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4007:12:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3991:28:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1698,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1693,
                              "src": "4038:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1699,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1685,
                              "src": "4045:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1700,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1687,
                              "src": "4054:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1697,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1946,
                              2006
                            ],
                            "referencedDeclaration": 1946,
                            "src": "4029:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4029:31:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1702,
                        "nodeType": "ExpressionStatement",
                        "src": "4029:31:13"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4077:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1691,
                        "id": 1704,
                        "nodeType": "Return",
                        "src": "4070:11:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1683,
                    "nodeType": "StructuredDocumentation",
                    "src": "3601:296:13",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1706,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3911:7:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1688,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1685,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3927:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1706,
                        "src": "3919:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1684,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3919:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1687,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3944:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1706,
                        "src": "3936:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1686,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3936:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3918:32:13"
                  },
                  "returnParameters": {
                    "id": 1691,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1690,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1706,
                        "src": "3975:4:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1689,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3975:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3974:6:13"
                  },
                  "scope": 2055,
                  "src": "3902:186:13",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2132
                  ],
                  "body": {
                    "id": 1737,
                    "nodeType": "Block",
                    "src": "4773:151:13",
                    "statements": [
                      {
                        "assignments": [
                          1719
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1719,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4791:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1737,
                            "src": "4783:15:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1718,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4783:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1722,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1720,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2251,
                            "src": "4801:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4801:12:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4783:30:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1724,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1709,
                              "src": "4839:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1725,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1719,
                              "src": "4845:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1726,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1713,
                              "src": "4854:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1723,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2054,
                            "src": "4823:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4823:37:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1728,
                        "nodeType": "ExpressionStatement",
                        "src": "4823:37:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1730,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1709,
                              "src": "4880:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1731,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1711,
                              "src": "4886:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1732,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1713,
                              "src": "4890:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1729,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1785,
                            "src": "4870:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4870:26:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1734,
                        "nodeType": "ExpressionStatement",
                        "src": "4870:26:13"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4913:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1717,
                        "id": 1736,
                        "nodeType": "Return",
                        "src": "4906:11:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1707,
                    "nodeType": "StructuredDocumentation",
                    "src": "4094:581:13",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1738,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4689:12:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1714,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1709,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4710:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1738,
                        "src": "4702:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1708,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4702:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1711,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4724:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1738,
                        "src": "4716:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1710,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4716:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1713,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4736:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1738,
                        "src": "4728:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1712,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4728:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4701:41:13"
                  },
                  "returnParameters": {
                    "id": 1717,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1716,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1738,
                        "src": "4767:4:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1715,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4767:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4766:6:13"
                  },
                  "scope": 2055,
                  "src": "4680:244:13",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1784,
                    "nodeType": "Block",
                    "src": "5366:231:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1748,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1741,
                            "src": "5380:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5396:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5388:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1749,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5388:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5388:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5380:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1762,
                        "nodeType": "IfStatement",
                        "src": "5376:86:13",
                        "trueBody": {
                          "id": 1761,
                          "nodeType": "Block",
                          "src": "5400:62:13",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1757,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5448:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1756,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5440:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1755,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5440:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1758,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5440:10:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1754,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1355,
                                  "src": "5421:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1759,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5421:30:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1760,
                              "nodeType": "RevertStatement",
                              "src": "5414:37:13"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1763,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1743,
                            "src": "5475:2:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1766,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5489:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5481:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1764,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5481:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5481:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5475:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1777,
                        "nodeType": "IfStatement",
                        "src": "5471:86:13",
                        "trueBody": {
                          "id": 1776,
                          "nodeType": "Block",
                          "src": "5493:64:13",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1772,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5543:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1771,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5535:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1770,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5535:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1773,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5535:10:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1769,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1360,
                                  "src": "5514:20:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1774,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5514:32:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1775,
                              "nodeType": "RevertStatement",
                              "src": "5507:39:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1779,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1741,
                              "src": "5574:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1780,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1743,
                              "src": "5580:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1781,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1745,
                              "src": "5584:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1778,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1862,
                            "src": "5566:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5566:24:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1783,
                        "nodeType": "ExpressionStatement",
                        "src": "5566:24:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1739,
                    "nodeType": "StructuredDocumentation",
                    "src": "4930:362:13",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 1785,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5306:9:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1746,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1741,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5324:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1785,
                        "src": "5316:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1740,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5316:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1743,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5338:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1785,
                        "src": "5330:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1742,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5330:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1745,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5350:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1785,
                        "src": "5342:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1744,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5342:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5315:41:13"
                  },
                  "returnParameters": {
                    "id": 1747,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5366:0:13"
                  },
                  "scope": 2055,
                  "src": "5297:300:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1861,
                    "nodeType": "Block",
                    "src": "5987:1032:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1795,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1788,
                            "src": "6001:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1798,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6017:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6009:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1796,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6009:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6009:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6001:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1832,
                          "nodeType": "Block",
                          "src": "6175:362:13",
                          "statements": [
                            {
                              "assignments": [
                                1807
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1807,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6197:11:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1832,
                                  "src": "6189:19:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1806,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6189:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1811,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 1808,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1563,
                                  "src": "6211:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1810,
                                "indexExpression": {
                                  "id": 1809,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1788,
                                  "src": "6221:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6211:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6189:37:13"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1812,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1807,
                                  "src": "6244:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 1813,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1792,
                                  "src": "6258:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6244:19:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1822,
                              "nodeType": "IfStatement",
                              "src": "6240:115:13",
                              "trueBody": {
                                "id": 1821,
                                "nodeType": "Block",
                                "src": "6265:90:13",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 1816,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1788,
                                          "src": "6315:4:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1817,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1807,
                                          "src": "6321:11:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 1818,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1792,
                                          "src": "6334:5:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1815,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1350,
                                        "src": "6290:24:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 1819,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6290:50:13",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 1820,
                                    "nodeType": "RevertStatement",
                                    "src": "6283:57:13"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1831,
                              "nodeType": "UncheckedBlock",
                              "src": "6368:159:13",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1829,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 1823,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1563,
                                        "src": "6475:9:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1825,
                                      "indexExpression": {
                                        "id": 1824,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1788,
                                        "src": "6485:4:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6475:15:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1828,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1826,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1807,
                                        "src": "6493:11:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 1827,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1792,
                                        "src": "6507:5:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6493:19:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6475:37:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1830,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6475:37:13"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 1833,
                        "nodeType": "IfStatement",
                        "src": "5997:540:13",
                        "trueBody": {
                          "id": 1805,
                          "nodeType": "Block",
                          "src": "6021:148:13",
                          "statements": [
                            {
                              "expression": {
                                "id": 1803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1801,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1571,
                                  "src": "6137:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 1802,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1792,
                                  "src": "6153:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6137:21:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1804,
                              "nodeType": "ExpressionStatement",
                              "src": "6137:21:13"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1834,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1790,
                            "src": "6551:2:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1837,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6565:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6557:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1835,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6557:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6557:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6551:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1853,
                          "nodeType": "Block",
                          "src": "6766:206:13",
                          "statements": [
                            {
                              "id": 1852,
                              "nodeType": "UncheckedBlock",
                              "src": "6780:182:13",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1850,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 1846,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1563,
                                        "src": "6925:9:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1848,
                                      "indexExpression": {
                                        "id": 1847,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1790,
                                        "src": "6935:2:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6925:13:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 1849,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1792,
                                      "src": "6942:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6925:22:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1851,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6925:22:13"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 1854,
                        "nodeType": "IfStatement",
                        "src": "6547:425:13",
                        "trueBody": {
                          "id": 1845,
                          "nodeType": "Block",
                          "src": "6569:191:13",
                          "statements": [
                            {
                              "id": 1844,
                              "nodeType": "UncheckedBlock",
                              "src": "6583:167:13",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1842,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 1840,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1571,
                                      "src": "6714:12:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 1841,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1792,
                                      "src": "6730:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6714:21:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1843,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6714:21:13"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1856,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1788,
                              "src": "6996:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1857,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1790,
                              "src": "7002:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1858,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1792,
                              "src": "7006:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1855,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2067,
                            "src": "6987:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6987:25:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1860,
                        "nodeType": "EmitStatement",
                        "src": "6982:30:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1786,
                    "nodeType": "StructuredDocumentation",
                    "src": "5603:304:13",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 1862,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5921:7:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1793,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1788,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5937:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1862,
                        "src": "5929:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1787,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5929:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1790,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5951:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1862,
                        "src": "5943:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1789,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5943:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1792,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5963:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1862,
                        "src": "5955:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1791,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5955:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5928:41:13"
                  },
                  "returnParameters": {
                    "id": 1794,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5987:0:13"
                  },
                  "scope": 2055,
                  "src": "5912:1107:13",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1894,
                    "nodeType": "Block",
                    "src": "7418:152:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1870,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1865,
                            "src": "7432:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7451:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7443:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1871,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7443:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7443:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7432:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1884,
                        "nodeType": "IfStatement",
                        "src": "7428:91:13",
                        "trueBody": {
                          "id": 1883,
                          "nodeType": "Block",
                          "src": "7455:64:13",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1879,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7505:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1878,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7497:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1877,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7497:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1880,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7497:10:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1876,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1360,
                                  "src": "7476:20:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7476:32:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1882,
                              "nodeType": "RevertStatement",
                              "src": "7469:39:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1888,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7544:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1887,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7536:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1886,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7536:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7536:10:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1890,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1865,
                              "src": "7548:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1891,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1867,
                              "src": "7557:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1885,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1862,
                            "src": "7528:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7528:35:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1893,
                        "nodeType": "ExpressionStatement",
                        "src": "7528:35:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1863,
                    "nodeType": "StructuredDocumentation",
                    "src": "7025:332:13",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 1895,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7371:5:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1868,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1865,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7385:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1895,
                        "src": "7377:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1864,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7377:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1867,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7402:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1895,
                        "src": "7394:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1866,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7394:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7376:32:13"
                  },
                  "returnParameters": {
                    "id": 1869,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7418:0:13"
                  },
                  "scope": 2055,
                  "src": "7362:208:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1927,
                    "nodeType": "Block",
                    "src": "7944:150:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1903,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1898,
                            "src": "7958:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1906,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7977:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1905,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7969:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1904,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7969:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7969:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7958:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1917,
                        "nodeType": "IfStatement",
                        "src": "7954:89:13",
                        "trueBody": {
                          "id": 1916,
                          "nodeType": "Block",
                          "src": "7981:62:13",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1912,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8029:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1911,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8021:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1910,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8021:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1913,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8021:10:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1909,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1355,
                                  "src": "8002:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1914,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8002:30:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1915,
                              "nodeType": "RevertStatement",
                              "src": "7995:37:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1919,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1898,
                              "src": "8060:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1922,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8077:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8069:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1920,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8069:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1923,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8069:10:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1924,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1900,
                              "src": "8081:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1918,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1862,
                            "src": "8052:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8052:35:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1926,
                        "nodeType": "ExpressionStatement",
                        "src": "8052:35:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1896,
                    "nodeType": "StructuredDocumentation",
                    "src": "7576:307:13",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 1928,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7897:5:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1901,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1898,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7911:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1928,
                        "src": "7903:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1897,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7903:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1900,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7928:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1928,
                        "src": "7920:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1899,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7920:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7902:32:13"
                  },
                  "returnParameters": {
                    "id": 1902,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7944:0:13"
                  },
                  "scope": 2055,
                  "src": "7888:206:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1945,
                    "nodeType": "Block",
                    "src": "8704:54:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1939,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1931,
                              "src": "8723:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1940,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1933,
                              "src": "8730:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1941,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1935,
                              "src": "8739:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 1942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8746:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1938,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1946,
                              2006
                            ],
                            "referencedDeclaration": 2006,
                            "src": "8714:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 1943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8714:37:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1944,
                        "nodeType": "ExpressionStatement",
                        "src": "8714:37:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1929,
                    "nodeType": "StructuredDocumentation",
                    "src": "8100:525:13",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 1946,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8639:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1936,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1931,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8656:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1946,
                        "src": "8648:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1930,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8648:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1933,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8671:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1946,
                        "src": "8663:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1932,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8663:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1935,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8688:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1946,
                        "src": "8680:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1934,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8680:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8647:47:13"
                  },
                  "returnParameters": {
                    "id": 1937,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8704:0:13"
                  },
                  "scope": 2055,
                  "src": "8630:128:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2005,
                    "nodeType": "Block",
                    "src": "9703:334:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1958,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1949,
                            "src": "9717:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1961,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9734:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9726:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1959,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9726:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9726:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9717:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1972,
                        "nodeType": "IfStatement",
                        "src": "9713:89:13",
                        "trueBody": {
                          "id": 1971,
                          "nodeType": "Block",
                          "src": "9738:64:13",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1967,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9788:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1966,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9780:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1965,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9780:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1968,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9780:10:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1964,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1374,
                                  "src": "9759:20:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1969,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9759:32:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1970,
                              "nodeType": "RevertStatement",
                              "src": "9752:39:13"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1973,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1951,
                            "src": "9815:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1976,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9834:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9826:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1974,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9826:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1977,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9826:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9815:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1987,
                        "nodeType": "IfStatement",
                        "src": "9811:90:13",
                        "trueBody": {
                          "id": 1986,
                          "nodeType": "Block",
                          "src": "9838:63:13",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1982,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9887:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1981,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9879:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1980,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9879:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1983,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9879:10:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1979,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1379,
                                  "src": "9859:19:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1984,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9859:31:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1985,
                              "nodeType": "RevertStatement",
                              "src": "9852:38:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1988,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1569,
                                "src": "9910:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1991,
                              "indexExpression": {
                                "id": 1989,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1949,
                                "src": "9922:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9910:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1992,
                            "indexExpression": {
                              "id": 1990,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1951,
                              "src": "9929:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9910:27:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1993,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1953,
                            "src": "9940:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9910:35:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1995,
                        "nodeType": "ExpressionStatement",
                        "src": "9910:35:13"
                      },
                      {
                        "condition": {
                          "id": 1996,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1955,
                          "src": "9959:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2004,
                        "nodeType": "IfStatement",
                        "src": "9955:76:13",
                        "trueBody": {
                          "id": 2003,
                          "nodeType": "Block",
                          "src": "9970:61:13",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1998,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1949,
                                    "src": "9998:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1999,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1951,
                                    "src": "10005:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2000,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1953,
                                    "src": "10014:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1997,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2076,
                                  "src": "9989:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 2001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9989:31:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2002,
                              "nodeType": "EmitStatement",
                              "src": "9984:36:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1947,
                    "nodeType": "StructuredDocumentation",
                    "src": "8764:836:13",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 2006,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9614:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1956,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1949,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9631:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2006,
                        "src": "9623:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1948,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9623:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1951,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9646:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2006,
                        "src": "9638:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1950,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9638:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1953,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9663:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2006,
                        "src": "9655:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1952,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9655:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1955,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9675:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2006,
                        "src": "9670:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1954,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9670:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9622:63:13"
                  },
                  "returnParameters": {
                    "id": 1957,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9703:0:13"
                  },
                  "scope": 2055,
                  "src": "9605:432:13",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2053,
                    "nodeType": "Block",
                    "src": "10408:387:13",
                    "statements": [
                      {
                        "assignments": [
                          2017
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2017,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10426:16:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2053,
                            "src": "10418:24:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2016,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10418:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2022,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2019,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2009,
                              "src": "10455:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2020,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2011,
                              "src": "10462:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2018,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1682,
                            "src": "10445:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 2021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10445:25:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10418:52:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2023,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2017,
                            "src": "10484:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2026,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10508:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 2025,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10508:7:13",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 2024,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10503:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 2027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10503:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 2028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10517:3:13",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10503:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10484:36:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2052,
                        "nodeType": "IfStatement",
                        "src": "10480:309:13",
                        "trueBody": {
                          "id": 2051,
                          "nodeType": "Block",
                          "src": "10522:267:13",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2032,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2030,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2017,
                                  "src": "10540:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 2031,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2013,
                                  "src": "10559:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10540:24:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2040,
                              "nodeType": "IfStatement",
                              "src": "10536:130:13",
                              "trueBody": {
                                "id": 2039,
                                "nodeType": "Block",
                                "src": "10566:100:13",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 2034,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2011,
                                          "src": "10618:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 2035,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2017,
                                          "src": "10627:16:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 2036,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2013,
                                          "src": "10645:5:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 2033,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1369,
                                        "src": "10591:26:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 2037,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10591:60:13",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 2038,
                                    "nodeType": "RevertStatement",
                                    "src": "10584:67:13"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 2050,
                              "nodeType": "UncheckedBlock",
                              "src": "10679:100:13",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2042,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2009,
                                        "src": "10716:5:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 2043,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2011,
                                        "src": "10723:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2046,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2044,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2017,
                                          "src": "10732:16:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 2045,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2013,
                                          "src": "10751:5:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10732:24:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 2047,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10758:5:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 2041,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        1946,
                                        2006
                                      ],
                                      "referencedDeclaration": 2006,
                                      "src": "10707:8:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 2048,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10707:57:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2049,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10707:57:13"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2007,
                    "nodeType": "StructuredDocumentation",
                    "src": "10043:271:13",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 2054,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10328:15:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2014,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2009,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10352:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2054,
                        "src": "10344:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2008,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10344:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2011,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10367:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2054,
                        "src": "10359:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2010,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10359:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2013,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10384:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2054,
                        "src": "10376:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2012,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10376:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10343:47:13"
                  },
                  "returnParameters": {
                    "id": 2015,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10408:0:13"
                  },
                  "scope": 2055,
                  "src": "10319:476:13",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 2056,
              "src": "1106:9691:13",
              "usedErrors": [
                1350,
                1355,
                1360,
                1369,
                1374,
                1379
              ],
              "usedEvents": [
                2067,
                2076
              ]
            }
          ],
          "src": "105:10693:13"
        },
        "id": 13
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              2133
            ]
          },
          "id": 2134,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2057,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:25:14"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2058,
                "nodeType": "StructuredDocumentation",
                "src": "133:71:14",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 2133,
              "linearizedBaseContracts": [
                2133
              ],
              "name": "IERC20",
              "nameLocation": "215:6:14",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2059,
                    "nodeType": "StructuredDocumentation",
                    "src": "228:158:14",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 2067,
                  "name": "Transfer",
                  "nameLocation": "397:8:14",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2066,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2061,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "422:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2067,
                        "src": "406:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2060,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "406:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2063,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "444:2:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2067,
                        "src": "428:18:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2062,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "428:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2065,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "456:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2067,
                        "src": "448:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2064,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "448:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "405:57:14"
                  },
                  "src": "391:72:14"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2068,
                    "nodeType": "StructuredDocumentation",
                    "src": "469:148:14",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 2076,
                  "name": "Approval",
                  "nameLocation": "628:8:14",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2075,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2070,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "653:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2076,
                        "src": "637:21:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2069,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "637:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2072,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "676:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2076,
                        "src": "660:23:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2071,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "660:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2074,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "693:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2076,
                        "src": "685:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2073,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "685:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "636:63:14"
                  },
                  "src": "622:78:14"
                },
                {
                  "documentation": {
                    "id": 2077,
                    "nodeType": "StructuredDocumentation",
                    "src": "706:65:14",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 2082,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "785:11:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2078,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "796:2:14"
                  },
                  "returnParameters": {
                    "id": 2081,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2080,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2082,
                        "src": "822:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2079,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:9:14"
                  },
                  "scope": 2133,
                  "src": "776:55:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2083,
                    "nodeType": "StructuredDocumentation",
                    "src": "837:71:14",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 2090,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "922:9:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2086,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2085,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "940:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2090,
                        "src": "932:15:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2084,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "932:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "931:17:14"
                  },
                  "returnParameters": {
                    "id": 2089,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2088,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2090,
                        "src": "972:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2087,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "972:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "971:9:14"
                  },
                  "scope": 2133,
                  "src": "913:68:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2091,
                    "nodeType": "StructuredDocumentation",
                    "src": "987:213:14",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 2100,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1214:8:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2096,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2093,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1231:2:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2100,
                        "src": "1223:10:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2092,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2095,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1243:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2100,
                        "src": "1235:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2094,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1235:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1222:27:14"
                  },
                  "returnParameters": {
                    "id": 2099,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2098,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2100,
                        "src": "1268:4:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2097,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1268:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1267:6:14"
                  },
                  "scope": 2133,
                  "src": "1205:69:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2101,
                    "nodeType": "StructuredDocumentation",
                    "src": "1280:264:14",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 2110,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1558:9:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2106,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2103,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1576:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2110,
                        "src": "1568:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2102,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1568:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2105,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1591:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2110,
                        "src": "1583:15:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2104,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1583:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1567:32:14"
                  },
                  "returnParameters": {
                    "id": 2109,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2108,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2110,
                        "src": "1623:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2107,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1623:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1622:9:14"
                  },
                  "scope": 2133,
                  "src": "1549:83:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2111,
                    "nodeType": "StructuredDocumentation",
                    "src": "1638:667:14",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 2120,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2319:7:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2116,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2113,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2335:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2120,
                        "src": "2327:15:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2112,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2327:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2115,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2352:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2120,
                        "src": "2344:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2114,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2344:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2326:32:14"
                  },
                  "returnParameters": {
                    "id": 2119,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2118,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2120,
                        "src": "2377:4:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2117,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2377:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2376:6:14"
                  },
                  "scope": 2133,
                  "src": "2310:73:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2121,
                    "nodeType": "StructuredDocumentation",
                    "src": "2389:297:14",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 2132,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2700:12:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2128,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2123,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2721:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2132,
                        "src": "2713:12:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2122,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2713:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2125,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2735:2:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2132,
                        "src": "2727:10:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2124,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2727:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2127,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2747:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2132,
                        "src": "2739:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2126,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2739:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2712:41:14"
                  },
                  "returnParameters": {
                    "id": 2131,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2130,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2132,
                        "src": "2772:4:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2129,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2772:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2771:6:14"
                  },
                  "scope": 2133,
                  "src": "2691:87:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2134,
              "src": "205:2575:14",
              "usedErrors": [],
              "usedEvents": [
                2067,
                2076
              ]
            }
          ],
          "src": "106:2675:14"
        },
        "id": 14
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "ast": {
          "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
          "exportedSymbols": {
            "Context": [
              2269
            ],
            "ERC20": [
              2055
            ],
            "ERC20Burnable": [
              2179
            ]
          },
          "id": 2180,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2135,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "124:24:15"
            },
            {
              "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "../ERC20.sol",
              "id": 2137,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2180,
              "sourceUnit": 2056,
              "src": "150:35:15",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2136,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2055,
                    "src": "158:5:15",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol",
              "file": "../../../utils/Context.sol",
              "id": 2139,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2180,
              "sourceUnit": 2270,
              "src": "186:51:15",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2138,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2269,
                    "src": "194:7:15",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2141,
                    "name": "Context",
                    "nameLocations": [
                      "483:7:15"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2269,
                    "src": "483:7:15"
                  },
                  "id": 2142,
                  "nodeType": "InheritanceSpecifier",
                  "src": "483:7:15"
                },
                {
                  "baseName": {
                    "id": 2143,
                    "name": "ERC20",
                    "nameLocations": [
                      "492:5:15"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2055,
                    "src": "492:5:15"
                  },
                  "id": 2144,
                  "nodeType": "InheritanceSpecifier",
                  "src": "492:5:15"
                }
              ],
              "canonicalName": "ERC20Burnable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2140,
                "nodeType": "StructuredDocumentation",
                "src": "239:208:15",
                "text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
              },
              "fullyImplemented": true,
              "id": 2179,
              "linearizedBaseContracts": [
                2179,
                2055,
                1380,
                2239,
                2133,
                2269
              ],
              "name": "ERC20Burnable",
              "nameLocation": "466:13:15",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2156,
                    "nodeType": "Block",
                    "src": "662:43:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2151,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2251,
                                "src": "678:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "678:12:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2153,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2147,
                              "src": "692:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2150,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1928,
                            "src": "672:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "672:26:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2155,
                        "nodeType": "ExpressionStatement",
                        "src": "672:26:15"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2145,
                    "nodeType": "StructuredDocumentation",
                    "src": "504:109:15",
                    "text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
                  },
                  "functionSelector": "42966c68",
                  "id": 2157,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "627:4:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2148,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2147,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "640:5:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2157,
                        "src": "632:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2146,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "632:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "631:15:15"
                  },
                  "returnParameters": {
                    "id": 2149,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "662:0:15"
                  },
                  "scope": 2179,
                  "src": "618:87:15",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2177,
                    "nodeType": "Block",
                    "src": "1086:93:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2166,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2160,
                              "src": "1112:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2167,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2251,
                                "src": "1121:10:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1121:12:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2169,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2162,
                              "src": "1135:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2165,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2054,
                            "src": "1096:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1096:45:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2171,
                        "nodeType": "ExpressionStatement",
                        "src": "1096:45:15"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2173,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2160,
                              "src": "1157:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2174,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2162,
                              "src": "1166:5:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2172,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1928,
                            "src": "1151:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1151:21:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2176,
                        "nodeType": "ExpressionStatement",
                        "src": "1151:21:15"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2158,
                    "nodeType": "StructuredDocumentation",
                    "src": "711:305:15",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "79cc6790",
                  "id": 2178,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burnFrom",
                  "nameLocation": "1030:8:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2160,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1047:7:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2178,
                        "src": "1039:15:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2159,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1039:7:15",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2162,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1064:5:15",
                        "nodeType": "VariableDeclaration",
                        "scope": 2178,
                        "src": "1056:13:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2161,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1056:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1038:32:15"
                  },
                  "returnParameters": {
                    "id": 2164,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1086:0:15"
                  },
                  "scope": 2179,
                  "src": "1021:158:15",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 2180,
              "src": "448:733:15",
              "usedErrors": [
                1350,
                1355,
                1360,
                1369,
                1374,
                1379
              ],
              "usedEvents": [
                2067,
                2076
              ]
            }
          ],
          "src": "124:1058:15"
        },
        "id": 15
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
        "ast": {
          "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
          "exportedSymbols": {
            "ERC20": [
              2055
            ],
            "ERC20Pausable": [
              2213
            ],
            "Pausable": [
              2377
            ]
          },
          "id": 2214,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2181,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "124:24:16"
            },
            {
              "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "../ERC20.sol",
              "id": 2183,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2214,
              "sourceUnit": 2056,
              "src": "150:35:16",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2182,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2055,
                    "src": "158:5:16",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/utils/Pausable.sol",
              "file": "../../../utils/Pausable.sol",
              "id": 2185,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2214,
              "sourceUnit": 2378,
              "src": "186:53:16",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2184,
                    "name": "Pausable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2377,
                    "src": "194:8:16",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2187,
                    "name": "ERC20",
                    "nameLocations": [
                      "965:5:16"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2055,
                    "src": "965:5:16"
                  },
                  "id": 2188,
                  "nodeType": "InheritanceSpecifier",
                  "src": "965:5:16"
                },
                {
                  "baseName": {
                    "id": 2189,
                    "name": "Pausable",
                    "nameLocations": [
                      "972:8:16"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2377,
                    "src": "972:8:16"
                  },
                  "id": 2190,
                  "nodeType": "InheritanceSpecifier",
                  "src": "972:8:16"
                }
              ],
              "canonicalName": "ERC20Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2186,
                "nodeType": "StructuredDocumentation",
                "src": "241:688:16",
                "text": " @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
              },
              "fullyImplemented": true,
              "id": 2213,
              "linearizedBaseContracts": [
                2213,
                2377,
                2055,
                1380,
                2239,
                2133,
                2269
              ],
              "name": "ERC20Pausable",
              "nameLocation": "948:13:16",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    1862
                  ],
                  "body": {
                    "id": 2211,
                    "nodeType": "Block",
                    "src": "1211:47:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2206,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2193,
                              "src": "1235:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2207,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2195,
                              "src": "1241:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2208,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2197,
                              "src": "1245:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2203,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "1221:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_ERC20Pausable_$2213_$",
                                "typeString": "type(contract super ERC20Pausable)"
                              }
                            },
                            "id": 2205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1227:7:16",
                            "memberName": "_update",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1862,
                            "src": "1221:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 2209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1221:30:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2210,
                        "nodeType": "ExpressionStatement",
                        "src": "1221:30:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2191,
                    "nodeType": "StructuredDocumentation",
                    "src": "987:121:16",
                    "text": " @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."
                  },
                  "id": 2212,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2201,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2200,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "1197:13:16"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2302,
                        "src": "1197:13:16"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1197:13:16"
                    }
                  ],
                  "name": "_update",
                  "nameLocation": "1122:7:16",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2199,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1188:8:16"
                  },
                  "parameters": {
                    "id": 2198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2193,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1138:4:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2212,
                        "src": "1130:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1130:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2195,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1152:2:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2212,
                        "src": "1144:10:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1144:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2197,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1164:5:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2212,
                        "src": "1156:13:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2196,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1156:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1129:41:16"
                  },
                  "returnParameters": {
                    "id": 2202,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1211:0:16"
                  },
                  "scope": 2213,
                  "src": "1113:145:16",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 2214,
              "src": "930:330:16",
              "usedErrors": [
                1350,
                1355,
                1360,
                1369,
                1374,
                1379,
                2291,
                2294
              ],
              "usedEvents": [
                2067,
                2076,
                2283,
                2288
              ]
            }
          ],
          "src": "124:1137:16"
        },
        "id": 16
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              2133
            ],
            "IERC20Metadata": [
              2239
            ]
          },
          "id": 2240,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2215,
              "literals": [
                "solidity",
                ">=",
                "0.6",
                ".2"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:17"
            },
            {
              "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 2217,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2240,
              "sourceUnit": 2134,
              "src": "151:37:17",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2216,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2133,
                    "src": "159:6:17",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2219,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:17"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2133,
                    "src": "306:6:17"
                  },
                  "id": 2220,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:17"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2218,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:17",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 2239,
              "linearizedBaseContracts": [
                2239,
                2133
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:17",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2221,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:17",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 2226,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2222,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:17"
                  },
                  "returnParameters": {
                    "id": 2225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2224,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2226,
                        "src": "417:13:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2223,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:17"
                  },
                  "scope": 2239,
                  "src": "378:54:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2227,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:17",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 2232,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2228,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:17"
                  },
                  "returnParameters": {
                    "id": 2231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2230,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2232,
                        "src": "540:13:17",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2229,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:17"
                  },
                  "scope": 2239,
                  "src": "499:56:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2233,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:17",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 2238,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2234,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:17"
                  },
                  "returnParameters": {
                    "id": 2237,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2236,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2238,
                        "src": "674:5:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 2235,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:17"
                  },
                  "scope": 2239,
                  "src": "631:50:17",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2240,
              "src": "278:405:17",
              "usedErrors": [],
              "usedEvents": [
                2067,
                2076
              ]
            }
          ],
          "src": "125:559:17"
        },
        "id": 17
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              2269
            ]
          },
          "id": 2270,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2241,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:18"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2242,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:18",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 2269,
              "linearizedBaseContracts": [
                2269
              ],
              "name": "Context",
              "nameLocation": "642:7:18",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2250,
                    "nodeType": "Block",
                    "src": "718:34:18",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 2247,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:18",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 2246,
                        "id": 2249,
                        "nodeType": "Return",
                        "src": "728:17:18"
                      }
                    ]
                  },
                  "id": 2251,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:18",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2243,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:18"
                  },
                  "returnParameters": {
                    "id": 2246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2245,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2251,
                        "src": "709:7:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2244,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:18"
                  },
                  "scope": 2269,
                  "src": "656:96:18",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2259,
                    "nodeType": "Block",
                    "src": "825:32:18",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 2256,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:18",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 2255,
                        "id": 2258,
                        "nodeType": "Return",
                        "src": "835:15:18"
                      }
                    ]
                  },
                  "id": 2260,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:18",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2252,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:18"
                  },
                  "returnParameters": {
                    "id": 2255,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2254,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2260,
                        "src": "809:14:18",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2253,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:18"
                  },
                  "scope": 2269,
                  "src": "758:99:18",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2267,
                    "nodeType": "Block",
                    "src": "935:25:18",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 2265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 2264,
                        "id": 2266,
                        "nodeType": "Return",
                        "src": "945:8:18"
                      }
                    ]
                  },
                  "id": 2268,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:18",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2261,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:18"
                  },
                  "returnParameters": {
                    "id": 2264,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2263,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2268,
                        "src": "926:7:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2262,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:18"
                  },
                  "scope": 2269,
                  "src": "863:97:18",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 2270,
              "src": "624:338:18",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:18"
        },
        "id": 18
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/Pausable.sol": {
        "ast": {
          "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/utils/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              2269
            ],
            "Pausable": [
              2377
            ]
          },
          "id": 2378,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2271,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:19"
            },
            {
              "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 2273,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2378,
              "sourceUnit": 2270,
              "src": "128:45:19",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2272,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2269,
                    "src": "136:7:19",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2275,
                    "name": "Context",
                    "nameLocations": [
                      "645:7:19"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2269,
                    "src": "645:7:19"
                  },
                  "id": 2276,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:7:19"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2274,
                "nodeType": "StructuredDocumentation",
                "src": "175:439:19",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 2377,
              "linearizedBaseContracts": [
                2377,
                2269
              ],
              "name": "Pausable",
              "nameLocation": "633:8:19",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 2278,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "672:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "659:20:19",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2277,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2279,
                    "nodeType": "StructuredDocumentation",
                    "src": "686:73:19",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 2283,
                  "name": "Paused",
                  "nameLocation": "770:6:19",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2282,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2281,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "785:7:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2283,
                        "src": "777:15:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2280,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:17:19"
                  },
                  "src": "764:30:19"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2284,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:70:19",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 2288,
                  "name": "Unpaused",
                  "nameLocation": "881:8:19",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2287,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2286,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "898:7:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2288,
                        "src": "890:15:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2285,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:19",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:17:19"
                  },
                  "src": "875:32:19"
                },
                {
                  "documentation": {
                    "id": 2289,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:76:19",
                    "text": " @dev The operation failed because the contract is paused."
                  },
                  "errorSelector": "d93c0665",
                  "id": 2291,
                  "name": "EnforcedPause",
                  "nameLocation": "1000:13:19",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2290,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1013:2:19"
                  },
                  "src": "994:22:19"
                },
                {
                  "documentation": {
                    "id": 2292,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:80:19",
                    "text": " @dev The operation failed because the contract is not paused."
                  },
                  "errorSelector": "8dfc202b",
                  "id": 2294,
                  "name": "ExpectedPause",
                  "nameLocation": "1113:13:19",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2293,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1126:2:19"
                  },
                  "src": "1107:22:19"
                },
                {
                  "body": {
                    "id": 2301,
                    "nodeType": "Block",
                    "src": "1340:47:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2297,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2331,
                            "src": "1350:17:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 2298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:19:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2299,
                        "nodeType": "ExpressionStatement",
                        "src": "1350:19:19"
                      },
                      {
                        "id": 2300,
                        "nodeType": "PlaceholderStatement",
                        "src": "1379:1:19"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2295,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:175:19",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 2302,
                  "name": "whenNotPaused",
                  "nameLocation": "1324:13:19",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 2296,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1337:2:19"
                  },
                  "src": "1315:72:19",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2309,
                    "nodeType": "Block",
                    "src": "1587:44:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2305,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2344,
                            "src": "1597:14:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 2306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1597:16:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2307,
                        "nodeType": "ExpressionStatement",
                        "src": "1597:16:19"
                      },
                      {
                        "id": 2308,
                        "nodeType": "PlaceholderStatement",
                        "src": "1623:1:19"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2303,
                    "nodeType": "StructuredDocumentation",
                    "src": "1393:167:19",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 2310,
                  "name": "whenPaused",
                  "nameLocation": "1574:10:19",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 2304,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1584:2:19"
                  },
                  "src": "1565:66:19",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2318,
                    "nodeType": "Block",
                    "src": "1779:31:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 2316,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2278,
                          "src": "1796:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2315,
                        "id": 2317,
                        "nodeType": "Return",
                        "src": "1789:14:19"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2311,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:84:19",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 2319,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1735:6:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2312,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1741:2:19"
                  },
                  "returnParameters": {
                    "id": 2315,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2314,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2319,
                        "src": "1773:4:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2313,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:6:19"
                  },
                  "scope": 2377,
                  "src": "1726:84:19",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2330,
                    "nodeType": "Block",
                    "src": "1929:77:19",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2323,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2319,
                            "src": "1943:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 2324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1943:8:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2329,
                        "nodeType": "IfStatement",
                        "src": "1939:61:19",
                        "trueBody": {
                          "id": 2328,
                          "nodeType": "Block",
                          "src": "1953:47:19",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2325,
                                  "name": "EnforcedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2291,
                                  "src": "1974:13:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 2326,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1974:15:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 2327,
                              "nodeType": "RevertStatement",
                              "src": "1967:22:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2320,
                    "nodeType": "StructuredDocumentation",
                    "src": "1816:57:19",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 2331,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1887:17:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2321,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1904:2:19"
                  },
                  "returnParameters": {
                    "id": 2322,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1929:0:19"
                  },
                  "scope": 2377,
                  "src": "1878:128:19",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2343,
                    "nodeType": "Block",
                    "src": "2126:78:19",
                    "statements": [
                      {
                        "condition": {
                          "id": 2337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2140:9:19",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2335,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2319,
                              "src": "2141:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 2336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2141:8:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2342,
                        "nodeType": "IfStatement",
                        "src": "2136:62:19",
                        "trueBody": {
                          "id": 2341,
                          "nodeType": "Block",
                          "src": "2151:47:19",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2338,
                                  "name": "ExpectedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2294,
                                  "src": "2172:13:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 2339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2172:15:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 2340,
                              "nodeType": "RevertStatement",
                              "src": "2165:22:19"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2332,
                    "nodeType": "StructuredDocumentation",
                    "src": "2012:61:19",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 2344,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "2087:14:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2333,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2101:2:19"
                  },
                  "returnParameters": {
                    "id": 2334,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2126:0:19"
                  },
                  "scope": 2377,
                  "src": "2078:126:19",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2359,
                    "nodeType": "Block",
                    "src": "2388:66:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 2352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2350,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2278,
                            "src": "2398:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2408:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2398:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2353,
                        "nodeType": "ExpressionStatement",
                        "src": "2398:14:19"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2355,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2251,
                                "src": "2434:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2434:12:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2354,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2283,
                            "src": "2427:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2427:20:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2358,
                        "nodeType": "EmitStatement",
                        "src": "2422:25:19"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2345,
                    "nodeType": "StructuredDocumentation",
                    "src": "2210:124:19",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 2360,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2348,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2347,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2374:13:19"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2302,
                        "src": "2374:13:19"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2374:13:19"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2348:6:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2346,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2354:2:19"
                  },
                  "returnParameters": {
                    "id": 2349,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2388:0:19"
                  },
                  "scope": 2377,
                  "src": "2339:115:19",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2375,
                    "nodeType": "Block",
                    "src": "2634:69:19",
                    "statements": [
                      {
                        "expression": {
                          "id": 2368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2366,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2278,
                            "src": "2644:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 2367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2654:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2644:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2369,
                        "nodeType": "ExpressionStatement",
                        "src": "2644:15:19"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2371,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2251,
                                "src": "2683:10:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2372,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2683:12:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2370,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2288,
                            "src": "2674:8:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 2373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2674:22:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2374,
                        "nodeType": "EmitStatement",
                        "src": "2669:27:19"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2361,
                    "nodeType": "StructuredDocumentation",
                    "src": "2460:121:19",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 2376,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2364,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2363,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2623:10:19"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2310,
                        "src": "2623:10:19"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2623:10:19"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2595:8:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2362,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:19"
                  },
                  "returnParameters": {
                    "id": 2365,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2634:0:19"
                  },
                  "scope": 2377,
                  "src": "2586:117:19",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 2378,
              "src": "615:2090:19",
              "usedErrors": [
                2291,
                2294
              ],
              "usedEvents": [
                2283,
                2288
              ]
            }
          ],
          "src": "102:2604:19"
        },
        "id": 19
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "ast": {
          "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts/utils/math/SafeMath.sol",
          "exportedSymbols": {
            "SafeMath": [
              2689
            ]
          },
          "id": 2690,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2379,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "107:23:20"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SafeMath",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 2380,
                "nodeType": "StructuredDocumentation",
                "src": "285:196:20",
                "text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
              },
              "fullyImplemented": true,
              "id": 2689,
              "linearizedBaseContracts": [
                2689
              ],
              "name": "SafeMath",
              "nameLocation": "490:8:20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2411,
                    "nodeType": "Block",
                    "src": "717:140:20",
                    "statements": [
                      {
                        "id": 2410,
                        "nodeType": "UncheckedBlock",
                        "src": "727:124:20",
                        "statements": [
                          {
                            "assignments": [
                              2393
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2393,
                                "mutability": "mutable",
                                "name": "c",
                                "nameLocation": "759:1:20",
                                "nodeType": "VariableDeclaration",
                                "scope": 2410,
                                "src": "751:9:20",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 2392,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "751:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2397,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2394,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2383,
                                "src": "763:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 2395,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2385,
                                "src": "767:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "763:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "751:17:20"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2398,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2393,
                                "src": "786:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 2399,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2383,
                                "src": "790:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "786:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2405,
                            "nodeType": "IfStatement",
                            "src": "782:28:20",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 2401,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "801:5:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 2402,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "808:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 2403,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "800:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 2391,
                              "id": 2404,
                              "nodeType": "Return",
                              "src": "793:17:20"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 2406,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "832:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "id": 2407,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2393,
                                  "src": "838:1:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2408,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "831:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 2391,
                            "id": 2409,
                            "nodeType": "Return",
                            "src": "824:16:20"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2381,
                    "nodeType": "StructuredDocumentation",
                    "src": "505:131:20",
                    "text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
                  },
                  "id": 2412,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryAdd",
                  "nameLocation": "650:6:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2386,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2383,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "665:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2412,
                        "src": "657:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2382,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "657:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2385,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "676:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2412,
                        "src": "668:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2384,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "668:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "656:22:20"
                  },
                  "returnParameters": {
                    "id": 2391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2388,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2412,
                        "src": "702:4:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2387,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "702:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2390,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2412,
                        "src": "708:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2389,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "708:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "701:15:20"
                  },
                  "scope": 2689,
                  "src": "641:216:20",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2439,
                    "nodeType": "Block",
                    "src": "1078:113:20",
                    "statements": [
                      {
                        "id": 2438,
                        "nodeType": "UncheckedBlock",
                        "src": "1088:97:20",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2424,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2417,
                                "src": "1116:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 2425,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2415,
                                "src": "1120:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1116:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2431,
                            "nodeType": "IfStatement",
                            "src": "1112:28:20",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 2427,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1131:5:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 2428,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1138:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 2429,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1130:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 2423,
                              "id": 2430,
                              "nodeType": "Return",
                              "src": "1123:17:20"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 2432,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1162:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2435,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2433,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2415,
                                    "src": "1168:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2434,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2417,
                                    "src": "1172:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1168:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2436,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1161:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 2423,
                            "id": 2437,
                            "nodeType": "Return",
                            "src": "1154:20:20"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2413,
                    "nodeType": "StructuredDocumentation",
                    "src": "863:134:20",
                    "text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
                  },
                  "id": 2440,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "trySub",
                  "nameLocation": "1011:6:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2415,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "1026:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2440,
                        "src": "1018:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2414,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1018:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2417,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "1037:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2440,
                        "src": "1029:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2416,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1029:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1017:22:20"
                  },
                  "returnParameters": {
                    "id": 2423,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2420,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2440,
                        "src": "1063:4:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2419,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1063:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2422,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2440,
                        "src": "1069:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2421,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1069:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1062:15:20"
                  },
                  "scope": 2689,
                  "src": "1002:189:20",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2481,
                    "nodeType": "Block",
                    "src": "1415:417:20",
                    "statements": [
                      {
                        "id": 2480,
                        "nodeType": "UncheckedBlock",
                        "src": "1425:401:20",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2452,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2443,
                                "src": "1683:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2453,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1688:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1683:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2459,
                            "nodeType": "IfStatement",
                            "src": "1679:28:20",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "74727565",
                                    "id": 2455,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1699:4:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 2456,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1705:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 2457,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1698:9:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 2451,
                              "id": 2458,
                              "nodeType": "Return",
                              "src": "1691:16:20"
                            }
                          },
                          {
                            "assignments": [
                              2461
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 2461,
                                "mutability": "mutable",
                                "name": "c",
                                "nameLocation": "1729:1:20",
                                "nodeType": "VariableDeclaration",
                                "scope": 2480,
                                "src": "1721:9:20",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 2460,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1721:7:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 2465,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2462,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2443,
                                "src": "1733:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 2463,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2445,
                                "src": "1737:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1733:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "1721:17:20"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2468,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2466,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2461,
                                  "src": "1756:1:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 2467,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2443,
                                  "src": "1760:1:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1756:5:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 2469,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2445,
                                "src": "1765:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1756:10:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2475,
                            "nodeType": "IfStatement",
                            "src": "1752:33:20",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 2471,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1776:5:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 2472,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1783:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 2473,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1775:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 2451,
                              "id": 2474,
                              "nodeType": "Return",
                              "src": "1768:17:20"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 2476,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1807:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "id": 2477,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2461,
                                  "src": "1813:1:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2478,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1806:9:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 2451,
                            "id": 2479,
                            "nodeType": "Return",
                            "src": "1799:16:20"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2441,
                    "nodeType": "StructuredDocumentation",
                    "src": "1197:137:20",
                    "text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
                  },
                  "id": 2482,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryMul",
                  "nameLocation": "1348:6:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2446,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2443,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "1363:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2482,
                        "src": "1355:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2442,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1355:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2445,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "1374:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2482,
                        "src": "1366:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2444,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1366:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1354:22:20"
                  },
                  "returnParameters": {
                    "id": 2451,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2448,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2482,
                        "src": "1400:4:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2447,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1400:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2450,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2482,
                        "src": "1406:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2449,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1406:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1399:15:20"
                  },
                  "scope": 2689,
                  "src": "1339:493:20",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2509,
                    "nodeType": "Block",
                    "src": "2057:114:20",
                    "statements": [
                      {
                        "id": 2508,
                        "nodeType": "UncheckedBlock",
                        "src": "2067:98:20",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2494,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2487,
                                "src": "2095:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2100:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2095:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2501,
                            "nodeType": "IfStatement",
                            "src": "2091:29:20",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 2497,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2111:5:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 2498,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2118:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 2499,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2110:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 2493,
                              "id": 2500,
                              "nodeType": "Return",
                              "src": "2103:17:20"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 2502,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2142:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2505,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2503,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2485,
                                    "src": "2148:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 2504,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2487,
                                    "src": "2152:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2148:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2506,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2141:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 2493,
                            "id": 2507,
                            "nodeType": "Return",
                            "src": "2134:20:20"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2483,
                    "nodeType": "StructuredDocumentation",
                    "src": "1838:138:20",
                    "text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
                  },
                  "id": 2510,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryDiv",
                  "nameLocation": "1990:6:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2488,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2485,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "2005:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2510,
                        "src": "1997:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2484,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1997:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2487,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "2016:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2510,
                        "src": "2008:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2486,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2008:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1996:22:20"
                  },
                  "returnParameters": {
                    "id": 2493,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2490,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2510,
                        "src": "2042:4:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2489,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2042:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2492,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2510,
                        "src": "2048:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2491,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2048:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2041:15:20"
                  },
                  "scope": 2689,
                  "src": "1981:190:20",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2537,
                    "nodeType": "Block",
                    "src": "2406:114:20",
                    "statements": [
                      {
                        "id": 2536,
                        "nodeType": "UncheckedBlock",
                        "src": "2416:98:20",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2522,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2515,
                                "src": "2444:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2449:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2444:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 2529,
                            "nodeType": "IfStatement",
                            "src": "2440:29:20",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 2525,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2460:5:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 2526,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2467:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 2527,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2459:10:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 2521,
                              "id": 2528,
                              "nodeType": "Return",
                              "src": "2452:17:20"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 2530,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2491:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2533,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2531,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2513,
                                    "src": "2497:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "%",
                                  "rightExpression": {
                                    "id": 2532,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2515,
                                    "src": "2501:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2497:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2534,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2490:13:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 2521,
                            "id": 2535,
                            "nodeType": "Return",
                            "src": "2483:20:20"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2511,
                    "nodeType": "StructuredDocumentation",
                    "src": "2177:148:20",
                    "text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
                  },
                  "id": 2538,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryMod",
                  "nameLocation": "2339:6:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2516,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2513,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "2354:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2538,
                        "src": "2346:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2512,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2346:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2515,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "2365:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2538,
                        "src": "2357:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2514,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2357:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2345:22:20"
                  },
                  "returnParameters": {
                    "id": 2521,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2518,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2538,
                        "src": "2391:4:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2517,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2391:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2520,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2538,
                        "src": "2397:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2519,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2397:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2390:15:20"
                  },
                  "scope": 2689,
                  "src": "2330:190:20",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2552,
                    "nodeType": "Block",
                    "src": "2822:29:20",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2548,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2541,
                            "src": "2839:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 2549,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2543,
                            "src": "2843:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2839:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2547,
                        "id": 2551,
                        "nodeType": "Return",
                        "src": "2832:12:20"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2539,
                    "nodeType": "StructuredDocumentation",
                    "src": "2526:224:20",
                    "text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
                  },
                  "id": 2553,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add",
                  "nameLocation": "2764:3:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2544,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2541,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "2776:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2553,
                        "src": "2768:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2540,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2768:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2543,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "2787:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2553,
                        "src": "2779:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2542,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2779:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2767:22:20"
                  },
                  "returnParameters": {
                    "id": 2547,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2546,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2553,
                        "src": "2813:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2545,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2813:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2812:9:20"
                  },
                  "scope": 2689,
                  "src": "2755:96:20",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2567,
                    "nodeType": "Block",
                    "src": "3189:29:20",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2563,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2556,
                            "src": "3206:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2564,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2558,
                            "src": "3210:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3206:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2562,
                        "id": 2566,
                        "nodeType": "Return",
                        "src": "3199:12:20"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2554,
                    "nodeType": "StructuredDocumentation",
                    "src": "2857:260:20",
                    "text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
                  },
                  "id": 2568,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nameLocation": "3131:3:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2559,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2556,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "3143:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2568,
                        "src": "3135:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2555,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3135:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2558,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "3154:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2568,
                        "src": "3146:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2557,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3146:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3134:22:20"
                  },
                  "returnParameters": {
                    "id": 2562,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2561,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2568,
                        "src": "3180:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2560,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3180:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3179:9:20"
                  },
                  "scope": 2689,
                  "src": "3122:96:20",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2582,
                    "nodeType": "Block",
                    "src": "3532:29:20",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2578,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2571,
                            "src": "3549:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 2579,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2573,
                            "src": "3553:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3549:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2577,
                        "id": 2581,
                        "nodeType": "Return",
                        "src": "3542:12:20"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2569,
                    "nodeType": "StructuredDocumentation",
                    "src": "3224:236:20",
                    "text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
                  },
                  "id": 2583,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mul",
                  "nameLocation": "3474:3:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2574,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2571,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "3486:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2583,
                        "src": "3478:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2570,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3478:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2573,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "3497:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2583,
                        "src": "3489:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2572,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3489:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3477:22:20"
                  },
                  "returnParameters": {
                    "id": 2577,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2576,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2583,
                        "src": "3523:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2575,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3523:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3522:9:20"
                  },
                  "scope": 2689,
                  "src": "3465:96:20",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2597,
                    "nodeType": "Block",
                    "src": "3917:29:20",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2593,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2586,
                            "src": "3934:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 2594,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2588,
                            "src": "3938:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3934:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2592,
                        "id": 2596,
                        "nodeType": "Return",
                        "src": "3927:12:20"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2584,
                    "nodeType": "StructuredDocumentation",
                    "src": "3567:278:20",
                    "text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 2598,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nameLocation": "3859:3:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2589,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2586,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "3871:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2598,
                        "src": "3863:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2585,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3863:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2588,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "3882:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2598,
                        "src": "3874:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2587,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3874:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3862:22:20"
                  },
                  "returnParameters": {
                    "id": 2592,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2591,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2598,
                        "src": "3908:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2590,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3908:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3907:9:20"
                  },
                  "scope": 2689,
                  "src": "3850:96:20",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2612,
                    "nodeType": "Block",
                    "src": "4466:29:20",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2608,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2601,
                            "src": "4483:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 2609,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2603,
                            "src": "4487:1:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4483:5:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2607,
                        "id": 2611,
                        "nodeType": "Return",
                        "src": "4476:12:20"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2599,
                    "nodeType": "StructuredDocumentation",
                    "src": "3952:442:20",
                    "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 2613,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mod",
                  "nameLocation": "4408:3:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2604,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2601,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "4420:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2613,
                        "src": "4412:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2600,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4412:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2603,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "4431:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2613,
                        "src": "4423:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2602,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4423:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4411:22:20"
                  },
                  "returnParameters": {
                    "id": 2607,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2606,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2613,
                        "src": "4457:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2605,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4457:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4456:9:20"
                  },
                  "scope": 2689,
                  "src": "4399:96:20",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2637,
                    "nodeType": "Block",
                    "src": "5054:106:20",
                    "statements": [
                      {
                        "id": 2636,
                        "nodeType": "UncheckedBlock",
                        "src": "5064:90:20",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2628,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2626,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2618,
                                    "src": "5096:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "id": 2627,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2616,
                                    "src": "5101:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5096:6:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 2629,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2620,
                                  "src": "5104:12:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 2625,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "5088:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 2630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5088:29:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2631,
                            "nodeType": "ExpressionStatement",
                            "src": "5088:29:20"
                          },
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2632,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2616,
                                "src": "5138:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2633,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2618,
                                "src": "5142:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5138:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 2624,
                            "id": 2635,
                            "nodeType": "Return",
                            "src": "5131:12:20"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2614,
                    "nodeType": "StructuredDocumentation",
                    "src": "4501:453:20",
                    "text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
                  },
                  "id": 2638,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nameLocation": "4968:3:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2621,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2616,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "4980:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2638,
                        "src": "4972:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2615,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4972:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2618,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "4991:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2638,
                        "src": "4983:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2617,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4983:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2620,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "5008:12:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2638,
                        "src": "4994:26:20",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2619,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4994:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4971:50:20"
                  },
                  "returnParameters": {
                    "id": 2624,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2623,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2638,
                        "src": "5045:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2622,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5045:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5044:9:20"
                  },
                  "scope": 2689,
                  "src": "4959:201:20",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2662,
                    "nodeType": "Block",
                    "src": "5739:105:20",
                    "statements": [
                      {
                        "id": 2661,
                        "nodeType": "UncheckedBlock",
                        "src": "5749:89:20",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2653,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2651,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2643,
                                    "src": "5781:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 2652,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5785:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "5781:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 2654,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2645,
                                  "src": "5788:12:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 2650,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "5773:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 2655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5773:28:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2656,
                            "nodeType": "ExpressionStatement",
                            "src": "5773:28:20"
                          },
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2657,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2641,
                                "src": "5822:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 2658,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2643,
                                "src": "5826:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5822:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 2649,
                            "id": 2660,
                            "nodeType": "Return",
                            "src": "5815:12:20"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2639,
                    "nodeType": "StructuredDocumentation",
                    "src": "5166:473:20",
                    "text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 2663,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nameLocation": "5653:3:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2641,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "5665:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2663,
                        "src": "5657:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2640,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5657:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2643,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "5676:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2663,
                        "src": "5668:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2642,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5668:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2645,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "5693:12:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2663,
                        "src": "5679:26:20",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2644,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5679:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5656:50:20"
                  },
                  "returnParameters": {
                    "id": 2649,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2648,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2663,
                        "src": "5730:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2647,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5730:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5729:9:20"
                  },
                  "scope": 2689,
                  "src": "5644:200:20",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2687,
                    "nodeType": "Block",
                    "src": "6585:105:20",
                    "statements": [
                      {
                        "id": 2686,
                        "nodeType": "UncheckedBlock",
                        "src": "6595:89:20",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2678,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2676,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2668,
                                    "src": "6627:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 2677,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6631:1:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "6627:5:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 2679,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2670,
                                  "src": "6634:12:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 2675,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "6619:7:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 2680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6619:28:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 2681,
                            "nodeType": "ExpressionStatement",
                            "src": "6619:28:20"
                          },
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2682,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2666,
                                "src": "6668:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "id": 2683,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2668,
                                "src": "6672:1:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6668:5:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 2674,
                            "id": 2685,
                            "nodeType": "Return",
                            "src": "6661:12:20"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2664,
                    "nodeType": "StructuredDocumentation",
                    "src": "5850:635:20",
                    "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 2688,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mod",
                  "nameLocation": "6499:3:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2671,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2666,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "6511:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2688,
                        "src": "6503:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2665,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6503:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2668,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "6522:1:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2688,
                        "src": "6514:9:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2667,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6514:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2670,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "6539:12:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2688,
                        "src": "6525:26:20",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2669,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6525:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6502:50:20"
                  },
                  "returnParameters": {
                    "id": 2674,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2673,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2688,
                        "src": "6576:7:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2672,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6576:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6575:9:20"
                  },
                  "scope": 2689,
                  "src": "6490:200:20",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2690,
              "src": "482:6210:20",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "107:6586:20"
        },
        "id": 20
      },
      "contracts/DeciCourt.sol": {
        "ast": {
          "absolutePath": "contracts/DeciCourt.sol",
          "exportedSymbols": {
            "DeciCourt": [
              4966
            ],
            "IERC20": [
              877
            ],
            "ReentrancyGuard": [
              1190
            ]
          },
          "id": 4967,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2691,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:21"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 2692,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4967,
              "sourceUnit": 878,
              "src": "58:56:21",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 2693,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4967,
              "sourceUnit": 1191,
              "src": "115:59:21",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2694,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "197:15:21"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1190,
                    "src": "197:15:21"
                  },
                  "id": 2695,
                  "nodeType": "InheritanceSpecifier",
                  "src": "197:15:21"
                }
              ],
              "canonicalName": "DeciCourt",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 4966,
              "linearizedBaseContracts": [
                4966,
                1190
              ],
              "name": "DeciCourt",
              "nameLocation": "184:9:21",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "5c5f5f5c62d8082bc010726f98db2630d9da2b426a6717bd67bfbd9e8e179638",
                  "id": 2705,
                  "name": "CaseCreated",
                  "nameLocation": "248:11:21",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2697,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "caseId",
                        "nameLocation": "276:6:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2705,
                        "src": "260:22:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2696,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "260:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2699,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "plaintiff",
                        "nameLocation": "300:9:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2705,
                        "src": "284:25:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "284:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2701,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "defendant",
                        "nameLocation": "327:9:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2705,
                        "src": "311:25:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2700,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "311:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2703,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "filingFee",
                        "nameLocation": "346:9:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2705,
                        "src": "338:17:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2702,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "338:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "259:97:21"
                  },
                  "src": "242:115:21"
                },
                {
                  "anonymous": false,
                  "eventSelector": "302e82b0b7908cfac0232eeb6a83332cbf587d0cb58eaa7ba72f884c149910fa",
                  "id": 2711,
                  "name": "JurorRegistered",
                  "nameLocation": "368:15:21",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2710,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2707,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "juror",
                        "nameLocation": "400:5:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2711,
                        "src": "384:21:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2706,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "384:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2709,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "stakeAmount",
                        "nameLocation": "415:11:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2711,
                        "src": "407:19:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2708,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "407:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "383:44:21"
                  },
                  "src": "362:66:21"
                },
                {
                  "anonymous": false,
                  "eventSelector": "f67e7162188cb7e3f756d0f6d7c86d1b7cc88b891ae19dd58118705a7859034b",
                  "id": 2715,
                  "name": "JurorUnregistered",
                  "nameLocation": "439:17:21",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2714,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2713,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "juror",
                        "nameLocation": "473:5:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2715,
                        "src": "457:21:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2712,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "457:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "456:23:21"
                  },
                  "src": "433:47:21"
                },
                {
                  "anonymous": false,
                  "eventSelector": "3834a2c8ea101e1468b529270d35fbff0a12de32a5a7e5729b8b4dad6fb32c01",
                  "id": 2721,
                  "name": "VoteCommitted",
                  "nameLocation": "491:13:21",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2720,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2717,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "caseId",
                        "nameLocation": "521:6:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2721,
                        "src": "505:22:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2716,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "505:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2719,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "juror",
                        "nameLocation": "545:5:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2721,
                        "src": "529:21:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2718,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "529:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "504:47:21"
                  },
                  "src": "485:67:21"
                },
                {
                  "anonymous": false,
                  "eventSelector": "fb0a2a4b906424480a54d601db26ad920592115a97358d199495345723df34cb",
                  "id": 2730,
                  "name": "VoteRevealed",
                  "nameLocation": "563:12:21",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2729,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2723,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "caseId",
                        "nameLocation": "592:6:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2730,
                        "src": "576:22:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2722,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "576:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2725,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "juror",
                        "nameLocation": "616:5:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2730,
                        "src": "600:21:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2724,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "600:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2728,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "vote",
                        "nameLocation": "634:4:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2730,
                        "src": "623:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_VoteOption_$2789",
                          "typeString": "enum DeciCourt.VoteOption"
                        },
                        "typeName": {
                          "id": 2727,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2726,
                            "name": "VoteOption",
                            "nameLocations": [
                              "623:10:21"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2789,
                            "src": "623:10:21"
                          },
                          "referencedDeclaration": 2789,
                          "src": "623:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VoteOption_$2789",
                            "typeString": "enum DeciCourt.VoteOption"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "575:64:21"
                  },
                  "src": "557:83:21"
                },
                {
                  "anonymous": false,
                  "eventSelector": "b179b08881890bd8e13edde8255f745991199906456a378692ec11430a4560a9",
                  "id": 2742,
                  "name": "CaseResolved",
                  "nameLocation": "651:12:21",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2741,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2732,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "caseId",
                        "nameLocation": "680:6:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2742,
                        "src": "664:22:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2731,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "664:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2734,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "winner",
                        "nameLocation": "696:6:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2742,
                        "src": "688:14:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2733,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "688:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2736,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "plaintiffReward",
                        "nameLocation": "712:15:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2742,
                        "src": "704:23:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2735,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "704:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2738,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "defendantReward",
                        "nameLocation": "737:15:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2742,
                        "src": "729:23:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2737,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "729:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2740,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalJurorReward",
                        "nameLocation": "762:16:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2742,
                        "src": "754:24:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2739,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "754:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "663:116:21"
                  },
                  "src": "645:135:21"
                },
                {
                  "anonymous": false,
                  "eventSelector": "7055524dc69306fe397256b9b4ef9fe5a3b01235fdb799638b61e323b9e2c3bc",
                  "id": 2750,
                  "name": "AppealInitiated",
                  "nameLocation": "791:15:21",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2749,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2744,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "caseId",
                        "nameLocation": "823:6:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2750,
                        "src": "807:22:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2743,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "807:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2746,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "appellant",
                        "nameLocation": "847:9:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2750,
                        "src": "831:25:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2745,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "831:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2748,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "appealDeposit",
                        "nameLocation": "866:13:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2750,
                        "src": "858:21:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2747,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "806:74:21"
                  },
                  "src": "785:96:21"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d4406e003c73582310b2b897fd7cacd5866ecaed769ac129eb0b1dcbb0901116",
                  "id": 2758,
                  "name": "AppealResolved",
                  "nameLocation": "892:14:21",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2757,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2752,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "caseId",
                        "nameLocation": "923:6:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2758,
                        "src": "907:22:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2751,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "907:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2754,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "winner",
                        "nameLocation": "939:6:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2758,
                        "src": "931:14:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2753,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2756,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "appealSuccessful",
                        "nameLocation": "952:16:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2758,
                        "src": "947:21:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2755,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "947:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "906:63:21"
                  },
                  "src": "886:84:21"
                },
                {
                  "anonymous": false,
                  "eventSelector": "f258ac71ca04f4b808e0c4f36355a6bbcd15af6c6cf087ba2655d6b05c81d2d9",
                  "id": 2768,
                  "name": "JurorReputationUpdated",
                  "nameLocation": "981:22:21",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2767,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2760,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "juror",
                        "nameLocation": "1020:5:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2768,
                        "src": "1004:21:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2759,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1004:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2762,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newReputation",
                        "nameLocation": "1035:13:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2768,
                        "src": "1027:21:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2761,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1027:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2764,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "correctVotes",
                        "nameLocation": "1058:12:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2768,
                        "src": "1050:20:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2763,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1050:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2766,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalVotes",
                        "nameLocation": "1080:10:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2768,
                        "src": "1072:18:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2765,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1072:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1003:88:21"
                  },
                  "src": "975:117:21"
                },
                {
                  "anonymous": false,
                  "eventSelector": "43b8287040b746addd91738208fe6a278fd8dc7325e4979c30bf3c8d0409d717",
                  "id": 2778,
                  "name": "JurorPenalized",
                  "nameLocation": "1103:14:21",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2777,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2770,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "juror",
                        "nameLocation": "1134:5:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2778,
                        "src": "1118:21:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2769,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1118:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2772,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "penaltyAmount",
                        "nameLocation": "1149:13:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2778,
                        "src": "1141:21:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2771,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1141:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2774,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "penaltyRate",
                        "nameLocation": "1172:11:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2778,
                        "src": "1164:19:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2773,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1164:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2776,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reason",
                        "nameLocation": "1192:6:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2778,
                        "src": "1185:13:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2775,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1185:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1117:82:21"
                  },
                  "src": "1097:103:21"
                },
                {
                  "canonicalName": "DeciCourt.CaseStatus",
                  "id": 2785,
                  "members": [
                    {
                      "id": 2779,
                      "name": "Created",
                      "nameLocation": "1258:7:21",
                      "nodeType": "EnumValue",
                      "src": "1258:7:21"
                    },
                    {
                      "id": 2780,
                      "name": "Voting",
                      "nameLocation": "1267:6:21",
                      "nodeType": "EnumValue",
                      "src": "1267:6:21"
                    },
                    {
                      "id": 2781,
                      "name": "Resolving",
                      "nameLocation": "1275:9:21",
                      "nodeType": "EnumValue",
                      "src": "1275:9:21"
                    },
                    {
                      "id": 2782,
                      "name": "Resolved",
                      "nameLocation": "1286:8:21",
                      "nodeType": "EnumValue",
                      "src": "1286:8:21"
                    },
                    {
                      "id": 2783,
                      "name": "Appealing",
                      "nameLocation": "1296:9:21",
                      "nodeType": "EnumValue",
                      "src": "1296:9:21"
                    },
                    {
                      "id": 2784,
                      "name": "AppealResolved",
                      "nameLocation": "1307:14:21",
                      "nodeType": "EnumValue",
                      "src": "1307:14:21"
                    }
                  ],
                  "name": "CaseStatus",
                  "nameLocation": "1245:10:21",
                  "nodeType": "EnumDefinition",
                  "src": "1240:83:21"
                },
                {
                  "canonicalName": "DeciCourt.VoteOption",
                  "id": 2789,
                  "members": [
                    {
                      "id": 2786,
                      "name": "None",
                      "nameLocation": "1346:4:21",
                      "nodeType": "EnumValue",
                      "src": "1346:4:21"
                    },
                    {
                      "id": 2787,
                      "name": "ForPlaintiff",
                      "nameLocation": "1352:12:21",
                      "nodeType": "EnumValue",
                      "src": "1352:12:21"
                    },
                    {
                      "id": 2788,
                      "name": "ForDefendant",
                      "nameLocation": "1366:12:21",
                      "nodeType": "EnumValue",
                      "src": "1366:12:21"
                    }
                  ],
                  "name": "VoteOption",
                  "nameLocation": "1333:10:21",
                  "nodeType": "EnumDefinition",
                  "src": "1328:52:21"
                },
                {
                  "canonicalName": "DeciCourt.Case",
                  "id": 2837,
                  "members": [
                    {
                      "constant": false,
                      "id": 2791,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "1416:2:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "1408:10:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2790,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1408:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2793,
                      "mutability": "mutable",
                      "name": "plaintiff",
                      "nameLocation": "1436:9:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "1428:17:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2792,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1428:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2795,
                      "mutability": "mutable",
                      "name": "defendant",
                      "nameLocation": "1463:9:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "1455:17:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2794,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1455:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2797,
                      "mutability": "mutable",
                      "name": "evidenceCID",
                      "nameLocation": "1489:11:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "1482:18:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2796,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1482:6:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2800,
                      "mutability": "mutable",
                      "name": "status",
                      "nameLocation": "1564:6:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "1553:17:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CaseStatus_$2785",
                        "typeString": "enum DeciCourt.CaseStatus"
                      },
                      "typeName": {
                        "id": 2799,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2798,
                          "name": "CaseStatus",
                          "nameLocations": [
                            "1553:10:21"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2785,
                          "src": "1553:10:21"
                        },
                        "referencedDeclaration": 2785,
                        "src": "1553:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CaseStatus_$2785",
                          "typeString": "enum DeciCourt.CaseStatus"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2802,
                      "mutability": "mutable",
                      "name": "filingFee",
                      "nameLocation": "1588:9:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "1580:17:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2801,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1580:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2805,
                      "mutability": "mutable",
                      "name": "jurors",
                      "nameLocation": "1654:6:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "1644:16:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2803,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1644:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2804,
                        "nodeType": "ArrayTypeName",
                        "src": "1644:9:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2809,
                      "mutability": "mutable",
                      "name": "committedVotes",
                      "nameLocation": "1730:14:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "1702:42:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                        "typeString": "mapping(address => bytes32)"
                      },
                      "typeName": {
                        "id": 2808,
                        "keyName": "",
                        "keyNameLocation": "-1:-1:-1",
                        "keyType": {
                          "id": 2806,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1710:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1702:27:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 2807,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1721:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2814,
                      "mutability": "mutable",
                      "name": "revealedVotes",
                      "nameLocation": "1813:13:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "1782:44:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_enum$_VoteOption_$2789_$",
                        "typeString": "mapping(address => enum DeciCourt.VoteOption)"
                      },
                      "typeName": {
                        "id": 2813,
                        "keyName": "",
                        "keyNameLocation": "-1:-1:-1",
                        "keyType": {
                          "id": 2810,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1790:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1782:30:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_enum$_VoteOption_$2789_$",
                          "typeString": "mapping(address => enum DeciCourt.VoteOption)"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 2812,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2811,
                            "name": "VoteOption",
                            "nameLocations": [
                              "1801:10:21"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2789,
                            "src": "1801:10:21"
                          },
                          "referencedDeclaration": 2789,
                          "src": "1801:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VoteOption_$2789",
                            "typeString": "enum DeciCourt.VoteOption"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2816,
                      "mutability": "mutable",
                      "name": "plaintiffVoteCount",
                      "nameLocation": "1872:18:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "1864:26:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2815,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1864:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2818,
                      "mutability": "mutable",
                      "name": "defendantVoteCount",
                      "nameLocation": "1908:18:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "1900:26:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2817,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1900:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2820,
                      "mutability": "mutable",
                      "name": "creationTime",
                      "nameLocation": "1944:12:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "1936:20:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2819,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1936:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2822,
                      "mutability": "mutable",
                      "name": "commitDeadline",
                      "nameLocation": "1974:14:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "1966:22:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2821,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1966:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2824,
                      "mutability": "mutable",
                      "name": "revealDeadline",
                      "nameLocation": "2032:14:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "2024:22:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2823,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2024:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2826,
                      "mutability": "mutable",
                      "name": "winner",
                      "nameLocation": "2090:6:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "2082:14:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2825,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2082:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2828,
                      "mutability": "mutable",
                      "name": "appellant",
                      "nameLocation": "2147:9:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "2139:17:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2827,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2139:7:21",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2830,
                      "mutability": "mutable",
                      "name": "appealDeposit",
                      "nameLocation": "2196:13:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "2188:21:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2829,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2188:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2832,
                      "mutability": "mutable",
                      "name": "appealDeadline",
                      "nameLocation": "2248:14:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "2240:22:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2831,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2240:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2834,
                      "mutability": "mutable",
                      "name": "isAppealed",
                      "nameLocation": "2303:10:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "2298:15:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2833,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2298:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2836,
                      "mutability": "mutable",
                      "name": "appealJurySize",
                      "nameLocation": "2361:14:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2837,
                      "src": "2353:22:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2835,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2353:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Case",
                  "nameLocation": "1393:4:21",
                  "nodeType": "StructDefinition",
                  "scope": 4966,
                  "src": "1386:1031:21",
                  "visibility": "public"
                },
                {
                  "canonicalName": "DeciCourt.JurorInfo",
                  "id": 2852,
                  "members": [
                    {
                      "constant": false,
                      "id": 2839,
                      "mutability": "mutable",
                      "name": "isRegistered",
                      "nameLocation": "2455:12:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2852,
                      "src": "2450:17:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2838,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2450:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2841,
                      "mutability": "mutable",
                      "name": "stakedAmount",
                      "nameLocation": "2485:12:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2852,
                      "src": "2477:20:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2840,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2477:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2843,
                      "mutability": "mutable",
                      "name": "isServing",
                      "nameLocation": "2546:9:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2852,
                      "src": "2541:14:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2842,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2541:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2845,
                      "mutability": "mutable",
                      "name": "correctVotes",
                      "nameLocation": "2613:12:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2852,
                      "src": "2605:20:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2844,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2605:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2847,
                      "mutability": "mutable",
                      "name": "totalVotes",
                      "nameLocation": "2671:10:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2852,
                      "src": "2663:18:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2846,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2663:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2849,
                      "mutability": "mutable",
                      "name": "reputationScore",
                      "nameLocation": "2726:15:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2852,
                      "src": "2718:23:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2848,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2718:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2851,
                      "mutability": "mutable",
                      "name": "consecutiveWrong",
                      "nameLocation": "2786:16:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 2852,
                      "src": "2778:24:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2850,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2778:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "JurorInfo",
                  "nameLocation": "2430:9:21",
                  "nodeType": "StructDefinition",
                  "scope": 4966,
                  "src": "2423:416:21",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "9eacb5b9",
                  "id": 2855,
                  "mutability": "immutable",
                  "name": "juryToken",
                  "nameLocation": "2900:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "2876:33:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$877",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 2854,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2853,
                      "name": "IERC20",
                      "nameLocations": [
                        "2876:6:21"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 877,
                      "src": "2876:6:21"
                    },
                    "referencedDeclaration": 877,
                    "src": "2876:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$877",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "232e0c87",
                  "id": 2857,
                  "mutability": "mutable",
                  "name": "filingFeeAmount",
                  "nameLocation": "3010:15:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "2995:30:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2856,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2995:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "d496c455",
                  "id": 2859,
                  "mutability": "mutable",
                  "name": "jurorStakeAmount",
                  "nameLocation": "3075:16:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "3060:31:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3060:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "536c8c15",
                  "id": 2861,
                  "mutability": "mutable",
                  "name": "jurySize",
                  "nameLocation": "3155:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "3140:23:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3140:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "6f833811",
                  "id": 2863,
                  "mutability": "mutable",
                  "name": "commitDuration",
                  "nameLocation": "3229:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "3214:29:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3214:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "886a6de1",
                  "id": 2865,
                  "mutability": "mutable",
                  "name": "revealDuration",
                  "nameLocation": "3297:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "3282:29:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3282:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "059a184c",
                  "id": 2867,
                  "mutability": "mutable",
                  "name": "jurorPenaltyRate",
                  "nameLocation": "3365:16:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "3350:31:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2866,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3350:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "317e48b6",
                  "id": 2869,
                  "mutability": "mutable",
                  "name": "appealDepositMultiplier",
                  "nameLocation": "3468:23:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "3453:38:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2868,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3453:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "867bc61b",
                  "id": 2871,
                  "mutability": "mutable",
                  "name": "appealDuration",
                  "nameLocation": "3555:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "3540:29:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3540:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "04495c99",
                  "id": 2873,
                  "mutability": "mutable",
                  "name": "appealJurySize",
                  "nameLocation": "3611:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "3596:29:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3596:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "6350eae8",
                  "id": 2875,
                  "mutability": "mutable",
                  "name": "nextCaseId",
                  "nameLocation": "3703:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "3688:25:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3688:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f09790dd",
                  "id": 2880,
                  "mutability": "mutable",
                  "name": "cases",
                  "nameLocation": "3751:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "3719:37:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Case_$2837_storage_$",
                    "typeString": "mapping(uint256 => struct DeciCourt.Case)"
                  },
                  "typeName": {
                    "id": 2879,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2876,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3727:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "3719:24:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Case_$2837_storage_$",
                      "typeString": "mapping(uint256 => struct DeciCourt.Case)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2878,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2877,
                        "name": "Case",
                        "nameLocations": [
                          "3738:4:21"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2837,
                        "src": "3738:4:21"
                      },
                      "referencedDeclaration": 2837,
                      "src": "3738:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                        "typeString": "struct DeciCourt.Case"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f643d3d7",
                  "id": 2883,
                  "mutability": "mutable",
                  "name": "jurorPool",
                  "nameLocation": "3780:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "3763:26:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2881,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3763:7:21",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2882,
                    "nodeType": "ArrayTypeName",
                    "src": "3763:9:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 2887,
                  "mutability": "mutable",
                  "name": "jurorPoolIndex",
                  "nameLocation": "3877:14:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "3841:50:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 2886,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2884,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3849:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "3841:27:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2885,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3860:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "b55796f3",
                  "id": 2892,
                  "mutability": "mutable",
                  "name": "jurorsInfo",
                  "nameLocation": "3963:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 4966,
                  "src": "3926:47:21",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_JurorInfo_$2852_storage_$",
                    "typeString": "mapping(address => struct DeciCourt.JurorInfo)"
                  },
                  "typeName": {
                    "id": 2891,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2888,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3934:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "3926:29:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_JurorInfo_$2852_storage_$",
                      "typeString": "mapping(address => struct DeciCourt.JurorInfo)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2890,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2889,
                        "name": "JurorInfo",
                        "nameLocations": [
                          "3945:9:21"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2852,
                        "src": "3945:9:21"
                      },
                      "referencedDeclaration": 2852,
                      "src": "3945:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                        "typeString": "struct DeciCourt.JurorInfo"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3038,
                    "nodeType": "Block",
                    "src": "4344:1218:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2916,
                                "name": "_tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2894,
                                "src": "4362:13:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2919,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4387:1:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2918,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4379:7:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2917,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4379:7:21",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2920,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4379:10:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4362:27:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420746f6b656e2061646472657373",
                              "id": 2922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4391:23:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
                                "typeString": "literal_string \"Invalid token address\""
                              },
                              "value": "Invalid token address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
                                "typeString": "literal_string \"Invalid token address\""
                              }
                            ],
                            "id": 2915,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4354:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4354:61:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2924,
                        "nodeType": "ExpressionStatement",
                        "src": "4354:61:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2926,
                                "name": "_filingFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2896,
                                "src": "4433:10:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2927,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4446:1:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4433:14:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "46696c696e6720666565206d75737420626520706f736974697665",
                              "id": 2929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4449:29:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a08813eb2bde19e99272d647c644580225315e44244afd0eec19bb01e5c5c683",
                                "typeString": "literal_string \"Filing fee must be positive\""
                              },
                              "value": "Filing fee must be positive"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a08813eb2bde19e99272d647c644580225315e44244afd0eec19bb01e5c5c683",
                                "typeString": "literal_string \"Filing fee must be positive\""
                              }
                            ],
                            "id": 2925,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4425:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4425:54:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2931,
                        "nodeType": "ExpressionStatement",
                        "src": "4425:54:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2933,
                                "name": "_jurorStake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2898,
                                "src": "4497:11:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2934,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4511:1:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4497:15:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4a75726f72207374616b65206d75737420626520706f736974697665",
                              "id": 2936,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4514:30:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c86bc7b02dc9dfc50f0418abd3ddcfa59f10e6e71f3deb79cfe75a861d98f196",
                                "typeString": "literal_string \"Juror stake must be positive\""
                              },
                              "value": "Juror stake must be positive"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c86bc7b02dc9dfc50f0418abd3ddcfa59f10e6e71f3deb79cfe75a861d98f196",
                                "typeString": "literal_string \"Juror stake must be positive\""
                              }
                            ],
                            "id": 2932,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4489:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4489:56:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2938,
                        "nodeType": "ExpressionStatement",
                        "src": "4489:56:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2942,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2940,
                                  "name": "_jurySize",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2900,
                                  "src": "4563:9:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2941,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4575:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4563:13:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2945,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2943,
                                  "name": "_jurySize",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2900,
                                  "src": "4580:9:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 2944,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4593:3:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "4580:16:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4563:33:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206a7572792073697a65",
                              "id": 2947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4598:19:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_273f18996f2cd832342f42c00bfbc7cae107898c5deac17f29a0a7e4fd73c56a",
                                "typeString": "literal_string \"Invalid jury size\""
                              },
                              "value": "Invalid jury size"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_273f18996f2cd832342f42c00bfbc7cae107898c5deac17f29a0a7e4fd73c56a",
                                "typeString": "literal_string \"Invalid jury size\""
                              }
                            ],
                            "id": 2939,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4555:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4555:63:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2949,
                        "nodeType": "ExpressionStatement",
                        "src": "4555:63:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2951,
                                "name": "_commitDuration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2902,
                                "src": "4636:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2952,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4654:1:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4636:19:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6d6d6974206475726174696f6e206d75737420626520706f736974697665",
                              "id": 2954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4657:34:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_32dfb5a72a648b5d42f945cca24e5fecbbddd41967fbef968375210b20f3693d",
                                "typeString": "literal_string \"Commit duration must be positive\""
                              },
                              "value": "Commit duration must be positive"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_32dfb5a72a648b5d42f945cca24e5fecbbddd41967fbef968375210b20f3693d",
                                "typeString": "literal_string \"Commit duration must be positive\""
                              }
                            ],
                            "id": 2950,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4628:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4628:64:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2956,
                        "nodeType": "ExpressionStatement",
                        "src": "4628:64:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2958,
                                "name": "_revealDuration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2904,
                                "src": "4710:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4728:1:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4710:19:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52657665616c206475726174696f6e206d75737420626520706f736974697665",
                              "id": 2961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4731:34:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8c702bd794f59c9a403fc34b035d8f15c911f28f35d2ad71120ebca0f9d82038",
                                "typeString": "literal_string \"Reveal duration must be positive\""
                              },
                              "value": "Reveal duration must be positive"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8c702bd794f59c9a403fc34b035d8f15c911f28f35d2ad71120ebca0f9d82038",
                                "typeString": "literal_string \"Reveal duration must be positive\""
                              }
                            ],
                            "id": 2957,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4702:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4702:64:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2963,
                        "nodeType": "ExpressionStatement",
                        "src": "4702:64:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2965,
                                "name": "_penaltyRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2906,
                                "src": "4784:12:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 2966,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4800:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "4784:19:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50656e616c747920726174652063616e6e6f74206578636565642031303025",
                              "id": 2968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4805:33:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_93db0234a6b1dc3b3452f627874dcd0c22ff133c3aa8e3fa3a1490f338aee957",
                                "typeString": "literal_string \"Penalty rate cannot exceed 100%\""
                              },
                              "value": "Penalty rate cannot exceed 100%"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_93db0234a6b1dc3b3452f627874dcd0c22ff133c3aa8e3fa3a1490f338aee957",
                                "typeString": "literal_string \"Penalty rate cannot exceed 100%\""
                              }
                            ],
                            "id": 2964,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4776:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4776:63:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2970,
                        "nodeType": "ExpressionStatement",
                        "src": "4776:63:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2972,
                                "name": "_appealDepositMultiplier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2908,
                                "src": "4857:24:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2973,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4884:1:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4857:28:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "41707065616c206465706f736974206d756c7469706c696572206d75737420626520706f736974697665",
                              "id": 2975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4887:44:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b8016d6685aa1437ff580e1aec742a4c15c879d9596b9538451f068b14855986",
                                "typeString": "literal_string \"Appeal deposit multiplier must be positive\""
                              },
                              "value": "Appeal deposit multiplier must be positive"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b8016d6685aa1437ff580e1aec742a4c15c879d9596b9538451f068b14855986",
                                "typeString": "literal_string \"Appeal deposit multiplier must be positive\""
                              }
                            ],
                            "id": 2971,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4849:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4849:83:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2977,
                        "nodeType": "ExpressionStatement",
                        "src": "4849:83:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2979,
                                "name": "_appealDuration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2910,
                                "src": "4950:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2980,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4968:1:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4950:19:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "41707065616c206475726174696f6e206d75737420626520706f736974697665",
                              "id": 2982,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4971:34:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4b964f22dc303a5effc78324037fbd7a9dc8e1a93f302b910549120b6c56b01d",
                                "typeString": "literal_string \"Appeal duration must be positive\""
                              },
                              "value": "Appeal duration must be positive"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4b964f22dc303a5effc78324037fbd7a9dc8e1a93f302b910549120b6c56b01d",
                                "typeString": "literal_string \"Appeal duration must be positive\""
                              }
                            ],
                            "id": 2978,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4942:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4942:64:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2984,
                        "nodeType": "ExpressionStatement",
                        "src": "4942:64:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2986,
                                "name": "_appealJurySize",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2912,
                                "src": "5024:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2987,
                                "name": "_jurySize",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2900,
                                "src": "5043:9:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5024:28:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "41707065616c206a7572792073697a65206d757374206265203e3d20726567756c6172206a7572792073697a65",
                              "id": 2989,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5054:47:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ecfbfe877702701a5a7e411c1a76952ae75dde6f8270fd45bde607af091e2617",
                                "typeString": "literal_string \"Appeal jury size must be >= regular jury size\""
                              },
                              "value": "Appeal jury size must be >= regular jury size"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ecfbfe877702701a5a7e411c1a76952ae75dde6f8270fd45bde607af091e2617",
                                "typeString": "literal_string \"Appeal jury size must be >= regular jury size\""
                              }
                            ],
                            "id": 2985,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5016:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5016:86:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2991,
                        "nodeType": "ExpressionStatement",
                        "src": "5016:86:21"
                      },
                      {
                        "expression": {
                          "id": 2996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2992,
                            "name": "juryToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2855,
                            "src": "5121:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$877",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2994,
                                "name": "_tokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2894,
                                "src": "5140:13:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2993,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 877,
                              "src": "5133:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 2995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5133:21:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$877",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "5121:33:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$877",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 2997,
                        "nodeType": "ExpressionStatement",
                        "src": "5121:33:21"
                      },
                      {
                        "expression": {
                          "id": 3000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2998,
                            "name": "filingFeeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2857,
                            "src": "5164:15:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2999,
                            "name": "_filingFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2896,
                            "src": "5182:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5164:28:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3001,
                        "nodeType": "ExpressionStatement",
                        "src": "5164:28:21"
                      },
                      {
                        "expression": {
                          "id": 3004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3002,
                            "name": "jurorStakeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2859,
                            "src": "5202:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3003,
                            "name": "_jurorStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2898,
                            "src": "5221:11:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5202:30:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3005,
                        "nodeType": "ExpressionStatement",
                        "src": "5202:30:21"
                      },
                      {
                        "expression": {
                          "id": 3008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3006,
                            "name": "jurySize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2861,
                            "src": "5242:8:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3007,
                            "name": "_jurySize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2900,
                            "src": "5253:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5242:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3009,
                        "nodeType": "ExpressionStatement",
                        "src": "5242:20:21"
                      },
                      {
                        "expression": {
                          "id": 3012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3010,
                            "name": "commitDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2863,
                            "src": "5272:14:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3011,
                            "name": "_commitDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2902,
                            "src": "5289:15:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5272:32:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3013,
                        "nodeType": "ExpressionStatement",
                        "src": "5272:32:21"
                      },
                      {
                        "expression": {
                          "id": 3016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3014,
                            "name": "revealDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2865,
                            "src": "5314:14:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3015,
                            "name": "_revealDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2904,
                            "src": "5331:15:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5314:32:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3017,
                        "nodeType": "ExpressionStatement",
                        "src": "5314:32:21"
                      },
                      {
                        "expression": {
                          "id": 3020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3018,
                            "name": "jurorPenaltyRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2867,
                            "src": "5356:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3019,
                            "name": "_penaltyRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2906,
                            "src": "5375:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5356:31:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3021,
                        "nodeType": "ExpressionStatement",
                        "src": "5356:31:21"
                      },
                      {
                        "expression": {
                          "id": 3024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3022,
                            "name": "appealDepositMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2869,
                            "src": "5397:23:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3023,
                            "name": "_appealDepositMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2908,
                            "src": "5423:24:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5397:50:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3025,
                        "nodeType": "ExpressionStatement",
                        "src": "5397:50:21"
                      },
                      {
                        "expression": {
                          "id": 3028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3026,
                            "name": "appealDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2871,
                            "src": "5457:14:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3027,
                            "name": "_appealDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2910,
                            "src": "5474:15:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5457:32:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3029,
                        "nodeType": "ExpressionStatement",
                        "src": "5457:32:21"
                      },
                      {
                        "expression": {
                          "id": 3032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3030,
                            "name": "appealJurySize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2873,
                            "src": "5499:14:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3031,
                            "name": "_appealJurySize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2912,
                            "src": "5516:15:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5499:32:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3033,
                        "nodeType": "ExpressionStatement",
                        "src": "5499:32:21"
                      },
                      {
                        "expression": {
                          "id": 3036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3034,
                            "name": "nextCaseId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2875,
                            "src": "5541:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 3035,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5554:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5541:14:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3037,
                        "nodeType": "ExpressionStatement",
                        "src": "5541:14:21"
                      }
                    ]
                  },
                  "id": 3039,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2913,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2894,
                        "mutability": "mutable",
                        "name": "_tokenAddress",
                        "nameLocation": "4036:13:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3039,
                        "src": "4028:21:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2893,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4028:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2896,
                        "mutability": "mutable",
                        "name": "_filingFee",
                        "nameLocation": "4067:10:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3039,
                        "src": "4059:18:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2895,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4059:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2898,
                        "mutability": "mutable",
                        "name": "_jurorStake",
                        "nameLocation": "4095:11:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3039,
                        "src": "4087:19:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2897,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4087:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2900,
                        "mutability": "mutable",
                        "name": "_jurySize",
                        "nameLocation": "4124:9:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3039,
                        "src": "4116:17:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2899,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4116:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2902,
                        "mutability": "mutable",
                        "name": "_commitDuration",
                        "nameLocation": "4151:15:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3039,
                        "src": "4143:23:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2901,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4143:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2904,
                        "mutability": "mutable",
                        "name": "_revealDuration",
                        "nameLocation": "4184:15:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3039,
                        "src": "4176:23:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2903,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4176:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2906,
                        "mutability": "mutable",
                        "name": "_penaltyRate",
                        "nameLocation": "4217:12:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3039,
                        "src": "4209:20:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2905,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4209:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2908,
                        "mutability": "mutable",
                        "name": "_appealDepositMultiplier",
                        "nameLocation": "4247:24:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3039,
                        "src": "4239:32:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2907,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4239:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2910,
                        "mutability": "mutable",
                        "name": "_appealDuration",
                        "nameLocation": "4289:15:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3039,
                        "src": "4281:23:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2909,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4281:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2912,
                        "mutability": "mutable",
                        "name": "_appealJurySize",
                        "nameLocation": "4322:15:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3039,
                        "src": "4314:23:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2911,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4314:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4018:325:21"
                  },
                  "returnParameters": {
                    "id": 2914,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4344:0:21"
                  },
                  "scope": 4966,
                  "src": "4007:1555:21",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3108,
                    "nodeType": "Block",
                    "src": "5694:810:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3048,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5712:36:21",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 3043,
                                    "name": "jurorsInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2892,
                                    "src": "5713:10:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_JurorInfo_$2852_storage_$",
                                      "typeString": "mapping(address => struct DeciCourt.JurorInfo storage ref)"
                                    }
                                  },
                                  "id": 3046,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 3044,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5724:3:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 3045,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5728:6:21",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5724:10:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5713:22:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_JurorInfo_$2852_storage",
                                    "typeString": "struct DeciCourt.JurorInfo storage ref"
                                  }
                                },
                                "id": 3047,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5736:12:21",
                                "memberName": "isRegistered",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2839,
                                "src": "5713:35:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416c72656164792072656769737465726564",
                              "id": 3049,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5750:20:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2",
                                "typeString": "literal_string \"Already registered\""
                              },
                              "value": "Already registered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2",
                                "typeString": "literal_string \"Already registered\""
                              }
                            ],
                            "id": 3042,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5704:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5704:67:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3051,
                        "nodeType": "ExpressionStatement",
                        "src": "5704:67:21"
                      },
                      {
                        "assignments": [
                          3053
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3053,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "5847:7:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3108,
                            "src": "5842:12:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3052,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5842:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3064,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3056,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5880:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3057,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5884:6:21",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5880:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3060,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5900:4:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DeciCourt_$4966",
                                    "typeString": "contract DeciCourt"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DeciCourt_$4966",
                                    "typeString": "contract DeciCourt"
                                  }
                                ],
                                "id": 3059,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5892:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3058,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5892:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5892:13:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3062,
                              "name": "jurorStakeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2859,
                              "src": "5907:16:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3054,
                              "name": "juryToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2855,
                              "src": "5857:9:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5867:12:21",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 876,
                            "src": "5857:22:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 3063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5857:67:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5842:82:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3066,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3053,
                              "src": "5942:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e207472616e73666572206661696c65642e2044696420796f7520617070726f76653f",
                              "id": 3067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5951:41:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e94d41057f98a025cc00af1f31433da0387da68bdd9dafac96578f855f52bb8e",
                                "typeString": "literal_string \"Token transfer failed. Did you approve?\""
                              },
                              "value": "Token transfer failed. Did you approve?"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e94d41057f98a025cc00af1f31433da0387da68bdd9dafac96578f855f52bb8e",
                                "typeString": "literal_string \"Token transfer failed. Did you approve?\""
                              }
                            ],
                            "id": 3065,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5934:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5934:59:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3069,
                        "nodeType": "ExpressionStatement",
                        "src": "5934:59:21"
                      },
                      {
                        "expression": {
                          "id": 3083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3070,
                              "name": "jurorsInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2892,
                              "src": "6012:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_JurorInfo_$2852_storage_$",
                                "typeString": "mapping(address => struct DeciCourt.JurorInfo storage ref)"
                              }
                            },
                            "id": 3073,
                            "indexExpression": {
                              "expression": {
                                "id": 3071,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6023:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3072,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6027:6:21",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6023:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6012:22:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JurorInfo_$2852_storage",
                              "typeString": "struct DeciCourt.JurorInfo storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "74727565",
                                "id": 3075,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6075:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              {
                                "id": 3076,
                                "name": "jurorStakeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2859,
                                "src": "6107:16:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 3077,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6148:5:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "hexValue": "30",
                                "id": 3078,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6181:1:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "30",
                                "id": 3079,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6208:1:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "3530",
                                "id": 3080,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6240:2:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_50_by_1",
                                  "typeString": "int_const 50"
                                },
                                "value": "50"
                              },
                              {
                                "hexValue": "30",
                                "id": 3081,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6298:1:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_50_by_1",
                                  "typeString": "int_const 50"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3074,
                              "name": "JurorInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2852,
                              "src": "6037:9:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_JurorInfo_$2852_storage_ptr_$",
                                "typeString": "type(struct DeciCourt.JurorInfo storage pointer)"
                              }
                            },
                            "id": 3082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "6061:12:21",
                              "6093:12:21",
                              "6137:9:21",
                              "6167:12:21",
                              "6196:10:21",
                              "6223:15:21",
                              "6280:16:21"
                            ],
                            "names": [
                              "isRegistered",
                              "stakedAmount",
                              "isServing",
                              "correctVotes",
                              "totalVotes",
                              "reputationScore",
                              "consecutiveWrong"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "6037:273:21",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JurorInfo_$2852_memory_ptr",
                              "typeString": "struct DeciCourt.JurorInfo memory"
                            }
                          },
                          "src": "6012:298:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JurorInfo_$2852_storage",
                            "typeString": "struct DeciCourt.JurorInfo storage ref"
                          }
                        },
                        "id": 3084,
                        "nodeType": "ExpressionStatement",
                        "src": "6012:298:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3088,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6366:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6370:6:21",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6366:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3085,
                              "name": "jurorPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2883,
                              "src": "6351:9:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6361:4:21",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "6351:14:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 3090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6351:26:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3091,
                        "nodeType": "ExpressionStatement",
                        "src": "6351:26:21"
                      },
                      {
                        "expression": {
                          "id": 3100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3092,
                              "name": "jurorPoolIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2887,
                              "src": "6387:14:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3095,
                            "indexExpression": {
                              "expression": {
                                "id": 3093,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6402:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6406:6:21",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6402:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6387:26:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3096,
                                "name": "jurorPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2883,
                                "src": "6416:9:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 3097,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6426:6:21",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "6416:16:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 3098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6435:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "6416:20:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6387:49:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3101,
                        "nodeType": "ExpressionStatement",
                        "src": "6387:49:21"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3103,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6468:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6472:6:21",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6468:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3105,
                              "name": "jurorStakeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2859,
                              "src": "6480:16:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3102,
                            "name": "JurorRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2711,
                            "src": "6452:15:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6452:45:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3107,
                        "nodeType": "EmitStatement",
                        "src": "6447:50:21"
                      }
                    ]
                  },
                  "functionSelector": "71929ad5",
                  "id": 3109,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerAsJuror",
                  "nameLocation": "5667:15:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3040,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5682:2:21"
                  },
                  "returnParameters": {
                    "id": 3041,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5694:0:21"
                  },
                  "scope": 4966,
                  "src": "5658:846:21",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3202,
                    "nodeType": "Block",
                    "src": "6613:903:21",
                    "statements": [
                      {
                        "assignments": [
                          3114
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3114,
                            "mutability": "mutable",
                            "name": "juror",
                            "nameLocation": "6641:5:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3202,
                            "src": "6623:23:21",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                              "typeString": "struct DeciCourt.JurorInfo"
                            },
                            "typeName": {
                              "id": 3113,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3112,
                                "name": "JurorInfo",
                                "nameLocations": [
                                  "6623:9:21"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2852,
                                "src": "6623:9:21"
                              },
                              "referencedDeclaration": 2852,
                              "src": "6623:9:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                "typeString": "struct DeciCourt.JurorInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3119,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3115,
                            "name": "jurorsInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2892,
                            "src": "6649:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_JurorInfo_$2852_storage_$",
                              "typeString": "mapping(address => struct DeciCourt.JurorInfo storage ref)"
                            }
                          },
                          "id": 3118,
                          "indexExpression": {
                            "expression": {
                              "id": 3116,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6660:3:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6664:6:21",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6660:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6649:22:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JurorInfo_$2852_storage",
                            "typeString": "struct DeciCourt.JurorInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6623:48:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3121,
                                "name": "juror",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3114,
                                "src": "6689:5:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                  "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                }
                              },
                              "id": 3122,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6695:12:21",
                              "memberName": "isRegistered",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2839,
                              "src": "6689:18:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420612072656769737465726564206a75726f72",
                              "id": 3123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6709:24:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6f11b99c0500607d933c086543267b8e69f40b513f208693d59d7f2dc558074a",
                                "typeString": "literal_string \"Not a registered juror\""
                              },
                              "value": "Not a registered juror"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6f11b99c0500607d933c086543267b8e69f40b513f208693d59d7f2dc558074a",
                                "typeString": "literal_string \"Not a registered juror\""
                              }
                            ],
                            "id": 3120,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6681:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6681:53:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3125,
                        "nodeType": "ExpressionStatement",
                        "src": "6681:53:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "6752:16:21",
                              "subExpression": {
                                "expression": {
                                  "id": 3127,
                                  "name": "juror",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3114,
                                  "src": "6753:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                    "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                  }
                                },
                                "id": 3128,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6759:9:21",
                                "memberName": "isServing",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2843,
                                "src": "6753:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f7420756e7265676973746572207768696c652073657276696e67206f6e20612063617365",
                              "id": 3130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6770:43:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4229224378b6fcf2706871ddaa5832f578496bc80326888cfec0bfeeab30c108",
                                "typeString": "literal_string \"Cannot unregister while serving on a case\""
                              },
                              "value": "Cannot unregister while serving on a case"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4229224378b6fcf2706871ddaa5832f578496bc80326888cfec0bfeeab30c108",
                                "typeString": "literal_string \"Cannot unregister while serving on a case\""
                              }
                            ],
                            "id": 3126,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6744:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6744:70:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3132,
                        "nodeType": "ExpressionStatement",
                        "src": "6744:70:21"
                      },
                      {
                        "assignments": [
                          3134
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3134,
                            "mutability": "mutable",
                            "name": "stakedAmount",
                            "nameLocation": "6884:12:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3202,
                            "src": "6876:20:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3133,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6876:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3137,
                        "initialValue": {
                          "expression": {
                            "id": 3135,
                            "name": "juror",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3114,
                            "src": "6899:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                              "typeString": "struct DeciCourt.JurorInfo storage pointer"
                            }
                          },
                          "id": 3136,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6905:12:21",
                          "memberName": "stakedAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2841,
                          "src": "6899:18:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6876:41:21"
                      },
                      {
                        "assignments": [
                          3139
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3139,
                            "mutability": "mutable",
                            "name": "indexToRemove",
                            "nameLocation": "6985:13:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3202,
                            "src": "6977:21:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3138,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6977:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3144,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3140,
                            "name": "jurorPoolIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2887,
                            "src": "7001:14:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 3143,
                          "indexExpression": {
                            "expression": {
                              "id": 3141,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7016:3:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7020:6:21",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7016:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7001:26:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6977:50:21"
                      },
                      {
                        "assignments": [
                          3146
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3146,
                            "mutability": "mutable",
                            "name": "lastJuror",
                            "nameLocation": "7045:9:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3202,
                            "src": "7037:17:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3145,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7037:7:21",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3153,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3147,
                            "name": "jurorPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2883,
                            "src": "7057:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 3152,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3148,
                                "name": "jurorPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2883,
                                "src": "7067:9:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 3149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7077:6:21",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "7067:16:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 3150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7086:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "7067:20:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7057:31:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7037:51:21"
                      },
                      {
                        "expression": {
                          "id": 3158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3154,
                              "name": "jurorPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2883,
                              "src": "7098:9:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3156,
                            "indexExpression": {
                              "id": 3155,
                              "name": "indexToRemove",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3139,
                              "src": "7108:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7098:24:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3157,
                            "name": "lastJuror",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3146,
                            "src": "7125:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7098:36:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3159,
                        "nodeType": "ExpressionStatement",
                        "src": "7098:36:21"
                      },
                      {
                        "expression": {
                          "id": 3164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3160,
                              "name": "jurorPoolIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2887,
                              "src": "7144:14:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3162,
                            "indexExpression": {
                              "id": 3161,
                              "name": "lastJuror",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3146,
                              "src": "7159:9:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7144:25:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3163,
                            "name": "indexToRemove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3139,
                            "src": "7172:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7144:41:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3165,
                        "nodeType": "ExpressionStatement",
                        "src": "7144:41:21"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3166,
                              "name": "jurorPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2883,
                              "src": "7195:9:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7205:3:21",
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "7195:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer)"
                            }
                          },
                          "id": 3169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7195:15:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3170,
                        "nodeType": "ExpressionStatement",
                        "src": "7195:15:21"
                      },
                      {
                        "expression": {
                          "id": 3175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "7263:29:21",
                          "subExpression": {
                            "baseExpression": {
                              "id": 3171,
                              "name": "jurorsInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2892,
                              "src": "7270:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_JurorInfo_$2852_storage_$",
                                "typeString": "mapping(address => struct DeciCourt.JurorInfo storage ref)"
                              }
                            },
                            "id": 3174,
                            "indexExpression": {
                              "expression": {
                                "id": 3172,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7281:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7285:6:21",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7281:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7270:22:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JurorInfo_$2852_storage",
                              "typeString": "struct DeciCourt.JurorInfo storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3176,
                        "nodeType": "ExpressionStatement",
                        "src": "7263:29:21"
                      },
                      {
                        "expression": {
                          "id": 3181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "7302:33:21",
                          "subExpression": {
                            "baseExpression": {
                              "id": 3177,
                              "name": "jurorPoolIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2887,
                              "src": "7309:14:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3180,
                            "indexExpression": {
                              "expression": {
                                "id": 3178,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7324:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7328:6:21",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7324:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7309:26:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3182,
                        "nodeType": "ExpressionStatement",
                        "src": "7302:33:21"
                      },
                      {
                        "assignments": [
                          3184
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3184,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "7359:7:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3202,
                            "src": "7354:12:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3183,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "7354:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3191,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3187,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7388:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7392:6:21",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7388:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3189,
                              "name": "stakedAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3134,
                              "src": "7400:12:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3185,
                              "name": "juryToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2855,
                              "src": "7369:9:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7379:8:21",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 844,
                            "src": "7369:18:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 3190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7369:44:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7354:59:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3193,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3184,
                              "src": "7431:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e207472616e73666572206661696c6564",
                              "id": 3194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7440:23:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                                "typeString": "literal_string \"Token transfer failed\""
                              },
                              "value": "Token transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                                "typeString": "literal_string \"Token transfer failed\""
                              }
                            ],
                            "id": 3192,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7423:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7423:41:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3196,
                        "nodeType": "ExpressionStatement",
                        "src": "7423:41:21"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3198,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7498:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7502:6:21",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7498:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3197,
                            "name": "JurorUnregistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2715,
                            "src": "7480:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 3200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7480:29:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3201,
                        "nodeType": "EmitStatement",
                        "src": "7475:34:21"
                      }
                    ]
                  },
                  "functionSelector": "43bbdd3f",
                  "id": 3203,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unregisterAsJuror",
                  "nameLocation": "6584:17:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3110,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6601:2:21"
                  },
                  "returnParameters": {
                    "id": 3111,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6613:0:21"
                  },
                  "scope": 4966,
                  "src": "6575:941:21",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3338,
                    "nodeType": "Block",
                    "src": "7660:1031:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 3221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 3216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3211,
                                  "name": "_defendant",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3205,
                                  "src": "7678:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 3214,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7700:1:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 3213,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7692:7:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3212,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7692:7:21",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3215,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7692:10:21",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "7678:24:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 3220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3217,
                                  "name": "_defendant",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3205,
                                  "src": "7706:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 3218,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "7720:3:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3219,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7724:6:21",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "7720:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "7706:24:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "7678:52:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420646566656e64616e74",
                              "id": 3222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7732:19:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ac31dd95aef1b41ef071fe158e45501b3b7eb2ecba1ffc2c8e13c7a0a633a181",
                                "typeString": "literal_string \"Invalid defendant\""
                              },
                              "value": "Invalid defendant"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ac31dd95aef1b41ef071fe158e45501b3b7eb2ecba1ffc2c8e13c7a0a633a181",
                                "typeString": "literal_string \"Invalid defendant\""
                              }
                            ],
                            "id": 3210,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7670:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7670:82:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3224,
                        "nodeType": "ExpressionStatement",
                        "src": "7670:82:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3226,
                                  "name": "jurorPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2883,
                                  "src": "7770:9:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 3227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7780:6:21",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "7770:16:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 3228,
                                "name": "jurySize",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2861,
                                "src": "7790:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7770:28:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656e6f75676820617661696c61626c65206a75726f7273",
                              "id": 3230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7800:29:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7317c3047310f85ca5b9b5ba7f06faf1b2fc118fd0faa4e2b32ce4368ef0a812",
                                "typeString": "literal_string \"Not enough available jurors\""
                              },
                              "value": "Not enough available jurors"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7317c3047310f85ca5b9b5ba7f06faf1b2fc118fd0faa4e2b32ce4368ef0a812",
                                "typeString": "literal_string \"Not enough available jurors\""
                              }
                            ],
                            "id": 3225,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7762:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7762:68:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3232,
                        "nodeType": "ExpressionStatement",
                        "src": "7762:68:21"
                      },
                      {
                        "assignments": [
                          3234
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3234,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "7873:7:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3338,
                            "src": "7868:12:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 3233,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "7868:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3245,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3237,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7906:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7910:6:21",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7906:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3241,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7926:4:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DeciCourt_$4966",
                                    "typeString": "contract DeciCourt"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DeciCourt_$4966",
                                    "typeString": "contract DeciCourt"
                                  }
                                ],
                                "id": 3240,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7918:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3239,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7918:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7918:13:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3243,
                              "name": "filingFeeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2857,
                              "src": "7933:15:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3235,
                              "name": "juryToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2855,
                              "src": "7883:9:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 3236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7893:12:21",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 876,
                            "src": "7883:22:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 3244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7883:66:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7868:81:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3247,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3234,
                              "src": "7967:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "46696c696e6720666565207472616e73666572206661696c65642e2044696420796f7520617070726f76653f",
                              "id": 3248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7976:46:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ea0f02a5c828da551046f36c5121e90ccfa2c6b9a8abe6cdaf73a7f37e18d363",
                                "typeString": "literal_string \"Filing fee transfer failed. Did you approve?\""
                              },
                              "value": "Filing fee transfer failed. Did you approve?"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ea0f02a5c828da551046f36c5121e90ccfa2c6b9a8abe6cdaf73a7f37e18d363",
                                "typeString": "literal_string \"Filing fee transfer failed. Did you approve?\""
                              }
                            ],
                            "id": 3246,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7959:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7959:64:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3250,
                        "nodeType": "ExpressionStatement",
                        "src": "7959:64:21"
                      },
                      {
                        "assignments": [
                          3252
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3252,
                            "mutability": "mutable",
                            "name": "caseId",
                            "nameLocation": "8050:6:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3338,
                            "src": "8042:14:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3251,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8042:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3255,
                        "initialValue": {
                          "id": 3254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8059:12:21",
                          "subExpression": {
                            "id": 3253,
                            "name": "nextCaseId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2875,
                            "src": "8059:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8042:29:21"
                      },
                      {
                        "assignments": [
                          3258
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3258,
                            "mutability": "mutable",
                            "name": "newCase",
                            "nameLocation": "8094:7:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3338,
                            "src": "8081:20:21",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                              "typeString": "struct DeciCourt.Case"
                            },
                            "typeName": {
                              "id": 3257,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3256,
                                "name": "Case",
                                "nameLocations": [
                                  "8081:4:21"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2837,
                                "src": "8081:4:21"
                              },
                              "referencedDeclaration": 2837,
                              "src": "8081:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3262,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3259,
                            "name": "cases",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2880,
                            "src": "8104:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Case_$2837_storage_$",
                              "typeString": "mapping(uint256 => struct DeciCourt.Case storage ref)"
                            }
                          },
                          "id": 3261,
                          "indexExpression": {
                            "id": 3260,
                            "name": "caseId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3252,
                            "src": "8110:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8104:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Case_$2837_storage",
                            "typeString": "struct DeciCourt.Case storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8081:36:21"
                      },
                      {
                        "expression": {
                          "id": 3267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3263,
                              "name": "newCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3258,
                              "src": "8127:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 3265,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8135:2:21",
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2791,
                            "src": "8127:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3266,
                            "name": "caseId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3252,
                            "src": "8140:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8127:19:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3268,
                        "nodeType": "ExpressionStatement",
                        "src": "8127:19:21"
                      },
                      {
                        "expression": {
                          "id": 3274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3269,
                              "name": "newCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3258,
                              "src": "8156:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 3271,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8164:9:21",
                            "memberName": "plaintiff",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2793,
                            "src": "8156:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3272,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8176:3:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8180:6:21",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8176:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8156:30:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3275,
                        "nodeType": "ExpressionStatement",
                        "src": "8156:30:21"
                      },
                      {
                        "expression": {
                          "id": 3280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3276,
                              "name": "newCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3258,
                              "src": "8196:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 3278,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8204:9:21",
                            "memberName": "defendant",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2795,
                            "src": "8196:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3279,
                            "name": "_defendant",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3205,
                            "src": "8216:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8196:30:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3281,
                        "nodeType": "ExpressionStatement",
                        "src": "8196:30:21"
                      },
                      {
                        "expression": {
                          "id": 3286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3282,
                              "name": "newCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3258,
                              "src": "8236:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 3284,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8244:11:21",
                            "memberName": "evidenceCID",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2797,
                            "src": "8236:19:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3285,
                            "name": "_evidenceCID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3207,
                            "src": "8258:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "src": "8236:34:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 3287,
                        "nodeType": "ExpressionStatement",
                        "src": "8236:34:21"
                      },
                      {
                        "expression": {
                          "id": 3293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3288,
                              "name": "newCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3258,
                              "src": "8280:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 3290,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8288:6:21",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2800,
                            "src": "8280:14:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CaseStatus_$2785",
                              "typeString": "enum DeciCourt.CaseStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3291,
                              "name": "CaseStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2785,
                              "src": "8297:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CaseStatus_$2785_$",
                                "typeString": "type(enum DeciCourt.CaseStatus)"
                              }
                            },
                            "id": 3292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8308:6:21",
                            "memberName": "Voting",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2780,
                            "src": "8297:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CaseStatus_$2785",
                              "typeString": "enum DeciCourt.CaseStatus"
                            }
                          },
                          "src": "8280:34:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CaseStatus_$2785",
                            "typeString": "enum DeciCourt.CaseStatus"
                          }
                        },
                        "id": 3294,
                        "nodeType": "ExpressionStatement",
                        "src": "8280:34:21"
                      },
                      {
                        "expression": {
                          "id": 3299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3295,
                              "name": "newCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3258,
                              "src": "8352:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 3297,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8360:9:21",
                            "memberName": "filingFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2802,
                            "src": "8352:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3298,
                            "name": "filingFeeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2857,
                            "src": "8372:15:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8352:35:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3300,
                        "nodeType": "ExpressionStatement",
                        "src": "8352:35:21"
                      },
                      {
                        "expression": {
                          "id": 3306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3301,
                              "name": "newCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3258,
                              "src": "8397:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 3303,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8405:12:21",
                            "memberName": "creationTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2820,
                            "src": "8397:20:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3304,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8420:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8426:9:21",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "8420:15:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8397:38:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3307,
                        "nodeType": "ExpressionStatement",
                        "src": "8397:38:21"
                      },
                      {
                        "expression": {
                          "id": 3315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3308,
                              "name": "newCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3258,
                              "src": "8445:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 3310,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8453:14:21",
                            "memberName": "commitDeadline",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2822,
                            "src": "8445:22:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3311,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "8470:5:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8476:9:21",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "8470:15:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 3313,
                              "name": "commitDuration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2863,
                              "src": "8488:14:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8470:32:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8445:57:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3316,
                        "nodeType": "ExpressionStatement",
                        "src": "8445:57:21"
                      },
                      {
                        "expression": {
                          "id": 3324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3317,
                              "name": "newCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3258,
                              "src": "8512:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 3319,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8520:14:21",
                            "memberName": "revealDeadline",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2824,
                            "src": "8512:22:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3320,
                                "name": "newCase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3258,
                                "src": "8537:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 3321,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8545:14:21",
                              "memberName": "commitDeadline",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2822,
                              "src": "8537:22:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 3322,
                              "name": "revealDuration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2865,
                              "src": "8562:14:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8537:39:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8512:64:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3325,
                        "nodeType": "ExpressionStatement",
                        "src": "8512:64:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3327,
                              "name": "caseId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3252,
                              "src": "8601:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3326,
                            "name": "_assignJurors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4454,
                            "src": "8587:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 3328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8587:21:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3329,
                        "nodeType": "ExpressionStatement",
                        "src": "8587:21:21"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3331,
                              "name": "caseId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3252,
                              "src": "8636:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3332,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8644:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8648:6:21",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8644:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3334,
                              "name": "_defendant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3205,
                              "src": "8656:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3335,
                              "name": "filingFeeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2857,
                              "src": "8668:15:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3330,
                            "name": "CaseCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2705,
                            "src": "8624:11:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,address,uint256)"
                            }
                          },
                          "id": 3336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8624:60:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3337,
                        "nodeType": "EmitStatement",
                        "src": "8619:65:21"
                      }
                    ]
                  },
                  "functionSelector": "a2febe29",
                  "id": 3339,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createCase",
                  "nameLocation": "7590:10:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3205,
                        "mutability": "mutable",
                        "name": "_defendant",
                        "nameLocation": "7609:10:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3339,
                        "src": "7601:18:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3204,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7601:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3207,
                        "mutability": "mutable",
                        "name": "_evidenceCID",
                        "nameLocation": "7637:12:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3339,
                        "src": "7621:28:21",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 3206,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7621:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7600:50:21"
                  },
                  "returnParameters": {
                    "id": 3209,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7660:0:21"
                  },
                  "scope": 4966,
                  "src": "7581:1110:21",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3409,
                    "nodeType": "Block",
                    "src": "8791:515:21",
                    "statements": [
                      {
                        "assignments": [
                          3348
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3348,
                            "mutability": "mutable",
                            "name": "currentCase",
                            "nameLocation": "8814:11:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3409,
                            "src": "8801:24:21",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                              "typeString": "struct DeciCourt.Case"
                            },
                            "typeName": {
                              "id": 3347,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3346,
                                "name": "Case",
                                "nameLocations": [
                                  "8801:4:21"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2837,
                                "src": "8801:4:21"
                              },
                              "referencedDeclaration": 2837,
                              "src": "8801:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3352,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3349,
                            "name": "cases",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2880,
                            "src": "8828:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Case_$2837_storage_$",
                              "typeString": "mapping(uint256 => struct DeciCourt.Case storage ref)"
                            }
                          },
                          "id": 3351,
                          "indexExpression": {
                            "id": 3350,
                            "name": "_caseId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3341,
                            "src": "8834:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8828:14:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Case_$2837_storage",
                            "typeString": "struct DeciCourt.Case storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8801:41:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_CaseStatus_$2785",
                                "typeString": "enum DeciCourt.CaseStatus"
                              },
                              "id": 3358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3354,
                                  "name": "currentCase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3348,
                                  "src": "8860:11:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                    "typeString": "struct DeciCourt.Case storage pointer"
                                  }
                                },
                                "id": 3355,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8872:6:21",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2800,
                                "src": "8860:18:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_CaseStatus_$2785",
                                  "typeString": "enum DeciCourt.CaseStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 3356,
                                  "name": "CaseStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2785,
                                  "src": "8882:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_CaseStatus_$2785_$",
                                    "typeString": "type(enum DeciCourt.CaseStatus)"
                                  }
                                },
                                "id": 3357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "8893:6:21",
                                "memberName": "Voting",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2780,
                                "src": "8882:17:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_CaseStatus_$2785",
                                  "typeString": "enum DeciCourt.CaseStatus"
                                }
                              },
                              "src": "8860:39:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420696e20766f74696e67207068617365",
                              "id": 3359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8901:21:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_758181e8dded09ae19ad3025dc90dbf97337c908c094ecc808cf2f03552ba294",
                                "typeString": "literal_string \"Not in voting phase\""
                              },
                              "value": "Not in voting phase"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_758181e8dded09ae19ad3025dc90dbf97337c908c094ecc808cf2f03552ba294",
                                "typeString": "literal_string \"Not in voting phase\""
                              }
                            ],
                            "id": 3353,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8852:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8852:71:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3361,
                        "nodeType": "ExpressionStatement",
                        "src": "8852:71:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3363,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "8941:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8947:9:21",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "8941:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 3365,
                                  "name": "currentCase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3348,
                                  "src": "8960:11:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                    "typeString": "struct DeciCourt.Case storage pointer"
                                  }
                                },
                                "id": 3366,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8972:14:21",
                                "memberName": "commitDeadline",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2822,
                                "src": "8960:26:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8941:45:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6d6d697420706861736520656e646564",
                              "id": 3368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8988:20:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b770bbbf9601ed033cc1447b8bf0d06f9eacd96b230fd0be5c41e6563b4a85e8",
                                "typeString": "literal_string \"Commit phase ended\""
                              },
                              "value": "Commit phase ended"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b770bbbf9601ed033cc1447b8bf0d06f9eacd96b230fd0be5c41e6563b4a85e8",
                                "typeString": "literal_string \"Commit phase ended\""
                              }
                            ],
                            "id": 3362,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8933:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8933:76:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3370,
                        "nodeType": "ExpressionStatement",
                        "src": "8933:76:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3373,
                                  "name": "currentCase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3348,
                                  "src": "9043:11:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                    "typeString": "struct DeciCourt.Case storage pointer"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 3374,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9056:3:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3375,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9060:6:21",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "9056:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                    "typeString": "struct DeciCourt.Case storage pointer"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3372,
                                "name": "_isJurorForCase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4817,
                                "src": "9027:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Case_$2837_storage_ptr_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (struct DeciCourt.Case storage pointer,address) view returns (bool)"
                                }
                              },
                              "id": 3376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9027:40:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f742061206a75726f7220666f7220746869732063617365",
                              "id": 3377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9069:27:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3998eab0eaa5e91bac8918160640486e6b30ec88831b5eef6858e0b2f1e0d6a6",
                                "typeString": "literal_string \"Not a juror for this case\""
                              },
                              "value": "Not a juror for this case"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3998eab0eaa5e91bac8918160640486e6b30ec88831b5eef6858e0b2f1e0d6a6",
                                "typeString": "literal_string \"Not a juror for this case\""
                              }
                            ],
                            "id": 3371,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9019:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9019:78:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3379,
                        "nodeType": "ExpressionStatement",
                        "src": "9019:78:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 3390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 3381,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3348,
                                    "src": "9115:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 3382,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9127:14:21",
                                  "memberName": "committedVotes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2809,
                                  "src": "9115:26:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                                    "typeString": "mapping(address => bytes32)"
                                  }
                                },
                                "id": 3385,
                                "indexExpression": {
                                  "expression": {
                                    "id": 3383,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9142:3:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3384,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9146:6:21",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "9142:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9115:38:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3388,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9165:1:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3387,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9157:7:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 3386,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9157:7:21",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3389,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9157:10:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "9115:52:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416c726561647920636f6d6d6974746564",
                              "id": 3391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9169:19:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ba2afe372a1c998e0150ac287560b81c51f74320b18c8e987de16e43e4e0783c",
                                "typeString": "literal_string \"Already committed\""
                              },
                              "value": "Already committed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ba2afe372a1c998e0150ac287560b81c51f74320b18c8e987de16e43e4e0783c",
                                "typeString": "literal_string \"Already committed\""
                              }
                            ],
                            "id": 3380,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9107:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9107:82:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3393,
                        "nodeType": "ExpressionStatement",
                        "src": "9107:82:21"
                      },
                      {
                        "expression": {
                          "id": 3401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 3394,
                                "name": "currentCase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3348,
                                "src": "9200:11:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 3398,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9212:14:21",
                              "memberName": "committedVotes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2809,
                              "src": "9200:26:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                                "typeString": "mapping(address => bytes32)"
                              }
                            },
                            "id": 3399,
                            "indexExpression": {
                              "expression": {
                                "id": 3396,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9227:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9231:6:21",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9227:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9200:38:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3400,
                            "name": "_voteHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3343,
                            "src": "9241:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "9200:50:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 3402,
                        "nodeType": "ExpressionStatement",
                        "src": "9200:50:21"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3404,
                              "name": "_caseId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3341,
                              "src": "9279:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3405,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9288:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9292:6:21",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9288:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3403,
                            "name": "VoteCommitted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2721,
                            "src": "9265:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 3407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9265:34:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3408,
                        "nodeType": "EmitStatement",
                        "src": "9260:39:21"
                      }
                    ]
                  },
                  "functionSelector": "9da69180",
                  "id": 3410,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "commitVote",
                  "nameLocation": "8735:10:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3341,
                        "mutability": "mutable",
                        "name": "_caseId",
                        "nameLocation": "8754:7:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3410,
                        "src": "8746:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3340,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8746:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3343,
                        "mutability": "mutable",
                        "name": "_voteHash",
                        "nameLocation": "8771:9:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3410,
                        "src": "8763:17:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3342,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8763:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8745:36:21"
                  },
                  "returnParameters": {
                    "id": 3345,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8791:0:21"
                  },
                  "scope": 4966,
                  "src": "8726:580:21",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3548,
                    "nodeType": "Block",
                    "src": "9420:1099:21",
                    "statements": [
                      {
                        "assignments": [
                          3422
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3422,
                            "mutability": "mutable",
                            "name": "currentCase",
                            "nameLocation": "9443:11:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3548,
                            "src": "9430:24:21",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                              "typeString": "struct DeciCourt.Case"
                            },
                            "typeName": {
                              "id": 3421,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3420,
                                "name": "Case",
                                "nameLocations": [
                                  "9430:4:21"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2837,
                                "src": "9430:4:21"
                              },
                              "referencedDeclaration": 2837,
                              "src": "9430:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3426,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3423,
                            "name": "cases",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2880,
                            "src": "9457:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Case_$2837_storage_$",
                              "typeString": "mapping(uint256 => struct DeciCourt.Case storage ref)"
                            }
                          },
                          "id": 3425,
                          "indexExpression": {
                            "id": 3424,
                            "name": "_caseId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3412,
                            "src": "9463:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9457:14:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Case_$2837_storage",
                            "typeString": "struct DeciCourt.Case storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9430:41:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_CaseStatus_$2785",
                                "typeString": "enum DeciCourt.CaseStatus"
                              },
                              "id": 3432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3428,
                                  "name": "currentCase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3422,
                                  "src": "9489:11:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                    "typeString": "struct DeciCourt.Case storage pointer"
                                  }
                                },
                                "id": 3429,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9501:6:21",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2800,
                                "src": "9489:18:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_CaseStatus_$2785",
                                  "typeString": "enum DeciCourt.CaseStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 3430,
                                  "name": "CaseStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2785,
                                  "src": "9511:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_CaseStatus_$2785_$",
                                    "typeString": "type(enum DeciCourt.CaseStatus)"
                                  }
                                },
                                "id": 3431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "9522:6:21",
                                "memberName": "Voting",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2780,
                                "src": "9511:17:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_CaseStatus_$2785",
                                  "typeString": "enum DeciCourt.CaseStatus"
                                }
                              },
                              "src": "9489:39:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420696e20766f74696e67207068617365",
                              "id": 3433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9530:21:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_758181e8dded09ae19ad3025dc90dbf97337c908c094ecc808cf2f03552ba294",
                                "typeString": "literal_string \"Not in voting phase\""
                              },
                              "value": "Not in voting phase"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_758181e8dded09ae19ad3025dc90dbf97337c908c094ecc808cf2f03552ba294",
                                "typeString": "literal_string \"Not in voting phase\""
                              }
                            ],
                            "id": 3427,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9481:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9481:71:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3435,
                        "nodeType": "ExpressionStatement",
                        "src": "9481:71:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3437,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "9570:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3438,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9576:9:21",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "9570:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 3439,
                                  "name": "currentCase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3422,
                                  "src": "9588:11:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                    "typeString": "struct DeciCourt.Case storage pointer"
                                  }
                                },
                                "id": 3440,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9600:14:21",
                                "memberName": "commitDeadline",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2822,
                                "src": "9588:26:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9570:44:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6d6d6974207068617365206e6f7420656e64656420796574",
                              "id": 3442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9616:28:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ca9121f34a61a05ed16210b2525fab2a13f931a066fb3f6a9ddde1979f8eff01",
                                "typeString": "literal_string \"Commit phase not ended yet\""
                              },
                              "value": "Commit phase not ended yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ca9121f34a61a05ed16210b2525fab2a13f931a066fb3f6a9ddde1979f8eff01",
                                "typeString": "literal_string \"Commit phase not ended yet\""
                              }
                            ],
                            "id": 3436,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9562:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9562:83:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3444,
                        "nodeType": "ExpressionStatement",
                        "src": "9562:83:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3446,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "9663:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9669:9:21",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "9663:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 3448,
                                  "name": "currentCase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3422,
                                  "src": "9682:11:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                    "typeString": "struct DeciCourt.Case storage pointer"
                                  }
                                },
                                "id": 3449,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9694:14:21",
                                "memberName": "revealDeadline",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2824,
                                "src": "9682:26:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9663:45:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52657665616c20706861736520656e646564",
                              "id": 3451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9710:20:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_da2011c635f193aa9b5c4d34d8156ef8b504c013d43d05667b77f0b774431840",
                                "typeString": "literal_string \"Reveal phase ended\""
                              },
                              "value": "Reveal phase ended"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_da2011c635f193aa9b5c4d34d8156ef8b504c013d43d05667b77f0b774431840",
                                "typeString": "literal_string \"Reveal phase ended\""
                              }
                            ],
                            "id": 3445,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9655:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9655:76:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3453,
                        "nodeType": "ExpressionStatement",
                        "src": "9655:76:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3456,
                                  "name": "currentCase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3422,
                                  "src": "9765:11:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                    "typeString": "struct DeciCourt.Case storage pointer"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 3457,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9778:3:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3458,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9782:6:21",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "9778:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                    "typeString": "struct DeciCourt.Case storage pointer"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3455,
                                "name": "_isJurorForCase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4817,
                                "src": "9749:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_struct$_Case_$2837_storage_ptr_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (struct DeciCourt.Case storage pointer,address) view returns (bool)"
                                }
                              },
                              "id": 3459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9749:40:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f742061206a75726f7220666f7220746869732063617365",
                              "id": 3460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9791:27:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3998eab0eaa5e91bac8918160640486e6b30ec88831b5eef6858e0b2f1e0d6a6",
                                "typeString": "literal_string \"Not a juror for this case\""
                              },
                              "value": "Not a juror for this case"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3998eab0eaa5e91bac8918160640486e6b30ec88831b5eef6858e0b2f1e0d6a6",
                                "typeString": "literal_string \"Not a juror for this case\""
                              }
                            ],
                            "id": 3454,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9741:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9741:78:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3462,
                        "nodeType": "ExpressionStatement",
                        "src": "9741:78:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 3473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 3464,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3422,
                                    "src": "9837:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 3465,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9849:14:21",
                                  "memberName": "committedVotes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2809,
                                  "src": "9837:26:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                                    "typeString": "mapping(address => bytes32)"
                                  }
                                },
                                "id": 3468,
                                "indexExpression": {
                                  "expression": {
                                    "id": 3466,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9864:3:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3467,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9868:6:21",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "9864:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9837:38:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 3471,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9887:1:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 3470,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9879:7:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 3469,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9879:7:21",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9879:10:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "9837:52:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "446964206e6f7420636f6d6d6974",
                              "id": 3474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9891:16:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_337e6d85b3ebee53e53037b4191298e438a7137fab3c0036a9aba24164dfc9d1",
                                "typeString": "literal_string \"Did not commit\""
                              },
                              "value": "Did not commit"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_337e6d85b3ebee53e53037b4191298e438a7137fab3c0036a9aba24164dfc9d1",
                                "typeString": "literal_string \"Did not commit\""
                              }
                            ],
                            "id": 3463,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9829:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9829:79:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3476,
                        "nodeType": "ExpressionStatement",
                        "src": "9829:79:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_VoteOption_$2789",
                                "typeString": "enum DeciCourt.VoteOption"
                              },
                              "id": 3485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 3478,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3422,
                                    "src": "9926:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 3479,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9938:13:21",
                                  "memberName": "revealedVotes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2814,
                                  "src": "9926:25:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_enum$_VoteOption_$2789_$",
                                    "typeString": "mapping(address => enum DeciCourt.VoteOption)"
                                  }
                                },
                                "id": 3482,
                                "indexExpression": {
                                  "expression": {
                                    "id": 3480,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9952:3:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3481,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9956:6:21",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "9952:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9926:37:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_VoteOption_$2789",
                                  "typeString": "enum DeciCourt.VoteOption"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 3483,
                                  "name": "VoteOption",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2789,
                                  "src": "9967:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_VoteOption_$2789_$",
                                    "typeString": "type(enum DeciCourt.VoteOption)"
                                  }
                                },
                                "id": 3484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "9978:4:21",
                                "memberName": "None",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2786,
                                "src": "9967:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_VoteOption_$2789",
                                  "typeString": "enum DeciCourt.VoteOption"
                                }
                              },
                              "src": "9926:56:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416c72656164792072657665616c6564",
                              "id": 3486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9984:18:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_851800ce641e84b3afb21724d640a88c985efee4b37801a3a0e0bf1c99169476",
                                "typeString": "literal_string \"Already revealed\""
                              },
                              "value": "Already revealed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_851800ce641e84b3afb21724d640a88c985efee4b37801a3a0e0bf1c99169476",
                                "typeString": "literal_string \"Already revealed\""
                              }
                            ],
                            "id": 3477,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9918:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9918:85:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3488,
                        "nodeType": "ExpressionStatement",
                        "src": "9918:85:21"
                      },
                      {
                        "assignments": [
                          3490
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3490,
                            "mutability": "mutable",
                            "name": "regeneratedHash",
                            "nameLocation": "10030:15:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 3548,
                            "src": "10022:23:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 3489,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10022:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3498,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3494,
                                  "name": "_vote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3415,
                                  "src": "10075:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_VoteOption_$2789",
                                    "typeString": "enum DeciCourt.VoteOption"
                                  }
                                },
                                {
                                  "id": 3495,
                                  "name": "_salt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3417,
                                  "src": "10082:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_VoteOption_$2789",
                                    "typeString": "enum DeciCourt.VoteOption"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 3492,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "10058:3:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 3493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "10062:12:21",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "10058:16:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 3496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10058:30:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 3491,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "10048:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 3497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10048:41:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10022:67:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 3506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3500,
                                "name": "regeneratedHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3490,
                                "src": "10107:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 3501,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3422,
                                    "src": "10126:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 3502,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "10138:14:21",
                                  "memberName": "committedVotes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2809,
                                  "src": "10126:26:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                                    "typeString": "mapping(address => bytes32)"
                                  }
                                },
                                "id": 3505,
                                "indexExpression": {
                                  "expression": {
                                    "id": 3503,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "10153:3:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3504,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "10157:6:21",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "10153:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10126:38:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "10107:57:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "566f746520646f6573206e6f74206d6174636820636f6d6d6974",
                              "id": 3507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10166:28:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3fb195ce93bad1247e5293a14e55c93a3d4e338cfe2df3d08e9249aa8513e522",
                                "typeString": "literal_string \"Vote does not match commit\""
                              },
                              "value": "Vote does not match commit"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3fb195ce93bad1247e5293a14e55c93a3d4e338cfe2df3d08e9249aa8513e522",
                                "typeString": "literal_string \"Vote does not match commit\""
                              }
                            ],
                            "id": 3499,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10099:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10099:96:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3509,
                        "nodeType": "ExpressionStatement",
                        "src": "10099:96:21"
                      },
                      {
                        "expression": {
                          "id": 3517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 3510,
                                "name": "currentCase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3422,
                                "src": "10206:11:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 3514,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10218:13:21",
                              "memberName": "revealedVotes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2814,
                              "src": "10206:25:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_enum$_VoteOption_$2789_$",
                                "typeString": "mapping(address => enum DeciCourt.VoteOption)"
                              }
                            },
                            "id": 3515,
                            "indexExpression": {
                              "expression": {
                                "id": 3512,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10232:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3513,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10236:6:21",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10232:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10206:37:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_VoteOption_$2789",
                              "typeString": "enum DeciCourt.VoteOption"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3516,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3415,
                            "src": "10246:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_VoteOption_$2789",
                              "typeString": "enum DeciCourt.VoteOption"
                            }
                          },
                          "src": "10206:45:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VoteOption_$2789",
                            "typeString": "enum DeciCourt.VoteOption"
                          }
                        },
                        "id": 3518,
                        "nodeType": "ExpressionStatement",
                        "src": "10206:45:21"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_VoteOption_$2789",
                            "typeString": "enum DeciCourt.VoteOption"
                          },
                          "id": 3522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3519,
                            "name": "_vote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3415,
                            "src": "10265:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_VoteOption_$2789",
                              "typeString": "enum DeciCourt.VoteOption"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 3520,
                              "name": "VoteOption",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2789,
                              "src": "10274:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_VoteOption_$2789_$",
                                "typeString": "type(enum DeciCourt.VoteOption)"
                              }
                            },
                            "id": 3521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10285:12:21",
                            "memberName": "ForPlaintiff",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2787,
                            "src": "10274:23:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_VoteOption_$2789",
                              "typeString": "enum DeciCourt.VoteOption"
                            }
                          },
                          "src": "10265:32:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_VoteOption_$2789",
                              "typeString": "enum DeciCourt.VoteOption"
                            },
                            "id": 3532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3529,
                              "name": "_vote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3415,
                              "src": "10366:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_VoteOption_$2789",
                                "typeString": "enum DeciCourt.VoteOption"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 3530,
                                "name": "VoteOption",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2789,
                                "src": "10375:10:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_VoteOption_$2789_$",
                                  "typeString": "type(enum DeciCourt.VoteOption)"
                                }
                              },
                              "id": 3531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "10386:12:21",
                              "memberName": "ForDefendant",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2788,
                              "src": "10375:23:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_VoteOption_$2789",
                                "typeString": "enum DeciCourt.VoteOption"
                              }
                            },
                            "src": "10366:32:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 3539,
                          "nodeType": "IfStatement",
                          "src": "10362:95:21",
                          "trueBody": {
                            "id": 3538,
                            "nodeType": "Block",
                            "src": "10400:57:21",
                            "statements": [
                              {
                                "expression": {
                                  "id": 3536,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "10414:32:21",
                                  "subExpression": {
                                    "expression": {
                                      "id": 3533,
                                      "name": "currentCase",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3422,
                                      "src": "10414:11:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                        "typeString": "struct DeciCourt.Case storage pointer"
                                      }
                                    },
                                    "id": 3535,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberLocation": "10426:18:21",
                                    "memberName": "defendantVoteCount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2818,
                                    "src": "10414:30:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 3537,
                                "nodeType": "ExpressionStatement",
                                "src": "10414:32:21"
                              }
                            ]
                          }
                        },
                        "id": 3540,
                        "nodeType": "IfStatement",
                        "src": "10261:196:21",
                        "trueBody": {
                          "id": 3528,
                          "nodeType": "Block",
                          "src": "10299:57:21",
                          "statements": [
                            {
                              "expression": {
                                "id": 3526,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "10313:32:21",
                                "subExpression": {
                                  "expression": {
                                    "id": 3523,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3422,
                                    "src": "10313:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 3525,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "10325:18:21",
                                  "memberName": "plaintiffVoteCount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2816,
                                  "src": "10313:30:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3527,
                              "nodeType": "ExpressionStatement",
                              "src": "10313:32:21"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3542,
                              "name": "_caseId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3412,
                              "src": "10485:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3543,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10494:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10498:6:21",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10494:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3545,
                              "name": "_vote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3415,
                              "src": "10506:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_VoteOption_$2789",
                                "typeString": "enum DeciCourt.VoteOption"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_VoteOption_$2789",
                                "typeString": "enum DeciCourt.VoteOption"
                              }
                            ],
                            "id": 3541,
                            "name": "VoteRevealed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2730,
                            "src": "10472:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_enum$_VoteOption_$2789_$returns$__$",
                              "typeString": "function (uint256,address,enum DeciCourt.VoteOption)"
                            }
                          },
                          "id": 3546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10472:40:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3547,
                        "nodeType": "EmitStatement",
                        "src": "10467:45:21"
                      }
                    ]
                  },
                  "functionSelector": "0b05b14f",
                  "id": 3549,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revealVote",
                  "nameLocation": "9350:10:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3412,
                        "mutability": "mutable",
                        "name": "_caseId",
                        "nameLocation": "9369:7:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3549,
                        "src": "9361:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3411,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9361:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3415,
                        "mutability": "mutable",
                        "name": "_vote",
                        "nameLocation": "9389:5:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3549,
                        "src": "9378:16:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_VoteOption_$2789",
                          "typeString": "enum DeciCourt.VoteOption"
                        },
                        "typeName": {
                          "id": 3414,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3413,
                            "name": "VoteOption",
                            "nameLocations": [
                              "9378:10:21"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2789,
                            "src": "9378:10:21"
                          },
                          "referencedDeclaration": 2789,
                          "src": "9378:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VoteOption_$2789",
                            "typeString": "enum DeciCourt.VoteOption"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3417,
                        "mutability": "mutable",
                        "name": "_salt",
                        "nameLocation": "9404:5:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 3549,
                        "src": "9396:13:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 3416,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9396:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9360:50:21"
                  },
                  "returnParameters": {
                    "id": 3419,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9420:0:21"
                  },
                  "scope": 4966,
                  "src": "9341:1178:21",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4057,
                    "nodeType": "Block",
                    "src": "10608:6085:21",
                    "statements": [
                      {
                        "assignments": [
                          3558
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3558,
                            "mutability": "mutable",
                            "name": "currentCase",
                            "nameLocation": "10631:11:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4057,
                            "src": "10618:24:21",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                              "typeString": "struct DeciCourt.Case"
                            },
                            "typeName": {
                              "id": 3557,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3556,
                                "name": "Case",
                                "nameLocations": [
                                  "10618:4:21"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2837,
                                "src": "10618:4:21"
                              },
                              "referencedDeclaration": 2837,
                              "src": "10618:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3562,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3559,
                            "name": "cases",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2880,
                            "src": "10645:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Case_$2837_storage_$",
                              "typeString": "mapping(uint256 => struct DeciCourt.Case storage ref)"
                            }
                          },
                          "id": 3561,
                          "indexExpression": {
                            "id": 3560,
                            "name": "_caseId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3551,
                            "src": "10651:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10645:14:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Case_$2837_storage",
                            "typeString": "struct DeciCourt.Case storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10618:41:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_CaseStatus_$2785",
                                "typeString": "enum DeciCourt.CaseStatus"
                              },
                              "id": 3568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3564,
                                  "name": "currentCase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3558,
                                  "src": "10677:11:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                    "typeString": "struct DeciCourt.Case storage pointer"
                                  }
                                },
                                "id": 3565,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10689:6:21",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2800,
                                "src": "10677:18:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_CaseStatus_$2785",
                                  "typeString": "enum DeciCourt.CaseStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 3566,
                                  "name": "CaseStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2785,
                                  "src": "10699:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_CaseStatus_$2785_$",
                                    "typeString": "type(enum DeciCourt.CaseStatus)"
                                  }
                                },
                                "id": 3567,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "10710:6:21",
                                "memberName": "Voting",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2780,
                                "src": "10699:17:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_CaseStatus_$2785",
                                  "typeString": "enum DeciCourt.CaseStatus"
                                }
                              },
                              "src": "10677:39:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43617365206e6f7420726561647920666f722076657264696374",
                              "id": 3569,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10718:28:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2d99743642798fbdfcfccf02ffc5345b7a5423cca6cb3259bfa89c89054da791",
                                "typeString": "literal_string \"Case not ready for verdict\""
                              },
                              "value": "Case not ready for verdict"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2d99743642798fbdfcfccf02ffc5345b7a5423cca6cb3259bfa89c89054da791",
                                "typeString": "literal_string \"Case not ready for verdict\""
                              }
                            ],
                            "id": 3563,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10669:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10669:78:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3571,
                        "nodeType": "ExpressionStatement",
                        "src": "10669:78:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3573,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "10765:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3574,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10771:9:21",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "10765:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 3575,
                                  "name": "currentCase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3558,
                                  "src": "10783:11:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                    "typeString": "struct DeciCourt.Case storage pointer"
                                  }
                                },
                                "id": 3576,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10795:14:21",
                                "memberName": "revealDeadline",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2824,
                                "src": "10783:26:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10765:44:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "52657665616c207068617365206e6f7420656e64656420796574",
                              "id": 3578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10811:28:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_276b926a084b8d6dc3b14508da86a52cb4f2b2ca13e980976b75b6319f92de87",
                                "typeString": "literal_string \"Reveal phase not ended yet\""
                              },
                              "value": "Reveal phase not ended yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_276b926a084b8d6dc3b14508da86a52cb4f2b2ca13e980976b75b6319f92de87",
                                "typeString": "literal_string \"Reveal phase not ended yet\""
                              }
                            ],
                            "id": 3572,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10757:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 3579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10757:83:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3580,
                        "nodeType": "ExpressionStatement",
                        "src": "10757:83:21"
                      },
                      {
                        "expression": {
                          "id": 3586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3581,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3558,
                              "src": "10859:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 3583,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "10871:6:21",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2800,
                            "src": "10859:18:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CaseStatus_$2785",
                              "typeString": "enum DeciCourt.CaseStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3584,
                              "name": "CaseStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2785,
                              "src": "10880:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CaseStatus_$2785_$",
                                "typeString": "type(enum DeciCourt.CaseStatus)"
                              }
                            },
                            "id": 3585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10891:9:21",
                            "memberName": "Resolving",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2781,
                            "src": "10880:20:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CaseStatus_$2785",
                              "typeString": "enum DeciCourt.CaseStatus"
                            }
                          },
                          "src": "10859:41:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CaseStatus_$2785",
                            "typeString": "enum DeciCourt.CaseStatus"
                          }
                        },
                        "id": 3587,
                        "nodeType": "ExpressionStatement",
                        "src": "10859:41:21"
                      },
                      {
                        "assignments": [
                          3589
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3589,
                            "mutability": "mutable",
                            "name": "winner",
                            "nameLocation": "10980:6:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4057,
                            "src": "10972:14:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3588,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10972:7:21",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3601,
                        "initialValue": {
                          "condition": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3594,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3590,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3558,
                                    "src": "10990:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 3591,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11002:18:21",
                                  "memberName": "plaintiffVoteCount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2816,
                                  "src": "10990:30:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "expression": {
                                    "id": 3592,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3558,
                                    "src": "11023:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 3593,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11035:18:21",
                                  "memberName": "defendantVoteCount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2818,
                                  "src": "11023:30:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10990:63:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 3595,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10989:65:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "expression": {
                              "id": 3598,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3558,
                              "src": "11081:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 3599,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11093:9:21",
                            "memberName": "defendant",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2795,
                            "src": "11081:21:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "10989:113:21",
                          "trueExpression": {
                            "expression": {
                              "id": 3596,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3558,
                              "src": "11057:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 3597,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11069:9:21",
                            "memberName": "plaintiff",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2793,
                            "src": "11057:21:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10972:130:21"
                      },
                      {
                        "expression": {
                          "id": 3606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3602,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3558,
                              "src": "11112:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 3604,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "11124:6:21",
                            "memberName": "winner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2826,
                            "src": "11112:18:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3605,
                            "name": "winner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3589,
                            "src": "11133:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11112:27:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3607,
                        "nodeType": "ExpressionStatement",
                        "src": "11112:27:21"
                      },
                      {
                        "assignments": [
                          3610
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3610,
                            "mutability": "mutable",
                            "name": "winningVote",
                            "nameLocation": "11160:11:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4057,
                            "src": "11149:22:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_VoteOption_$2789",
                              "typeString": "enum DeciCourt.VoteOption"
                            },
                            "typeName": {
                              "id": 3609,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3608,
                                "name": "VoteOption",
                                "nameLocations": [
                                  "11149:10:21"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2789,
                                "src": "11149:10:21"
                              },
                              "referencedDeclaration": 2789,
                              "src": "11149:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_VoteOption_$2789",
                                "typeString": "enum DeciCourt.VoteOption"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3621,
                        "initialValue": {
                          "condition": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 3614,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3611,
                                  "name": "winner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3589,
                                  "src": "11175:6:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 3612,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3558,
                                    "src": "11185:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 3613,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11197:9:21",
                                  "memberName": "plaintiff",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2793,
                                  "src": "11185:21:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "11175:31:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 3615,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11174:33:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "expression": {
                              "id": 3618,
                              "name": "VoteOption",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2789,
                              "src": "11236:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_VoteOption_$2789_$",
                                "typeString": "type(enum DeciCourt.VoteOption)"
                              }
                            },
                            "id": 3619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "11247:12:21",
                            "memberName": "ForDefendant",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2788,
                            "src": "11236:23:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_VoteOption_$2789",
                              "typeString": "enum DeciCourt.VoteOption"
                            }
                          },
                          "id": 3620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "11174:85:21",
                          "trueExpression": {
                            "expression": {
                              "id": 3616,
                              "name": "VoteOption",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2789,
                              "src": "11210:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_VoteOption_$2789_$",
                                "typeString": "type(enum DeciCourt.VoteOption)"
                              }
                            },
                            "id": 3617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "11221:12:21",
                            "memberName": "ForPlaintiff",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2787,
                            "src": "11210:23:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_VoteOption_$2789",
                              "typeString": "enum DeciCourt.VoteOption"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_VoteOption_$2789",
                            "typeString": "enum DeciCourt.VoteOption"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11149:110:21"
                      },
                      {
                        "assignments": [
                          3623
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3623,
                            "mutability": "mutable",
                            "name": "totalPenaltyPool",
                            "nameLocation": "11278:16:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4057,
                            "src": "11270:24:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3622,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11270:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3625,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 3624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11297:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11270:28:21"
                      },
                      {
                        "assignments": [
                          3627
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3627,
                            "mutability": "mutable",
                            "name": "winningJurorCount",
                            "nameLocation": "11316:17:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4057,
                            "src": "11308:25:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3626,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11308:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3629,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 3628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11336:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11308:29:21"
                      },
                      {
                        "body": {
                          "id": 3887,
                          "nodeType": "Block",
                          "src": "11452:3075:21",
                          "statements": [
                            {
                              "assignments": [
                                3643
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3643,
                                  "mutability": "mutable",
                                  "name": "jurorAddr",
                                  "nameLocation": "11474:9:21",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3887,
                                  "src": "11466:17:21",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 3642,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11466:7:21",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3648,
                              "initialValue": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 3644,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3558,
                                    "src": "11486:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 3645,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11498:6:21",
                                  "memberName": "jurors",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2805,
                                  "src": "11486:18:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 3647,
                                "indexExpression": {
                                  "id": 3646,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3631,
                                  "src": "11505:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11486:21:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11466:41:21"
                            },
                            {
                              "assignments": [
                                3651
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3651,
                                  "mutability": "mutable",
                                  "name": "jurorVote",
                                  "nameLocation": "11532:9:21",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3887,
                                  "src": "11521:20:21",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_VoteOption_$2789",
                                    "typeString": "enum DeciCourt.VoteOption"
                                  },
                                  "typeName": {
                                    "id": 3650,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 3649,
                                      "name": "VoteOption",
                                      "nameLocations": [
                                        "11521:10:21"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 2789,
                                      "src": "11521:10:21"
                                    },
                                    "referencedDeclaration": 2789,
                                    "src": "11521:10:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_VoteOption_$2789",
                                      "typeString": "enum DeciCourt.VoteOption"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3656,
                              "initialValue": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 3652,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3558,
                                    "src": "11544:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 3653,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11556:13:21",
                                  "memberName": "revealedVotes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2814,
                                  "src": "11544:25:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_enum$_VoteOption_$2789_$",
                                    "typeString": "mapping(address => enum DeciCourt.VoteOption)"
                                  }
                                },
                                "id": 3655,
                                "indexExpression": {
                                  "id": 3654,
                                  "name": "jurorAddr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3643,
                                  "src": "11570:9:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11544:36:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_VoteOption_$2789",
                                  "typeString": "enum DeciCourt.VoteOption"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11521:59:21"
                            },
                            {
                              "assignments": [
                                3659
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3659,
                                  "mutability": "mutable",
                                  "name": "juror",
                                  "nameLocation": "11612:5:21",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3887,
                                  "src": "11594:23:21",
                                  "stateVariable": false,
                                  "storageLocation": "storage",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                    "typeString": "struct DeciCourt.JurorInfo"
                                  },
                                  "typeName": {
                                    "id": 3658,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 3657,
                                      "name": "JurorInfo",
                                      "nameLocations": [
                                        "11594:9:21"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 2852,
                                      "src": "11594:9:21"
                                    },
                                    "referencedDeclaration": 2852,
                                    "src": "11594:9:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                      "typeString": "struct DeciCourt.JurorInfo"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3663,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 3660,
                                  "name": "jurorsInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2892,
                                  "src": "11620:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_JurorInfo_$2852_storage_$",
                                    "typeString": "mapping(address => struct DeciCourt.JurorInfo storage ref)"
                                  }
                                },
                                "id": 3662,
                                "indexExpression": {
                                  "id": 3661,
                                  "name": "jurorAddr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3643,
                                  "src": "11631:9:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11620:21:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JurorInfo_$2852_storage",
                                  "typeString": "struct DeciCourt.JurorInfo storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11594:47:21"
                            },
                            {
                              "expression": {
                                "id": 3667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "11705:18:21",
                                "subExpression": {
                                  "expression": {
                                    "id": 3664,
                                    "name": "juror",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3659,
                                    "src": "11705:5:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                      "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                    }
                                  },
                                  "id": 3666,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "11711:10:21",
                                  "memberName": "totalVotes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2847,
                                  "src": "11705:16:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3668,
                              "nodeType": "ExpressionStatement",
                              "src": "11705:18:21"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 3676,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_VoteOption_$2789",
                                    "typeString": "enum DeciCourt.VoteOption"
                                  },
                                  "id": 3671,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3669,
                                    "name": "jurorVote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3651,
                                    "src": "11742:9:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_VoteOption_$2789",
                                      "typeString": "enum DeciCourt.VoteOption"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "id": 3670,
                                    "name": "winningVote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3610,
                                    "src": "11755:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_VoteOption_$2789",
                                      "typeString": "enum DeciCourt.VoteOption"
                                    }
                                  },
                                  "src": "11742:24:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_enum$_VoteOption_$2789",
                                    "typeString": "enum DeciCourt.VoteOption"
                                  },
                                  "id": 3675,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3672,
                                    "name": "jurorVote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3651,
                                    "src": "11770:9:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_VoteOption_$2789",
                                      "typeString": "enum DeciCourt.VoteOption"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 3673,
                                      "name": "VoteOption",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2789,
                                      "src": "11783:10:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_VoteOption_$2789_$",
                                        "typeString": "type(enum DeciCourt.VoteOption)"
                                      }
                                    },
                                    "id": 3674,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "11794:4:21",
                                    "memberName": "None",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2786,
                                    "src": "11783:15:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_VoteOption_$2789",
                                      "typeString": "enum DeciCourt.VoteOption"
                                    }
                                  },
                                  "src": "11770:28:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "11742:56:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 3885,
                                "nodeType": "Block",
                                "src": "12471:2046:21",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 3732,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "12542:24:21",
                                      "subExpression": {
                                        "expression": {
                                          "id": 3729,
                                          "name": "juror",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3659,
                                          "src": "12542:5:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                            "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                          }
                                        },
                                        "id": 3731,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "12548:16:21",
                                        "memberName": "consecutiveWrong",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2851,
                                        "src": "12542:22:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3733,
                                    "nodeType": "ExpressionStatement",
                                    "src": "12542:24:21"
                                  },
                                  {
                                    "assignments": [
                                      3735
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 3735,
                                        "mutability": "mutable",
                                        "name": "basePenalty",
                                        "nameLocation": "12647:11:21",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 3885,
                                        "src": "12639:19:21",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 3734,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "12639:7:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 3737,
                                    "initialValue": {
                                      "id": 3736,
                                      "name": "jurorPenaltyRate",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2867,
                                      "src": "12661:16:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "12639:38:21"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3741,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 3738,
                                          "name": "juror",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3659,
                                          "src": "12782:5:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                            "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                          }
                                        },
                                        "id": 3739,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "12788:10:21",
                                        "memberName": "totalVotes",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2847,
                                        "src": "12782:16:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "hexValue": "33",
                                        "id": 3740,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12802:1:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_3_by_1",
                                          "typeString": "int_const 3"
                                        },
                                        "value": "3"
                                      },
                                      "src": "12782:21:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 3749,
                                    "nodeType": "IfStatement",
                                    "src": "12778:113:21",
                                    "trueBody": {
                                      "id": 3748,
                                      "nodeType": "Block",
                                      "src": "12805:86:21",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 3746,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 3742,
                                              "name": "basePenalty",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3735,
                                              "src": "12827:11:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 3745,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 3743,
                                                "name": "basePenalty",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3735,
                                                "src": "12841:11:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "/",
                                              "rightExpression": {
                                                "hexValue": "32",
                                                "id": 3744,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "12855:1:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_2_by_1",
                                                  "typeString": "int_const 2"
                                                },
                                                "value": "2"
                                              },
                                              "src": "12841:15:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "12827:29:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 3747,
                                          "nodeType": "ExpressionStatement",
                                          "src": "12827:29:21"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3753,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 3750,
                                          "name": "juror",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3659,
                                          "src": "12973:5:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                            "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                          }
                                        },
                                        "id": 3751,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "12979:16:21",
                                        "memberName": "consecutiveWrong",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2851,
                                        "src": "12973:22:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 3752,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12998:1:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "12973:26:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 3775,
                                    "nodeType": "IfStatement",
                                    "src": "12969:213:21",
                                    "trueBody": {
                                      "id": 3774,
                                      "nodeType": "Block",
                                      "src": "13001:181:21",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 3764,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 3754,
                                              "name": "basePenalty",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3735,
                                              "src": "13023:11:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 3763,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 3755,
                                                "name": "basePenalty",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3735,
                                                "src": "13037:11:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "+",
                                              "rightExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 3762,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "components": [
                                                    {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 3759,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "expression": {
                                                          "id": 3756,
                                                          "name": "juror",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 3659,
                                                          "src": "13052:5:21",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                                            "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                                          }
                                                        },
                                                        "id": 3757,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "13058:16:21",
                                                        "memberName": "consecutiveWrong",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 2851,
                                                        "src": "13052:22:21",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "-",
                                                      "rightExpression": {
                                                        "hexValue": "31",
                                                        "id": 3758,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "13077:1:21",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_rational_1_by_1",
                                                          "typeString": "int_const 1"
                                                        },
                                                        "value": "1"
                                                      },
                                                      "src": "13052:26:21",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "id": 3760,
                                                  "isConstant": false,
                                                  "isInlineArray": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "TupleExpression",
                                                  "src": "13051:28:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                  "hexValue": "3130",
                                                  "id": 3761,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "13082:2:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10_by_1",
                                                    "typeString": "int_const 10"
                                                  },
                                                  "value": "10"
                                                },
                                                "src": "13051:33:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "13037:47:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "13023:61:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 3765,
                                          "nodeType": "ExpressionStatement",
                                          "src": "13023:61:21"
                                        },
                                        {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 3768,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 3766,
                                              "name": "basePenalty",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3735,
                                              "src": "13110:11:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": ">",
                                            "rightExpression": {
                                              "hexValue": "3830",
                                              "id": 3767,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13124:2:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_80_by_1",
                                                "typeString": "int_const 80"
                                              },
                                              "value": "80"
                                            },
                                            "src": "13110:16:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 3773,
                                          "nodeType": "IfStatement",
                                          "src": "13106:38:21",
                                          "trueBody": {
                                            "expression": {
                                              "id": 3771,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftHandSide": {
                                                "id": 3769,
                                                "name": "basePenalty",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3735,
                                                "src": "13128:11:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "Assignment",
                                              "operator": "=",
                                              "rightHandSide": {
                                                "hexValue": "3830",
                                                "id": 3770,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "13142:2:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_80_by_1",
                                                  "typeString": "int_const 80"
                                                },
                                                "value": "80"
                                              },
                                              "src": "13128:16:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "id": 3772,
                                            "nodeType": "ExpressionStatement",
                                            "src": "13128:16:21"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3779,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 3776,
                                          "name": "juror",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3659,
                                          "src": "13270:5:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                            "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                          }
                                        },
                                        "id": 3777,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "13276:15:21",
                                        "memberName": "reputationScore",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2849,
                                        "src": "13270:21:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "3730",
                                        "id": 3778,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13294:2:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_70_by_1",
                                          "typeString": "int_const 70"
                                        },
                                        "value": "70"
                                      },
                                      "src": "13270:26:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 3789,
                                    "nodeType": "IfStatement",
                                    "src": "13266:128:21",
                                    "trueBody": {
                                      "id": 3788,
                                      "nodeType": "Block",
                                      "src": "13298:96:21",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 3786,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 3780,
                                              "name": "basePenalty",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3735,
                                              "src": "13320:11:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 3785,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 3783,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 3781,
                                                  "name": "basePenalty",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3735,
                                                  "src": "13334:11:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "*",
                                                "rightExpression": {
                                                  "hexValue": "3830",
                                                  "id": 3782,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "13348:2:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_80_by_1",
                                                    "typeString": "int_const 80"
                                                  },
                                                  "value": "80"
                                                },
                                                "src": "13334:16:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "/",
                                              "rightExpression": {
                                                "hexValue": "313030",
                                                "id": 3784,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "13353:3:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_100_by_1",
                                                  "typeString": "int_const 100"
                                                },
                                                "value": "100"
                                              },
                                              "src": "13334:22:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "13320:36:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 3787,
                                          "nodeType": "ExpressionStatement",
                                          "src": "13320:36:21"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "assignments": [
                                      3791
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 3791,
                                        "mutability": "mutable",
                                        "name": "penalty",
                                        "nameLocation": "13436:7:21",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 3885,
                                        "src": "13428:15:21",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 3790,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "13428:7:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 3799,
                                    "initialValue": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3798,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 3795,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 3792,
                                                "name": "juror",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3659,
                                                "src": "13447:5:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                                  "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                                }
                                              },
                                              "id": 3793,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "13453:12:21",
                                              "memberName": "stakedAmount",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 2841,
                                              "src": "13447:18:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 3794,
                                              "name": "basePenalty",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3735,
                                              "src": "13468:11:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "13447:32:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 3796,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "13446:34:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "313030",
                                        "id": 3797,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13483:3:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      },
                                      "src": "13446:40:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "13428:58:21"
                                  },
                                  {
                                    "assignments": [
                                      3801
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 3801,
                                        "mutability": "mutable",
                                        "name": "minStake",
                                        "nameLocation": "13577:8:21",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 3885,
                                        "src": "13569:16:21",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 3800,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "13569:7:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 3805,
                                    "initialValue": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3804,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 3802,
                                        "name": "jurorStakeAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2859,
                                        "src": "13588:16:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "hexValue": "3130",
                                        "id": 3803,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13607:2:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "src": "13588:21:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "13569:40:21"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3811,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 3809,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 3806,
                                            "name": "juror",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3659,
                                            "src": "13631:5:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                              "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                            }
                                          },
                                          "id": 3807,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "13637:12:21",
                                          "memberName": "stakedAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2841,
                                          "src": "13631:18:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 3808,
                                          "name": "penalty",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3791,
                                          "src": "13652:7:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "13631:28:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "id": 3810,
                                        "name": "minStake",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3801,
                                        "src": "13662:8:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "13631:39:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 3820,
                                    "nodeType": "IfStatement",
                                    "src": "13627:125:21",
                                    "trueBody": {
                                      "id": 3819,
                                      "nodeType": "Block",
                                      "src": "13672:80:21",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 3817,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 3812,
                                              "name": "penalty",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3791,
                                              "src": "13694:7:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 3816,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 3813,
                                                  "name": "juror",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3659,
                                                  "src": "13704:5:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                                    "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                                  }
                                                },
                                                "id": 3814,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "13710:12:21",
                                                "memberName": "stakedAmount",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 2841,
                                                "src": "13704:18:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "id": 3815,
                                                "name": "minStake",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3801,
                                                "src": "13725:8:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "13704:29:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "13694:39:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 3818,
                                          "nodeType": "ExpressionStatement",
                                          "src": "13694:39:21"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 3828,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 3821,
                                          "name": "juror",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3659,
                                          "src": "13769:5:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                            "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                          }
                                        },
                                        "id": 3823,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "13775:12:21",
                                        "memberName": "stakedAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2841,
                                        "src": "13769:18:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 3827,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 3824,
                                            "name": "juror",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3659,
                                            "src": "13790:5:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                              "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                            }
                                          },
                                          "id": 3825,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "13796:12:21",
                                          "memberName": "stakedAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2841,
                                          "src": "13790:18:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 3826,
                                          "name": "penalty",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3791,
                                          "src": "13811:7:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "13790:28:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "13769:49:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3829,
                                    "nodeType": "ExpressionStatement",
                                    "src": "13769:49:21"
                                  },
                                  {
                                    "expression": {
                                      "id": 3834,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 3830,
                                        "name": "totalPenaltyPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3623,
                                        "src": "13836:16:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 3833,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 3831,
                                          "name": "totalPenaltyPool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3623,
                                          "src": "13855:16:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "id": 3832,
                                          "name": "penalty",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3791,
                                          "src": "13874:7:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "13855:26:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "13836:45:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3835,
                                    "nodeType": "ExpressionStatement",
                                    "src": "13836:45:21"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3839,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 3836,
                                          "name": "juror",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3659,
                                          "src": "13968:5:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                            "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                          }
                                        },
                                        "id": 3837,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "13974:15:21",
                                        "memberName": "reputationScore",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2849,
                                        "src": "13968:21:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "hexValue": "35",
                                        "id": 3838,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13992:1:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_5_by_1",
                                          "typeString": "int_const 5"
                                        },
                                        "value": "5"
                                      },
                                      "src": "13968:25:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "id": 3856,
                                      "nodeType": "Block",
                                      "src": "14091:66:21",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 3854,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "expression": {
                                                "id": 3850,
                                                "name": "juror",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3659,
                                                "src": "14113:5:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                                  "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                                }
                                              },
                                              "id": 3852,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "memberLocation": "14119:15:21",
                                              "memberName": "reputationScore",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 2849,
                                              "src": "14113:21:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "hexValue": "30",
                                              "id": 3853,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "14137:1:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                              },
                                              "value": "0"
                                            },
                                            "src": "14113:25:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 3855,
                                          "nodeType": "ExpressionStatement",
                                          "src": "14113:25:21"
                                        }
                                      ]
                                    },
                                    "id": 3857,
                                    "nodeType": "IfStatement",
                                    "src": "13964:193:21",
                                    "trueBody": {
                                      "id": 3849,
                                      "nodeType": "Block",
                                      "src": "13995:90:21",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 3847,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "expression": {
                                                "id": 3840,
                                                "name": "juror",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3659,
                                                "src": "14017:5:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                                  "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                                }
                                              },
                                              "id": 3842,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "memberLocation": "14023:15:21",
                                              "memberName": "reputationScore",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 2849,
                                              "src": "14017:21:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 3846,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 3843,
                                                  "name": "juror",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3659,
                                                  "src": "14041:5:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                                    "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                                  }
                                                },
                                                "id": 3844,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "14047:15:21",
                                                "memberName": "reputationScore",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 2849,
                                                "src": "14041:21:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "35",
                                                "id": 3845,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "14065:1:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_5_by_1",
                                                  "typeString": "int_const 5"
                                                },
                                                "value": "5"
                                              },
                                              "src": "14041:25:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "14017:49:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 3848,
                                          "nodeType": "ExpressionStatement",
                                          "src": "14017:49:21"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "assignments": [
                                      3859
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 3859,
                                        "mutability": "mutable",
                                        "name": "reason",
                                        "nameLocation": "14243:6:21",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 3885,
                                        "src": "14229:20:21",
                                        "stateVariable": false,
                                        "storageLocation": "memory",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string"
                                        },
                                        "typeName": {
                                          "id": 3858,
                                          "name": "string",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "14229:6:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage_ptr",
                                            "typeString": "string"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 3867,
                                    "initialValue": {
                                      "condition": {
                                        "commonType": {
                                          "typeIdentifier": "t_enum$_VoteOption_$2789",
                                          "typeString": "enum DeciCourt.VoteOption"
                                        },
                                        "id": 3863,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 3860,
                                          "name": "jurorVote",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3651,
                                          "src": "14252:9:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_VoteOption_$2789",
                                            "typeString": "enum DeciCourt.VoteOption"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "expression": {
                                            "id": 3861,
                                            "name": "VoteOption",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2789,
                                            "src": "14265:10:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_enum$_VoteOption_$2789_$",
                                              "typeString": "type(enum DeciCourt.VoteOption)"
                                            }
                                          },
                                          "id": 3862,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "14276:4:21",
                                          "memberName": "None",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2786,
                                          "src": "14265:15:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_enum$_VoteOption_$2789",
                                            "typeString": "enum DeciCourt.VoteOption"
                                          }
                                        },
                                        "src": "14252:28:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "falseExpression": {
                                        "hexValue": "57726f6e6720766f7465",
                                        "id": 3865,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14295:12:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_250f1246f2daf873b2e3571cb3523776c2284a80e8829198cd7174b87afdcf9e",
                                          "typeString": "literal_string \"Wrong vote\""
                                        },
                                        "value": "Wrong vote"
                                      },
                                      "id": 3866,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "Conditional",
                                      "src": "14252:55:21",
                                      "trueExpression": {
                                        "hexValue": "4e6f20766f7465",
                                        "id": 3864,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14283:9:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_21fe5489e7bbb2d9dab5e024407180d3b06ed69045f5debe4dc1eb301b9a664e",
                                          "typeString": "literal_string \"No vote\""
                                        },
                                        "value": "No vote"
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "14229:78:21"
                                  },
                                  {
                                    "eventCall": {
                                      "arguments": [
                                        {
                                          "id": 3869,
                                          "name": "jurorAddr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3643,
                                          "src": "14345:9:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 3870,
                                          "name": "penalty",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3791,
                                          "src": "14356:7:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 3871,
                                          "name": "basePenalty",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3735,
                                          "src": "14365:11:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 3872,
                                          "name": "reason",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3859,
                                          "src": "14378:6:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 3868,
                                        "name": "JurorPenalized",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2778,
                                        "src": "14330:14:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (address,uint256,uint256,string memory)"
                                        }
                                      },
                                      "id": 3873,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "14330:55:21",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3874,
                                    "nodeType": "EmitStatement",
                                    "src": "14325:60:21"
                                  },
                                  {
                                    "eventCall": {
                                      "arguments": [
                                        {
                                          "id": 3876,
                                          "name": "jurorAddr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3643,
                                          "src": "14431:9:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 3877,
                                            "name": "juror",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3659,
                                            "src": "14442:5:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                              "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                            }
                                          },
                                          "id": 3878,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "14448:15:21",
                                          "memberName": "reputationScore",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2849,
                                          "src": "14442:21:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 3879,
                                            "name": "juror",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3659,
                                            "src": "14465:5:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                              "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                            }
                                          },
                                          "id": 3880,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "14471:12:21",
                                          "memberName": "correctVotes",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2845,
                                          "src": "14465:18:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 3881,
                                            "name": "juror",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3659,
                                            "src": "14485:5:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                              "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                            }
                                          },
                                          "id": 3882,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "14491:10:21",
                                          "memberName": "totalVotes",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2847,
                                          "src": "14485:16:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 3875,
                                        "name": "JurorReputationUpdated",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2768,
                                        "src": "14408:22:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256,uint256,uint256)"
                                        }
                                      },
                                      "id": 3883,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "14408:94:21",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3884,
                                    "nodeType": "EmitStatement",
                                    "src": "14403:99:21"
                                  }
                                ]
                              },
                              "id": 3886,
                              "nodeType": "IfStatement",
                              "src": "11738:2779:21",
                              "trueBody": {
                                "id": 3728,
                                "nodeType": "Block",
                                "src": "11800:665:21",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 3678,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "11850:19:21",
                                      "subExpression": {
                                        "id": 3677,
                                        "name": "winningJurorCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3627,
                                        "src": "11850:17:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3679,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11850:19:21"
                                  },
                                  {
                                    "expression": {
                                      "id": 3683,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "11887:20:21",
                                      "subExpression": {
                                        "expression": {
                                          "id": 3680,
                                          "name": "juror",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3659,
                                          "src": "11887:5:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                            "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                          }
                                        },
                                        "id": 3682,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "11893:12:21",
                                        "memberName": "correctVotes",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2845,
                                        "src": "11887:18:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3684,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11887:20:21"
                                  },
                                  {
                                    "expression": {
                                      "id": 3689,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 3685,
                                          "name": "juror",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3659,
                                          "src": "11925:5:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                            "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                          }
                                        },
                                        "id": 3687,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "11931:16:21",
                                        "memberName": "consecutiveWrong",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2851,
                                        "src": "11925:22:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 3688,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11950:1:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "11925:26:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3690,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11925:26:21"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 3694,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 3691,
                                          "name": "juror",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3659,
                                          "src": "12068:5:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                            "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                          }
                                        },
                                        "id": 3692,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "12074:15:21",
                                        "memberName": "reputationScore",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2849,
                                        "src": "12068:21:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "hexValue": "313030",
                                        "id": 3693,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "12092:3:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100_by_1",
                                          "typeString": "int_const 100"
                                        },
                                        "value": "100"
                                      },
                                      "src": "12068:27:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 3717,
                                    "nodeType": "IfStatement",
                                    "src": "12064:253:21",
                                    "trueBody": {
                                      "id": 3716,
                                      "nodeType": "Block",
                                      "src": "12097:220:21",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 3702,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "expression": {
                                                "id": 3695,
                                                "name": "juror",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3659,
                                                "src": "12119:5:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                                  "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                                }
                                              },
                                              "id": 3697,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "memberLocation": "12125:15:21",
                                              "memberName": "reputationScore",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 2849,
                                              "src": "12119:21:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 3701,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 3698,
                                                  "name": "juror",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 3659,
                                                  "src": "12143:5:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                                    "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                                  }
                                                },
                                                "id": 3699,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "12149:15:21",
                                                "memberName": "reputationScore",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 2849,
                                                "src": "12143:21:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "+",
                                              "rightExpression": {
                                                "hexValue": "32",
                                                "id": 3700,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "12167:1:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_2_by_1",
                                                  "typeString": "int_const 2"
                                                },
                                                "value": "2"
                                              },
                                              "src": "12143:25:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "12119:49:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 3703,
                                          "nodeType": "ExpressionStatement",
                                          "src": "12119:49:21"
                                        },
                                        {
                                          "condition": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 3707,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "id": 3704,
                                                "name": "juror",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3659,
                                                "src": "12194:5:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                                  "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                                }
                                              },
                                              "id": 3705,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "12200:15:21",
                                              "memberName": "reputationScore",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 2849,
                                              "src": "12194:21:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": ">",
                                            "rightExpression": {
                                              "hexValue": "313030",
                                              "id": 3706,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12218:3:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_100_by_1",
                                                "typeString": "int_const 100"
                                              },
                                              "value": "100"
                                            },
                                            "src": "12194:27:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          },
                                          "id": 3715,
                                          "nodeType": "IfStatement",
                                          "src": "12190:109:21",
                                          "trueBody": {
                                            "id": 3714,
                                            "nodeType": "Block",
                                            "src": "12223:76:21",
                                            "statements": [
                                              {
                                                "expression": {
                                                  "id": 3712,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftHandSide": {
                                                    "expression": {
                                                      "id": 3708,
                                                      "name": "juror",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 3659,
                                                      "src": "12249:5:21",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                                        "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                                      }
                                                    },
                                                    "id": 3710,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": true,
                                                    "memberLocation": "12255:15:21",
                                                    "memberName": "reputationScore",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 2849,
                                                    "src": "12249:21:21",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "Assignment",
                                                  "operator": "=",
                                                  "rightHandSide": {
                                                    "hexValue": "313030",
                                                    "id": 3711,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "12273:3:21",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_100_by_1",
                                                      "typeString": "int_const 100"
                                                    },
                                                    "value": "100"
                                                  },
                                                  "src": "12249:27:21",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 3713,
                                                "nodeType": "ExpressionStatement",
                                                "src": "12249:27:21"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "eventCall": {
                                      "arguments": [
                                        {
                                          "id": 3719,
                                          "name": "jurorAddr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3643,
                                          "src": "12379:9:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 3720,
                                            "name": "juror",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3659,
                                            "src": "12390:5:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                              "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                            }
                                          },
                                          "id": 3721,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "12396:15:21",
                                          "memberName": "reputationScore",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2849,
                                          "src": "12390:21:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 3722,
                                            "name": "juror",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3659,
                                            "src": "12413:5:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                              "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                            }
                                          },
                                          "id": 3723,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "12419:12:21",
                                          "memberName": "correctVotes",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2845,
                                          "src": "12413:18:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 3724,
                                            "name": "juror",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3659,
                                            "src": "12433:5:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                              "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                            }
                                          },
                                          "id": 3725,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "12439:10:21",
                                          "memberName": "totalVotes",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2847,
                                          "src": "12433:16:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 3718,
                                        "name": "JurorReputationUpdated",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2768,
                                        "src": "12356:22:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256,uint256,uint256)"
                                        }
                                      },
                                      "id": 3726,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "12356:94:21",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3727,
                                    "nodeType": "EmitStatement",
                                    "src": "12351:99:21"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3634,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3631,
                            "src": "11416:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 3635,
                                "name": "currentCase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3558,
                                "src": "11420:11:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 3636,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11432:6:21",
                              "memberName": "jurors",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2805,
                              "src": "11420:18:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11439:6:21",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "11420:25:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11416:29:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3888,
                        "initializationExpression": {
                          "assignments": [
                            3631
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3631,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "11409:1:21",
                              "nodeType": "VariableDeclaration",
                              "scope": 3888,
                              "src": "11404:6:21",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3630,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "11404:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3633,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11413:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "11404:10:21"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "11447:3:21",
                            "subExpression": {
                              "id": 3639,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3631,
                              "src": "11447:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3641,
                          "nodeType": "ExpressionStatement",
                          "src": "11447:3:21"
                        },
                        "nodeType": "ForStatement",
                        "src": "11399:3128:21"
                      },
                      {
                        "assignments": [
                          3890
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3890,
                            "mutability": "mutable",
                            "name": "plaintiffReward",
                            "nameLocation": "14577:15:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4057,
                            "src": "14569:23:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3889,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14569:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3892,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 3891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14595:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14569:27:21"
                      },
                      {
                        "assignments": [
                          3894
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3894,
                            "mutability": "mutable",
                            "name": "defendantReward",
                            "nameLocation": "14614:15:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4057,
                            "src": "14606:23:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3893,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14606:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3896,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 3895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14632:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14606:27:21"
                      },
                      {
                        "assignments": [
                          3898
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3898,
                            "mutability": "mutable",
                            "name": "jurorRewardPerPerson",
                            "nameLocation": "14651:20:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4057,
                            "src": "14643:28:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3897,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14643:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3900,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 3899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14674:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14643:32:21"
                      },
                      {
                        "assignments": [
                          3902
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3902,
                            "mutability": "mutable",
                            "name": "totalJurorReward",
                            "nameLocation": "14693:16:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4057,
                            "src": "14685:24:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3901,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14685:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3904,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 3903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14712:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14685:28:21"
                      },
                      {
                        "assignments": [
                          3906
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3906,
                            "mutability": "mutable",
                            "name": "jurorRewardPool",
                            "nameLocation": "14732:15:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4057,
                            "src": "14724:23:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3905,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14724:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3908,
                        "initialValue": {
                          "id": 3907,
                          "name": "totalPenaltyPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3623,
                          "src": "14750:16:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14724:42:21"
                      },
                      {
                        "assignments": [
                          3910
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3910,
                            "mutability": "mutable",
                            "name": "winnerRewardPool",
                            "nameLocation": "14821:16:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4057,
                            "src": "14813:24:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3909,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14813:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3913,
                        "initialValue": {
                          "expression": {
                            "id": 3911,
                            "name": "currentCase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3558,
                            "src": "14840:11:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                              "typeString": "struct DeciCourt.Case storage pointer"
                            }
                          },
                          "id": 3912,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14852:9:21",
                          "memberName": "filingFee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2802,
                          "src": "14840:21:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14813:48:21"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3914,
                            "name": "winningJurorCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3627,
                            "src": "14913:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14933:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14913:21:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3924,
                        "nodeType": "IfStatement",
                        "src": "14909:110:21",
                        "trueBody": {
                          "id": 3923,
                          "nodeType": "Block",
                          "src": "14936:83:21",
                          "statements": [
                            {
                              "expression": {
                                "id": 3921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3917,
                                  "name": "jurorRewardPerPerson",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3898,
                                  "src": "14950:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3920,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 3918,
                                    "name": "jurorRewardPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3906,
                                    "src": "14973:15:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 3919,
                                    "name": "winningJurorCount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3627,
                                    "src": "14991:17:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14973:35:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14950:58:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3922,
                              "nodeType": "ExpressionStatement",
                              "src": "14950:58:21"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3925,
                            "name": "winner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3589,
                            "src": "15041:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 3926,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3558,
                              "src": "15051:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 3927,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15063:9:21",
                            "memberName": "plaintiff",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2793,
                            "src": "15051:21:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15041:31:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 3964,
                          "nodeType": "Block",
                          "src": "15314:246:21",
                          "statements": [
                            {
                              "expression": {
                                "id": 3949,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3947,
                                  "name": "defendantReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3894,
                                  "src": "15386:15:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 3948,
                                  "name": "winnerRewardPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3910,
                                  "src": "15404:16:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15386:34:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3950,
                              "nodeType": "ExpressionStatement",
                              "src": "15386:34:21"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3953,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3951,
                                  "name": "defendantReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3894,
                                  "src": "15438:15:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 3952,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15456:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "15438:19:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3963,
                              "nodeType": "IfStatement",
                              "src": "15434:116:21",
                              "trueBody": {
                                "id": 3962,
                                "nodeType": "Block",
                                "src": "15459:91:21",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 3957,
                                            "name": "currentCase",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3558,
                                            "src": "15496:11:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                              "typeString": "struct DeciCourt.Case storage pointer"
                                            }
                                          },
                                          "id": 3958,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "15508:9:21",
                                          "memberName": "defendant",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2795,
                                          "src": "15496:21:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 3959,
                                          "name": "defendantReward",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3894,
                                          "src": "15519:15:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 3954,
                                          "name": "juryToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2855,
                                          "src": "15477:9:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$877",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 3956,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "15487:8:21",
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 844,
                                        "src": "15477:18:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      "id": 3960,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15477:58:21",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 3961,
                                    "nodeType": "ExpressionStatement",
                                    "src": "15477:58:21"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 3965,
                        "nodeType": "IfStatement",
                        "src": "15037:523:21",
                        "trueBody": {
                          "id": 3946,
                          "nodeType": "Block",
                          "src": "15074:234:21",
                          "statements": [
                            {
                              "expression": {
                                "id": 3931,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 3929,
                                  "name": "plaintiffReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3890,
                                  "src": "15134:15:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 3930,
                                  "name": "winnerRewardPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3910,
                                  "src": "15152:16:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15134:34:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3932,
                              "nodeType": "ExpressionStatement",
                              "src": "15134:34:21"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3935,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3933,
                                  "name": "plaintiffReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3890,
                                  "src": "15186:15:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 3934,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15204:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "15186:19:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3945,
                              "nodeType": "IfStatement",
                              "src": "15182:116:21",
                              "trueBody": {
                                "id": 3944,
                                "nodeType": "Block",
                                "src": "15207:91:21",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 3939,
                                            "name": "currentCase",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3558,
                                            "src": "15244:11:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                              "typeString": "struct DeciCourt.Case storage pointer"
                                            }
                                          },
                                          "id": 3940,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "15256:9:21",
                                          "memberName": "plaintiff",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2793,
                                          "src": "15244:21:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 3941,
                                          "name": "plaintiffReward",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3890,
                                          "src": "15267:15:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 3936,
                                          "name": "juryToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2855,
                                          "src": "15225:9:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$877",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 3938,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "15235:8:21",
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 844,
                                        "src": "15225:18:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      "id": 3942,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15225:58:21",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 3943,
                                    "nodeType": "ExpressionStatement",
                                    "src": "15225:58:21"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "body": {
                          "id": 4018,
                          "nodeType": "Block",
                          "src": "15668:460:21",
                          "statements": [
                            {
                              "assignments": [
                                3979
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3979,
                                  "mutability": "mutable",
                                  "name": "jurorAddr",
                                  "nameLocation": "15690:9:21",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 4018,
                                  "src": "15682:17:21",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 3978,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15682:7:21",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3984,
                              "initialValue": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 3980,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3558,
                                    "src": "15702:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 3981,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "15714:6:21",
                                  "memberName": "jurors",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2805,
                                  "src": "15702:18:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 3983,
                                "indexExpression": {
                                  "id": 3982,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3967,
                                  "src": "15721:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "15702:21:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "15682:41:21"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_VoteOption_$2789",
                                  "typeString": "enum DeciCourt.VoteOption"
                                },
                                "id": 3990,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 3985,
                                      "name": "currentCase",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3558,
                                      "src": "15741:11:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                        "typeString": "struct DeciCourt.Case storage pointer"
                                      }
                                    },
                                    "id": 3986,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15753:13:21",
                                    "memberName": "revealedVotes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2814,
                                    "src": "15741:25:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_enum$_VoteOption_$2789_$",
                                      "typeString": "mapping(address => enum DeciCourt.VoteOption)"
                                    }
                                  },
                                  "id": 3988,
                                  "indexExpression": {
                                    "id": 3987,
                                    "name": "jurorAddr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3979,
                                    "src": "15767:9:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15741:36:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_VoteOption_$2789",
                                    "typeString": "enum DeciCourt.VoteOption"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 3989,
                                  "name": "winningVote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3610,
                                  "src": "15781:11:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_VoteOption_$2789",
                                    "typeString": "enum DeciCourt.VoteOption"
                                  }
                                },
                                "src": "15741:51:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4010,
                              "nodeType": "IfStatement",
                              "src": "15737:260:21",
                              "trueBody": {
                                "id": 4009,
                                "nodeType": "Block",
                                "src": "15794:203:21",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 4001,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 3991,
                                            "name": "jurorsInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2892,
                                            "src": "15812:10:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_JurorInfo_$2852_storage_$",
                                              "typeString": "mapping(address => struct DeciCourt.JurorInfo storage ref)"
                                            }
                                          },
                                          "id": 3993,
                                          "indexExpression": {
                                            "id": 3992,
                                            "name": "jurorAddr",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3979,
                                            "src": "15823:9:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15812:21:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_JurorInfo_$2852_storage",
                                            "typeString": "struct DeciCourt.JurorInfo storage ref"
                                          }
                                        },
                                        "id": 3994,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "15834:12:21",
                                        "memberName": "stakedAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2841,
                                        "src": "15812:34:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 4000,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 3995,
                                              "name": "jurorsInfo",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2892,
                                              "src": "15849:10:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_JurorInfo_$2852_storage_$",
                                                "typeString": "mapping(address => struct DeciCourt.JurorInfo storage ref)"
                                              }
                                            },
                                            "id": 3997,
                                            "indexExpression": {
                                              "id": 3996,
                                              "name": "jurorAddr",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3979,
                                              "src": "15860:9:21",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "15849:21:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_JurorInfo_$2852_storage",
                                              "typeString": "struct DeciCourt.JurorInfo storage ref"
                                            }
                                          },
                                          "id": 3998,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "15871:12:21",
                                          "memberName": "stakedAmount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2841,
                                          "src": "15849:34:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "id": 3999,
                                          "name": "jurorRewardPerPerson",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3898,
                                          "src": "15886:20:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "15849:57:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "15812:94:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4002,
                                    "nodeType": "ExpressionStatement",
                                    "src": "15812:94:21"
                                  },
                                  {
                                    "expression": {
                                      "id": 4007,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 4003,
                                        "name": "totalJurorReward",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3902,
                                        "src": "15924:16:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 4006,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 4004,
                                          "name": "totalJurorReward",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3902,
                                          "src": "15943:16:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "id": 4005,
                                          "name": "jurorRewardPerPerson",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3898,
                                          "src": "15962:20:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "15943:39:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "15924:58:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4008,
                                    "nodeType": "ExpressionStatement",
                                    "src": "15924:58:21"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 4016,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 4011,
                                      "name": "jurorsInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2892,
                                      "src": "16078:10:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_JurorInfo_$2852_storage_$",
                                        "typeString": "mapping(address => struct DeciCourt.JurorInfo storage ref)"
                                      }
                                    },
                                    "id": 4013,
                                    "indexExpression": {
                                      "id": 4012,
                                      "name": "jurorAddr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3979,
                                      "src": "16089:9:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16078:21:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_JurorInfo_$2852_storage",
                                      "typeString": "struct DeciCourt.JurorInfo storage ref"
                                    }
                                  },
                                  "id": 4014,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "16100:9:21",
                                  "memberName": "isServing",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2843,
                                  "src": "16078:31:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 4015,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16112:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "16078:39:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4017,
                              "nodeType": "ExpressionStatement",
                              "src": "16078:39:21"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3970,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3967,
                            "src": "15632:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 3971,
                                "name": "currentCase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3558,
                                "src": "15636:11:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 3972,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15648:6:21",
                              "memberName": "jurors",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2805,
                              "src": "15636:18:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15655:6:21",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "15636:25:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15632:29:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4019,
                        "initializationExpression": {
                          "assignments": [
                            3967
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3967,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "15625:1:21",
                              "nodeType": "VariableDeclaration",
                              "scope": 4019,
                              "src": "15620:6:21",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3966,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "15620:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3969,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15629:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "15620:10:21"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "15663:3:21",
                            "subExpression": {
                              "id": 3975,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3967,
                              "src": "15663:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3977,
                          "nodeType": "ExpressionStatement",
                          "src": "15663:3:21"
                        },
                        "nodeType": "ForStatement",
                        "src": "15615:513:21"
                      },
                      {
                        "condition": {
                          "expression": {
                            "id": 4020,
                            "name": "currentCase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3558,
                            "src": "16181:11:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                              "typeString": "struct DeciCourt.Case storage pointer"
                            }
                          },
                          "id": 4021,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16193:10:21",
                          "memberName": "isAppealed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2834,
                          "src": "16181:22:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 4055,
                          "nodeType": "Block",
                          "src": "16368:319:21",
                          "statements": [
                            {
                              "expression": {
                                "id": 4038,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 4031,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3558,
                                    "src": "16461:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 4033,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "16473:14:21",
                                  "memberName": "appealDeadline",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2832,
                                  "src": "16461:26:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4037,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 4034,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "16490:5:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 4035,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "16496:9:21",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "16490:15:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 4036,
                                    "name": "appealDuration",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2871,
                                    "src": "16508:14:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "16490:32:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16461:61:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4039,
                              "nodeType": "ExpressionStatement",
                              "src": "16461:61:21"
                            },
                            {
                              "expression": {
                                "id": 4045,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 4040,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3558,
                                    "src": "16536:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 4042,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "16548:6:21",
                                  "memberName": "status",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2800,
                                  "src": "16536:18:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_CaseStatus_$2785",
                                    "typeString": "enum DeciCourt.CaseStatus"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 4043,
                                    "name": "CaseStatus",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2785,
                                    "src": "16557:10:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_CaseStatus_$2785_$",
                                      "typeString": "type(enum DeciCourt.CaseStatus)"
                                    }
                                  },
                                  "id": 4044,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "16568:8:21",
                                  "memberName": "Resolved",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2782,
                                  "src": "16557:19:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_CaseStatus_$2785",
                                    "typeString": "enum DeciCourt.CaseStatus"
                                  }
                                },
                                "src": "16536:40:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_CaseStatus_$2785",
                                  "typeString": "enum DeciCourt.CaseStatus"
                                }
                              },
                              "id": 4046,
                              "nodeType": "ExpressionStatement",
                              "src": "16536:40:21"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 4048,
                                    "name": "_caseId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3551,
                                    "src": "16608:7:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 4049,
                                    "name": "winner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3589,
                                    "src": "16617:6:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 4050,
                                    "name": "plaintiffReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3890,
                                    "src": "16625:15:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 4051,
                                    "name": "defendantReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3894,
                                    "src": "16642:15:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 4052,
                                    "name": "totalJurorReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3902,
                                    "src": "16659:16:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4047,
                                  "name": "CaseResolved",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2742,
                                  "src": "16595:12:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,address,uint256,uint256,uint256)"
                                  }
                                },
                                "id": 4053,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16595:81:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4054,
                              "nodeType": "EmitStatement",
                              "src": "16590:86:21"
                            }
                          ]
                        },
                        "id": 4056,
                        "nodeType": "IfStatement",
                        "src": "16177:510:21",
                        "trueBody": {
                          "id": 4030,
                          "nodeType": "Block",
                          "src": "16205:157:21",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 4023,
                                    "name": "_caseId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3551,
                                    "src": "16283:7:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 4024,
                                    "name": "winner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3589,
                                    "src": "16292:6:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 4025,
                                    "name": "plaintiffReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3890,
                                    "src": "16300:15:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 4026,
                                    "name": "defendantReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3894,
                                    "src": "16317:15:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 4027,
                                    "name": "totalJurorReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3902,
                                    "src": "16334:16:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4022,
                                  "name": "_handleAppealVerdict",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4779,
                                  "src": "16262:20:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,address,uint256,uint256,uint256)"
                                  }
                                },
                                "id": 4028,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16262:89:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4029,
                              "nodeType": "ExpressionStatement",
                              "src": "16262:89:21"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "1c204d0e",
                  "id": 4058,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3554,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3553,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "10595:12:21"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1154,
                        "src": "10595:12:21"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10595:12:21"
                    }
                  ],
                  "name": "executeVerdict",
                  "nameLocation": "10554:14:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3552,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3551,
                        "mutability": "mutable",
                        "name": "_caseId",
                        "nameLocation": "10577:7:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4058,
                        "src": "10569:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3550,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10569:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10568:17:21"
                  },
                  "returnParameters": {
                    "id": 3555,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10608:0:21"
                  },
                  "scope": 4966,
                  "src": "10545:6148:21",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4268,
                    "nodeType": "Block",
                    "src": "16774:2103:21",
                    "statements": [
                      {
                        "assignments": [
                          4067
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4067,
                            "mutability": "mutable",
                            "name": "currentCase",
                            "nameLocation": "16797:11:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4268,
                            "src": "16784:24:21",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                              "typeString": "struct DeciCourt.Case"
                            },
                            "typeName": {
                              "id": 4066,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 4065,
                                "name": "Case",
                                "nameLocations": [
                                  "16784:4:21"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2837,
                                "src": "16784:4:21"
                              },
                              "referencedDeclaration": 2837,
                              "src": "16784:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4071,
                        "initialValue": {
                          "baseExpression": {
                            "id": 4068,
                            "name": "cases",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2880,
                            "src": "16811:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Case_$2837_storage_$",
                              "typeString": "mapping(uint256 => struct DeciCourt.Case storage ref)"
                            }
                          },
                          "id": 4070,
                          "indexExpression": {
                            "id": 4069,
                            "name": "_caseId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4060,
                            "src": "16817:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16811:14:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Case_$2837_storage",
                            "typeString": "struct DeciCourt.Case storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16784:41:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_CaseStatus_$2785",
                                "typeString": "enum DeciCourt.CaseStatus"
                              },
                              "id": 4077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 4073,
                                  "name": "currentCase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4067,
                                  "src": "16843:11:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                    "typeString": "struct DeciCourt.Case storage pointer"
                                  }
                                },
                                "id": 4074,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "16855:6:21",
                                "memberName": "status",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2800,
                                "src": "16843:18:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_CaseStatus_$2785",
                                  "typeString": "enum DeciCourt.CaseStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 4075,
                                  "name": "CaseStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2785,
                                  "src": "16865:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_CaseStatus_$2785_$",
                                    "typeString": "type(enum DeciCourt.CaseStatus)"
                                  }
                                },
                                "id": 4076,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "16876:8:21",
                                "memberName": "Resolved",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2782,
                                "src": "16865:19:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_CaseStatus_$2785",
                                  "typeString": "enum DeciCourt.CaseStatus"
                                }
                              },
                              "src": "16843:41:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43617365206e6f74207265736f6c76656420796574",
                              "id": 4078,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16886:23:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_852f25c7afa998ff923b3065a3b17e9285969116acf0d44631583d7297692a9a",
                                "typeString": "literal_string \"Case not resolved yet\""
                              },
                              "value": "Case not resolved yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_852f25c7afa998ff923b3065a3b17e9285969116acf0d44631583d7297692a9a",
                                "typeString": "literal_string \"Case not resolved yet\""
                              }
                            ],
                            "id": 4072,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16835:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16835:75:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4080,
                        "nodeType": "ExpressionStatement",
                        "src": "16835:75:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 4082,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "16928:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 4083,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "16934:9:21",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "16928:15:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 4084,
                                  "name": "currentCase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4067,
                                  "src": "16947:11:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                    "typeString": "struct DeciCourt.Case storage pointer"
                                  }
                                },
                                "id": 4085,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "16959:14:21",
                                "memberName": "appealDeadline",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2832,
                                "src": "16947:26:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "16928:45:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "41707065616c20646561646c696e6520706173736564",
                              "id": 4087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16975:24:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0ed0a119c2d911527380483fc62905cf3f1fa7858804b4b91f6f937930bedcf7",
                                "typeString": "literal_string \"Appeal deadline passed\""
                              },
                              "value": "Appeal deadline passed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0ed0a119c2d911527380483fc62905cf3f1fa7858804b4b91f6f937930bedcf7",
                                "typeString": "literal_string \"Appeal deadline passed\""
                              }
                            ],
                            "id": 4081,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16920:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16920:80:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4089,
                        "nodeType": "ExpressionStatement",
                        "src": "16920:80:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "17018:23:21",
                              "subExpression": {
                                "expression": {
                                  "id": 4091,
                                  "name": "currentCase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4067,
                                  "src": "17019:11:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                    "typeString": "struct DeciCourt.Case storage pointer"
                                  }
                                },
                                "id": 4092,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "17031:10:21",
                                "memberName": "isAppealed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2834,
                                "src": "17019:22:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4361736520616c72656164792061707065616c6564",
                              "id": 4094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17043:23:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7deb80376a45adf409c043591d0089525a7628e9e25a7fa22a62accf732ab405",
                                "typeString": "literal_string \"Case already appealed\""
                              },
                              "value": "Case already appealed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7deb80376a45adf409c043591d0089525a7628e9e25a7fa22a62accf732ab405",
                                "typeString": "literal_string \"Case already appealed\""
                              }
                            ],
                            "id": 4090,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "17010:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17010:57:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4096,
                        "nodeType": "ExpressionStatement",
                        "src": "17010:57:21"
                      },
                      {
                        "assignments": [
                          4098
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4098,
                            "mutability": "mutable",
                            "name": "loser",
                            "nameLocation": "17133:5:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4268,
                            "src": "17125:13:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 4097,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17125:7:21",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4110,
                        "initialValue": {
                          "condition": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 4103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 4099,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4067,
                                    "src": "17142:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 4100,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "17154:6:21",
                                  "memberName": "winner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2826,
                                  "src": "17142:18:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 4101,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4067,
                                    "src": "17164:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 4102,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "17176:9:21",
                                  "memberName": "plaintiff",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2793,
                                  "src": "17164:21:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "17142:43:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 4104,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "17141:45:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "expression": {
                              "id": 4107,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4067,
                              "src": "17213:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 4108,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17225:9:21",
                            "memberName": "plaintiff",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2793,
                            "src": "17213:21:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 4109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "17141:93:21",
                          "trueExpression": {
                            "expression": {
                              "id": 4105,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4067,
                              "src": "17189:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 4106,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17201:9:21",
                            "memberName": "defendant",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2795,
                            "src": "17189:21:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17125:109:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 4115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 4112,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "17252:3:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 4113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "17256:6:21",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "17252:10:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 4114,
                                "name": "loser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4098,
                                "src": "17266:5:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "17252:19:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c79206c6f73696e672070617274792063616e2061707065616c",
                              "id": 4116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17273:30:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_177a4072c9b41af62c02482d971b982516602f805ca0528aa2af9b4971462d69",
                                "typeString": "literal_string \"Only losing party can appeal\""
                              },
                              "value": "Only losing party can appeal"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_177a4072c9b41af62c02482d971b982516602f805ca0528aa2af9b4971462d69",
                                "typeString": "literal_string \"Only losing party can appeal\""
                              }
                            ],
                            "id": 4111,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "17244:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17244:60:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4118,
                        "nodeType": "ExpressionStatement",
                        "src": "17244:60:21"
                      },
                      {
                        "assignments": [
                          4120
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4120,
                            "mutability": "mutable",
                            "name": "requiredDeposit",
                            "nameLocation": "17361:15:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4268,
                            "src": "17353:23:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4119,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "17353:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4125,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 4121,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4067,
                              "src": "17379:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 4122,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17391:9:21",
                            "memberName": "filingFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2802,
                            "src": "17379:21:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 4123,
                            "name": "appealDepositMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2869,
                            "src": "17403:23:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17379:47:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17353:73:21"
                      },
                      {
                        "assignments": [
                          4127
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4127,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "17480:7:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4268,
                            "src": "17475:12:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 4126,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "17475:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4138,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4130,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "17513:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17517:6:21",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "17513:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 4134,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "17533:4:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DeciCourt_$4966",
                                    "typeString": "contract DeciCourt"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_DeciCourt_$4966",
                                    "typeString": "contract DeciCourt"
                                  }
                                ],
                                "id": 4133,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17525:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4132,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17525:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17525:13:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4136,
                              "name": "requiredDeposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4120,
                              "src": "17540:15:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4128,
                              "name": "juryToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2855,
                              "src": "17490:9:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 4129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17500:12:21",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 876,
                            "src": "17490:22:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 4137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17490:66:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17475:81:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4140,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4127,
                              "src": "17574:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "41707065616c206465706f736974207472616e73666572206661696c6564",
                              "id": 4141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17583:32:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bb123ca211b29a4f9f4a31e7e510ac692a2a40951ced764c96e2c763f1cf0a47",
                                "typeString": "literal_string \"Appeal deposit transfer failed\""
                              },
                              "value": "Appeal deposit transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bb123ca211b29a4f9f4a31e7e510ac692a2a40951ced764c96e2c763f1cf0a47",
                                "typeString": "literal_string \"Appeal deposit transfer failed\""
                              }
                            ],
                            "id": 4139,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "17566:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17566:50:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4143,
                        "nodeType": "ExpressionStatement",
                        "src": "17566:50:21"
                      },
                      {
                        "expression": {
                          "id": 4149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 4144,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4067,
                              "src": "17665:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 4146,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "17677:9:21",
                            "memberName": "appellant",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2828,
                            "src": "17665:21:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 4147,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "17689:3:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17693:6:21",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "17689:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17665:34:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4150,
                        "nodeType": "ExpressionStatement",
                        "src": "17665:34:21"
                      },
                      {
                        "expression": {
                          "id": 4155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 4151,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4067,
                              "src": "17709:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 4153,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "17721:13:21",
                            "memberName": "appealDeposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2830,
                            "src": "17709:25:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4154,
                            "name": "requiredDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4120,
                            "src": "17737:15:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17709:43:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4156,
                        "nodeType": "ExpressionStatement",
                        "src": "17709:43:21"
                      },
                      {
                        "expression": {
                          "id": 4161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 4157,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4067,
                              "src": "17762:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 4159,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "17774:10:21",
                            "memberName": "isAppealed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2834,
                            "src": "17762:22:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 4160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17787:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "17762:29:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4162,
                        "nodeType": "ExpressionStatement",
                        "src": "17762:29:21"
                      },
                      {
                        "expression": {
                          "id": 4168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 4163,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4067,
                              "src": "17801:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 4165,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "17813:6:21",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2800,
                            "src": "17801:18:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CaseStatus_$2785",
                              "typeString": "enum DeciCourt.CaseStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 4166,
                              "name": "CaseStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2785,
                              "src": "17822:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CaseStatus_$2785_$",
                                "typeString": "type(enum DeciCourt.CaseStatus)"
                              }
                            },
                            "id": 4167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "17833:9:21",
                            "memberName": "Appealing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2783,
                            "src": "17822:20:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CaseStatus_$2785",
                              "typeString": "enum DeciCourt.CaseStatus"
                            }
                          },
                          "src": "17801:41:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CaseStatus_$2785",
                            "typeString": "enum DeciCourt.CaseStatus"
                          }
                        },
                        "id": 4169,
                        "nodeType": "ExpressionStatement",
                        "src": "17801:41:21"
                      },
                      {
                        "expression": {
                          "id": 4174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 4170,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4067,
                              "src": "17852:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 4172,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "17864:14:21",
                            "memberName": "appealJurySize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2836,
                            "src": "17852:26:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4173,
                            "name": "appealJurySize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2873,
                            "src": "17881:14:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17852:43:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4175,
                        "nodeType": "ExpressionStatement",
                        "src": "17852:43:21"
                      },
                      {
                        "expression": {
                          "id": 4180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 4176,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4067,
                              "src": "17950:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 4178,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "17962:18:21",
                            "memberName": "plaintiffVoteCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2816,
                            "src": "17950:30:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 4179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17983:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "17950:34:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4181,
                        "nodeType": "ExpressionStatement",
                        "src": "17950:34:21"
                      },
                      {
                        "expression": {
                          "id": 4186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 4182,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4067,
                              "src": "17994:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 4184,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "18006:18:21",
                            "memberName": "defendantVoteCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2818,
                            "src": "17994:30:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 4185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18027:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "17994:34:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4187,
                        "nodeType": "ExpressionStatement",
                        "src": "17994:34:21"
                      },
                      {
                        "body": {
                          "id": 4226,
                          "nodeType": "Block",
                          "src": "18142:234:21",
                          "statements": [
                            {
                              "assignments": [
                                4201
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 4201,
                                  "mutability": "mutable",
                                  "name": "jurorAddr",
                                  "nameLocation": "18164:9:21",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 4226,
                                  "src": "18156:17:21",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 4200,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18156:7:21",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 4206,
                              "initialValue": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 4202,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4067,
                                    "src": "18176:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 4203,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "18188:6:21",
                                  "memberName": "jurors",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2805,
                                  "src": "18176:18:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 4205,
                                "indexExpression": {
                                  "id": 4204,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4189,
                                  "src": "18195:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "18176:21:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "18156:41:21"
                            },
                            {
                              "expression": {
                                "id": 4211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "18211:44:21",
                                "subExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 4207,
                                      "name": "currentCase",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4067,
                                      "src": "18218:11:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                        "typeString": "struct DeciCourt.Case storage pointer"
                                      }
                                    },
                                    "id": 4208,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "18230:14:21",
                                    "memberName": "committedVotes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2809,
                                    "src": "18218:26:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                                      "typeString": "mapping(address => bytes32)"
                                    }
                                  },
                                  "id": 4210,
                                  "indexExpression": {
                                    "id": 4209,
                                    "name": "jurorAddr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4201,
                                    "src": "18245:9:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "18218:37:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4212,
                              "nodeType": "ExpressionStatement",
                              "src": "18211:44:21"
                            },
                            {
                              "expression": {
                                "id": 4217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "delete",
                                "prefix": true,
                                "src": "18269:43:21",
                                "subExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 4213,
                                      "name": "currentCase",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4067,
                                      "src": "18276:11:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                        "typeString": "struct DeciCourt.Case storage pointer"
                                      }
                                    },
                                    "id": 4214,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "18288:13:21",
                                    "memberName": "revealedVotes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2814,
                                    "src": "18276:25:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_enum$_VoteOption_$2789_$",
                                      "typeString": "mapping(address => enum DeciCourt.VoteOption)"
                                    }
                                  },
                                  "id": 4216,
                                  "indexExpression": {
                                    "id": 4215,
                                    "name": "jurorAddr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4201,
                                    "src": "18302:9:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "18276:36:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_VoteOption_$2789",
                                    "typeString": "enum DeciCourt.VoteOption"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4218,
                              "nodeType": "ExpressionStatement",
                              "src": "18269:43:21"
                            },
                            {
                              "expression": {
                                "id": 4224,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 4219,
                                      "name": "jurorsInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2892,
                                      "src": "18326:10:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_JurorInfo_$2852_storage_$",
                                        "typeString": "mapping(address => struct DeciCourt.JurorInfo storage ref)"
                                      }
                                    },
                                    "id": 4221,
                                    "indexExpression": {
                                      "id": 4220,
                                      "name": "jurorAddr",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4201,
                                      "src": "18337:9:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18326:21:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_JurorInfo_$2852_storage",
                                      "typeString": "struct DeciCourt.JurorInfo storage ref"
                                    }
                                  },
                                  "id": 4222,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "18348:9:21",
                                  "memberName": "isServing",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2843,
                                  "src": "18326:31:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 4223,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18360:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "18326:39:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4225,
                              "nodeType": "ExpressionStatement",
                              "src": "18326:39:21"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4192,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4189,
                            "src": "18106:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 4193,
                                "name": "currentCase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4067,
                                "src": "18110:11:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 4194,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "18122:6:21",
                              "memberName": "jurors",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2805,
                              "src": "18110:18:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 4195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18129:6:21",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "18110:25:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18106:29:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4227,
                        "initializationExpression": {
                          "assignments": [
                            4189
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 4189,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "18099:1:21",
                              "nodeType": "VariableDeclaration",
                              "scope": 4227,
                              "src": "18094:6:21",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 4188,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "18094:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 4191,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 4190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18103:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "18094:10:21"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 4198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "18137:3:21",
                            "subExpression": {
                              "id": 4197,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4189,
                              "src": "18137:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4199,
                          "nodeType": "ExpressionStatement",
                          "src": "18137:3:21"
                        },
                        "nodeType": "ForStatement",
                        "src": "18089:287:21"
                      },
                      {
                        "expression": {
                          "id": 4230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "18427:25:21",
                          "subExpression": {
                            "expression": {
                              "id": 4228,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4067,
                              "src": "18434:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 4229,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "18446:6:21",
                            "memberName": "jurors",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2805,
                            "src": "18434:18:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4231,
                        "nodeType": "ExpressionStatement",
                        "src": "18427:25:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4233,
                              "name": "_caseId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4060,
                              "src": "18539:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4232,
                            "name": "_assignAppealJurors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4652,
                            "src": "18519:19:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 4234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18519:28:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4235,
                        "nodeType": "ExpressionStatement",
                        "src": "18519:28:21"
                      },
                      {
                        "expression": {
                          "id": 4243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 4236,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4067,
                              "src": "18602:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 4238,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "18614:14:21",
                            "memberName": "commitDeadline",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2822,
                            "src": "18602:26:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 4239,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "18631:5:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 4240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "18637:9:21",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "18631:15:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 4241,
                              "name": "commitDuration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2863,
                              "src": "18649:14:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "18631:32:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18602:61:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4244,
                        "nodeType": "ExpressionStatement",
                        "src": "18602:61:21"
                      },
                      {
                        "expression": {
                          "id": 4252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 4245,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4067,
                              "src": "18673:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 4247,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "18685:14:21",
                            "memberName": "revealDeadline",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2824,
                            "src": "18673:26:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 4248,
                                "name": "currentCase",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4067,
                                "src": "18702:11:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 4249,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "18714:14:21",
                              "memberName": "commitDeadline",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2822,
                              "src": "18702:26:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 4250,
                              "name": "revealDuration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2865,
                              "src": "18731:14:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "18702:43:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18673:72:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4253,
                        "nodeType": "ExpressionStatement",
                        "src": "18673:72:21"
                      },
                      {
                        "expression": {
                          "id": 4259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 4254,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4067,
                              "src": "18755:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 4256,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "18767:6:21",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2800,
                            "src": "18755:18:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CaseStatus_$2785",
                              "typeString": "enum DeciCourt.CaseStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 4257,
                              "name": "CaseStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2785,
                              "src": "18776:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CaseStatus_$2785_$",
                                "typeString": "type(enum DeciCourt.CaseStatus)"
                              }
                            },
                            "id": 4258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "18787:6:21",
                            "memberName": "Voting",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2780,
                            "src": "18776:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CaseStatus_$2785",
                              "typeString": "enum DeciCourt.CaseStatus"
                            }
                          },
                          "src": "18755:38:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CaseStatus_$2785",
                            "typeString": "enum DeciCourt.CaseStatus"
                          }
                        },
                        "id": 4260,
                        "nodeType": "ExpressionStatement",
                        "src": "18755:38:21"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 4262,
                              "name": "_caseId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4060,
                              "src": "18833:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 4263,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "18842:3:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "18846:6:21",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "18842:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4265,
                              "name": "requiredDeposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4120,
                              "src": "18854:15:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4261,
                            "name": "AppealInitiated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2750,
                            "src": "18817:15:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256)"
                            }
                          },
                          "id": 4266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18817:53:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4267,
                        "nodeType": "EmitStatement",
                        "src": "18812:58:21"
                      }
                    ]
                  },
                  "functionSelector": "7e69b7b0",
                  "id": 4269,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 4063,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4062,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "16761:12:21"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1154,
                        "src": "16761:12:21"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16761:12:21"
                    }
                  ],
                  "name": "appeal",
                  "nameLocation": "16728:6:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4061,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4060,
                        "mutability": "mutable",
                        "name": "_caseId",
                        "nameLocation": "16743:7:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4269,
                        "src": "16735:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4059,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16735:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16734:17:21"
                  },
                  "returnParameters": {
                    "id": 4064,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16774:0:21"
                  },
                  "scope": 4966,
                  "src": "16719:2158:21",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4453,
                    "nodeType": "Block",
                    "src": "19041:1764:21",
                    "statements": [
                      {
                        "assignments": [
                          4277
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4277,
                            "mutability": "mutable",
                            "name": "currentCase",
                            "nameLocation": "19064:11:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4453,
                            "src": "19051:24:21",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                              "typeString": "struct DeciCourt.Case"
                            },
                            "typeName": {
                              "id": 4276,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 4275,
                                "name": "Case",
                                "nameLocations": [
                                  "19051:4:21"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2837,
                                "src": "19051:4:21"
                              },
                              "referencedDeclaration": 2837,
                              "src": "19051:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4281,
                        "initialValue": {
                          "baseExpression": {
                            "id": 4278,
                            "name": "cases",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2880,
                            "src": "19078:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Case_$2837_storage_$",
                              "typeString": "mapping(uint256 => struct DeciCourt.Case storage ref)"
                            }
                          },
                          "id": 4280,
                          "indexExpression": {
                            "id": 4279,
                            "name": "_caseId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4272,
                            "src": "19084:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19078:14:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Case_$2837_storage",
                            "typeString": "struct DeciCourt.Case storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19051:41:21"
                      },
                      {
                        "assignments": [
                          4283
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4283,
                            "mutability": "mutable",
                            "name": "poolSize",
                            "nameLocation": "19110:8:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4453,
                            "src": "19102:16:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4282,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19102:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4286,
                        "initialValue": {
                          "expression": {
                            "id": 4284,
                            "name": "jurorPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2883,
                            "src": "19121:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 4285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19131:6:21",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "19121:16:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19102:35:21"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4287,
                            "name": "poolSize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4283,
                            "src": "19253:8:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 4288,
                            "name": "jurySize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2861,
                            "src": "19265:8:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19253:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4325,
                        "nodeType": "IfStatement",
                        "src": "19249:267:21",
                        "trueBody": {
                          "id": 4324,
                          "nodeType": "Block",
                          "src": "19275:241:21",
                          "statements": [
                            {
                              "body": {
                                "id": 4321,
                                "nodeType": "Block",
                                "src": "19325:161:21",
                                "statements": [
                                  {
                                    "assignments": [
                                      4301
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 4301,
                                        "mutability": "mutable",
                                        "name": "juror",
                                        "nameLocation": "19351:5:21",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 4321,
                                        "src": "19343:13:21",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "typeName": {
                                          "id": 4300,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "19343:7:21",
                                          "stateMutability": "nonpayable",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 4305,
                                    "initialValue": {
                                      "baseExpression": {
                                        "id": 4302,
                                        "name": "jurorPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2883,
                                        "src": "19359:9:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 4304,
                                      "indexExpression": {
                                        "id": 4303,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4291,
                                        "src": "19369:1:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "19359:12:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "19343:28:21"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 4311,
                                          "name": "juror",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4301,
                                          "src": "19413:5:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "expression": {
                                            "id": 4306,
                                            "name": "currentCase",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4277,
                                            "src": "19389:11:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                              "typeString": "struct DeciCourt.Case storage pointer"
                                            }
                                          },
                                          "id": 4309,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "19401:6:21",
                                          "memberName": "jurors",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2805,
                                          "src": "19389:18:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 4310,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "19408:4:21",
                                        "memberName": "push",
                                        "nodeType": "MemberAccess",
                                        "src": "19389:23:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                          "typeString": "function (address[] storage pointer,address)"
                                        }
                                      },
                                      "id": 4312,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "19389:30:21",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 4313,
                                    "nodeType": "ExpressionStatement",
                                    "src": "19389:30:21"
                                  },
                                  {
                                    "expression": {
                                      "id": 4319,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 4314,
                                            "name": "jurorsInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2892,
                                            "src": "19437:10:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_JurorInfo_$2852_storage_$",
                                              "typeString": "mapping(address => struct DeciCourt.JurorInfo storage ref)"
                                            }
                                          },
                                          "id": 4316,
                                          "indexExpression": {
                                            "id": 4315,
                                            "name": "juror",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4301,
                                            "src": "19448:5:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "19437:17:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_JurorInfo_$2852_storage",
                                            "typeString": "struct DeciCourt.JurorInfo storage ref"
                                          }
                                        },
                                        "id": 4317,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "19455:9:21",
                                        "memberName": "isServing",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2843,
                                        "src": "19437:27:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 4318,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "19467:4:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "19437:34:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 4320,
                                    "nodeType": "ExpressionStatement",
                                    "src": "19437:34:21"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4294,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4291,
                                  "src": "19306:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 4295,
                                  "name": "poolSize",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4283,
                                  "src": "19310:8:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19306:12:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4322,
                              "initializationExpression": {
                                "assignments": [
                                  4291
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 4291,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "19299:1:21",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 4322,
                                    "src": "19294:6:21",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 4290,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "19294:4:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 4293,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 4292,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19303:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "19294:10:21"
                              },
                              "isSimpleCounterLoop": true,
                              "loopExpression": {
                                "expression": {
                                  "id": 4298,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "19320:3:21",
                                  "subExpression": {
                                    "id": 4297,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4291,
                                    "src": "19320:1:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4299,
                                "nodeType": "ExpressionStatement",
                                "src": "19320:3:21"
                              },
                              "nodeType": "ForStatement",
                              "src": "19289:197:21"
                            },
                            {
                              "functionReturnParameters": 4274,
                              "id": 4323,
                              "nodeType": "Return",
                              "src": "19499:7:21"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          4327
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4327,
                            "mutability": "mutable",
                            "name": "seed",
                            "nameLocation": "19611:4:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4453,
                            "src": "19603:12:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4326,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19603:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4341,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 4333,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "19653:5:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 4334,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "19659:9:21",
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "19653:15:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 4335,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "19670:5:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 4336,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "19676:10:21",
                                      "memberName": "prevrandao",
                                      "nodeType": "MemberAccess",
                                      "src": "19670:16:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 4337,
                                      "name": "_caseId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4272,
                                      "src": "19688:7:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 4331,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "19636:3:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 4332,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "19640:12:21",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "19636:16:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 4338,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "19636:60:21",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 4330,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "19626:9:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 4339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19626:71:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 4329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19618:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 4328,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19618:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19618:80:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19603:95:21"
                      },
                      {
                        "assignments": [
                          4346
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4346,
                            "mutability": "mutable",
                            "name": "selected",
                            "nameLocation": "19791:8:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4453,
                            "src": "19777:22:21",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                              "typeString": "bool[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 4344,
                                "name": "bool",
                                "nodeType": "ElementaryTypeName",
                                "src": "19777:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4345,
                              "nodeType": "ArrayTypeName",
                              "src": "19777:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                                "typeString": "bool[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4352,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 4350,
                              "name": "poolSize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4283,
                              "src": "19813:8:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "19802:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bool[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 4347,
                                "name": "bool",
                                "nodeType": "ElementaryTypeName",
                                "src": "19806:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4348,
                              "nodeType": "ArrayTypeName",
                              "src": "19806:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                                "typeString": "bool[]"
                              }
                            }
                          },
                          "id": 4351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19802:20:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                            "typeString": "bool[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19777:45:21"
                      },
                      {
                        "assignments": [
                          4354
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4354,
                            "mutability": "mutable",
                            "name": "selectedCount",
                            "nameLocation": "19840:13:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4453,
                            "src": "19832:21:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4353,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19832:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4356,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 4355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19856:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19832:25:21"
                      },
                      {
                        "body": {
                          "id": 4442,
                          "nodeType": "Block",
                          "src": "19943:757:21",
                          "statements": [
                            {
                              "assignments": [
                                4372
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 4372,
                                  "mutability": "mutable",
                                  "name": "attempts",
                                  "nameLocation": "19965:8:21",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 4442,
                                  "src": "19957:16:21",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 4371,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19957:7:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 4374,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 4373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19976:1:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "19957:20:21"
                            },
                            {
                              "assignments": [
                                4376
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 4376,
                                  "mutability": "mutable",
                                  "name": "randomIndex",
                                  "nameLocation": "19999:11:21",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 4442,
                                  "src": "19991:19:21",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 4375,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19991:7:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 4377,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "19991:19:21"
                            },
                            {
                              "body": {
                                "id": 4397,
                                "nodeType": "Block",
                                "src": "20112:141:21",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 4392,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 4378,
                                        "name": "randomIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4376,
                                        "src": "20130:11:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 4391,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "id": 4384,
                                                      "name": "seed",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4327,
                                                      "src": "20179:4:21",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    {
                                                      "id": 4385,
                                                      "name": "i",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4358,
                                                      "src": "20185:1:21",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    {
                                                      "id": 4386,
                                                      "name": "attempts",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4372,
                                                      "src": "20188:8:21",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "id": 4382,
                                                      "name": "abi",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": -1,
                                                      "src": "20162:3:21",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_abi",
                                                        "typeString": "abi"
                                                      }
                                                    },
                                                    "id": 4383,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberLocation": "20166:12:21",
                                                    "memberName": "encodePacked",
                                                    "nodeType": "MemberAccess",
                                                    "src": "20162:16:21",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                      "typeString": "function () pure returns (bytes memory)"
                                                    }
                                                  },
                                                  "id": 4387,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "nameLocations": [],
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "20162:35:21",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                  }
                                                ],
                                                "id": 4381,
                                                "name": "keccak256",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -8,
                                                "src": "20152:9:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                                }
                                              },
                                              "id": 4388,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "20152:46:21",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            ],
                                            "id": 4380,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "20144:7:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint256_$",
                                              "typeString": "type(uint256)"
                                            },
                                            "typeName": {
                                              "id": 4379,
                                              "name": "uint256",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "20144:7:21",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 4389,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "20144:55:21",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "%",
                                        "rightExpression": {
                                          "id": 4390,
                                          "name": "poolSize",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4283,
                                          "src": "20202:8:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "20144:66:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "20130:80:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4393,
                                    "nodeType": "ExpressionStatement",
                                    "src": "20130:80:21"
                                  },
                                  {
                                    "expression": {
                                      "id": 4395,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "20228:10:21",
                                      "subExpression": {
                                        "id": 4394,
                                        "name": "attempts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4372,
                                        "src": "20228:8:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4396,
                                    "nodeType": "ExpressionStatement",
                                    "src": "20228:10:21"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 4404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 4398,
                                    "name": "selected",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4346,
                                    "src": "20261:8:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 4400,
                                  "indexExpression": {
                                    "id": 4399,
                                    "name": "randomIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4376,
                                    "src": "20270:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "20261:21:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4403,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 4401,
                                    "name": "attempts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4372,
                                    "src": "20286:8:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "id": 4402,
                                    "name": "poolSize",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4283,
                                    "src": "20297:8:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "20286:19:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "20261:44:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4405,
                              "nodeType": "DoWhileStatement",
                              "src": "20109:198:21"
                            },
                            {
                              "condition": {
                                "id": 4409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "20392:22:21",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 4406,
                                    "name": "selected",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4346,
                                    "src": "20393:8:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 4408,
                                  "indexExpression": {
                                    "id": 4407,
                                    "name": "randomIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4376,
                                    "src": "20402:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "20393:21:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4441,
                              "nodeType": "IfStatement",
                              "src": "20388:302:21",
                              "trueBody": {
                                "id": 4440,
                                "nodeType": "Block",
                                "src": "20416:274:21",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 4414,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 4410,
                                          "name": "selected",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4346,
                                          "src": "20434:8:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                            "typeString": "bool[] memory"
                                          }
                                        },
                                        "id": 4412,
                                        "indexExpression": {
                                          "id": 4411,
                                          "name": "randomIndex",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4376,
                                          "src": "20443:11:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "20434:21:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 4413,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "20458:4:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "20434:28:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 4415,
                                    "nodeType": "ExpressionStatement",
                                    "src": "20434:28:21"
                                  },
                                  {
                                    "assignments": [
                                      4417
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 4417,
                                        "mutability": "mutable",
                                        "name": "selectedJuror",
                                        "nameLocation": "20488:13:21",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 4440,
                                        "src": "20480:21:21",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "typeName": {
                                          "id": 4416,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "20480:7:21",
                                          "stateMutability": "nonpayable",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 4421,
                                    "initialValue": {
                                      "baseExpression": {
                                        "id": 4418,
                                        "name": "jurorPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2883,
                                        "src": "20504:9:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 4420,
                                      "indexExpression": {
                                        "id": 4419,
                                        "name": "randomIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4376,
                                        "src": "20514:11:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "20504:22:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "20480:46:21"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 4427,
                                          "name": "selectedJuror",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4417,
                                          "src": "20568:13:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "expression": {
                                            "id": 4422,
                                            "name": "currentCase",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4277,
                                            "src": "20544:11:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                              "typeString": "struct DeciCourt.Case storage pointer"
                                            }
                                          },
                                          "id": 4425,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "20556:6:21",
                                          "memberName": "jurors",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2805,
                                          "src": "20544:18:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 4426,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "20563:4:21",
                                        "memberName": "push",
                                        "nodeType": "MemberAccess",
                                        "src": "20544:23:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                          "typeString": "function (address[] storage pointer,address)"
                                        }
                                      },
                                      "id": 4428,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "20544:38:21",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 4429,
                                    "nodeType": "ExpressionStatement",
                                    "src": "20544:38:21"
                                  },
                                  {
                                    "expression": {
                                      "id": 4435,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 4430,
                                            "name": "jurorsInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2892,
                                            "src": "20600:10:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_JurorInfo_$2852_storage_$",
                                              "typeString": "mapping(address => struct DeciCourt.JurorInfo storage ref)"
                                            }
                                          },
                                          "id": 4432,
                                          "indexExpression": {
                                            "id": 4431,
                                            "name": "selectedJuror",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4417,
                                            "src": "20611:13:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "20600:25:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_JurorInfo_$2852_storage",
                                            "typeString": "struct DeciCourt.JurorInfo storage ref"
                                          }
                                        },
                                        "id": 4433,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "20626:9:21",
                                        "memberName": "isServing",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2843,
                                        "src": "20600:35:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 4434,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "20638:4:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "20600:42:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 4436,
                                    "nodeType": "ExpressionStatement",
                                    "src": "20600:42:21"
                                  },
                                  {
                                    "expression": {
                                      "id": 4438,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "20660:15:21",
                                      "subExpression": {
                                        "id": 4437,
                                        "name": "selectedCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4354,
                                        "src": "20660:13:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4439,
                                    "nodeType": "ExpressionStatement",
                                    "src": "20660:15:21"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 4367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4361,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4358,
                              "src": "19896:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 4362,
                              "name": "jurySize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2861,
                              "src": "19900:8:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "19896:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4364,
                              "name": "selectedCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4354,
                              "src": "19912:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 4365,
                              "name": "poolSize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4283,
                              "src": "19928:8:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "19912:24:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "19896:40:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4443,
                        "initializationExpression": {
                          "assignments": [
                            4358
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 4358,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "19889:1:21",
                              "nodeType": "VariableDeclaration",
                              "scope": 4443,
                              "src": "19881:9:21",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 4357,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "19881:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 4360,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 4359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19893:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "19881:13:21"
                        },
                        "isSimpleCounterLoop": false,
                        "loopExpression": {
                          "expression": {
                            "id": 4369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "19938:3:21",
                            "subExpression": {
                              "id": 4368,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4358,
                              "src": "19938:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4370,
                          "nodeType": "ExpressionStatement",
                          "src": "19938:3:21"
                        },
                        "nodeType": "ForStatement",
                        "src": "19876:824:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 4445,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4277,
                                    "src": "20726:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 4446,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "20738:6:21",
                                  "memberName": "jurors",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2805,
                                  "src": "20726:18:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 4447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "20745:6:21",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "20726:25:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 4448,
                                "name": "jurySize",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2861,
                                "src": "20755:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "20726:37:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2061737369676e20656e6f756768206a75726f7273",
                              "id": 4450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20765:32:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_292aa42c4b138cdf69cf6b00008cb9e1e714eeb68d0851f98cb1a85f8eef2ac9",
                                "typeString": "literal_string \"Failed to assign enough jurors\""
                              },
                              "value": "Failed to assign enough jurors"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_292aa42c4b138cdf69cf6b00008cb9e1e714eeb68d0851f98cb1a85f8eef2ac9",
                                "typeString": "literal_string \"Failed to assign enough jurors\""
                              }
                            ],
                            "id": 4444,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "20718:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20718:80:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4452,
                        "nodeType": "ExpressionStatement",
                        "src": "20718:80:21"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4270,
                    "nodeType": "StructuredDocumentation",
                    "src": "18924:63:21",
                    "text": " @dev 内部函数：为案件分配陪审员"
                  },
                  "id": 4454,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_assignJurors",
                  "nameLocation": "19001:13:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4273,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4272,
                        "mutability": "mutable",
                        "name": "_caseId",
                        "nameLocation": "19023:7:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4454,
                        "src": "19015:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4271,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19015:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19014:17:21"
                  },
                  "returnParameters": {
                    "id": 4274,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19041:0:21"
                  },
                  "scope": 4966,
                  "src": "18992:1813:21",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4651,
                    "nodeType": "Block",
                    "src": "20959:1956:21",
                    "statements": [
                      {
                        "assignments": [
                          4462
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4462,
                            "mutability": "mutable",
                            "name": "currentCase",
                            "nameLocation": "20982:11:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4651,
                            "src": "20969:24:21",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                              "typeString": "struct DeciCourt.Case"
                            },
                            "typeName": {
                              "id": 4461,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 4460,
                                "name": "Case",
                                "nameLocations": [
                                  "20969:4:21"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2837,
                                "src": "20969:4:21"
                              },
                              "referencedDeclaration": 2837,
                              "src": "20969:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4466,
                        "initialValue": {
                          "baseExpression": {
                            "id": 4463,
                            "name": "cases",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2880,
                            "src": "20996:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Case_$2837_storage_$",
                              "typeString": "mapping(uint256 => struct DeciCourt.Case storage ref)"
                            }
                          },
                          "id": 4465,
                          "indexExpression": {
                            "id": 4464,
                            "name": "_caseId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4457,
                            "src": "21002:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20996:14:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Case_$2837_storage",
                            "typeString": "struct DeciCourt.Case storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20969:41:21"
                      },
                      {
                        "assignments": [
                          4468
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4468,
                            "mutability": "mutable",
                            "name": "poolSize",
                            "nameLocation": "21028:8:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4651,
                            "src": "21020:16:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4467,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "21020:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4471,
                        "initialValue": {
                          "expression": {
                            "id": 4469,
                            "name": "jurorPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2883,
                            "src": "21039:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 4470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21049:6:21",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "21039:16:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21020:35:21"
                      },
                      {
                        "assignments": [
                          4473
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4473,
                            "mutability": "mutable",
                            "name": "requiredJurors",
                            "nameLocation": "21073:14:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4651,
                            "src": "21065:22:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4472,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "21065:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4476,
                        "initialValue": {
                          "expression": {
                            "id": 4474,
                            "name": "currentCase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4462,
                            "src": "21090:11:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                              "typeString": "struct DeciCourt.Case storage pointer"
                            }
                          },
                          "id": 4475,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21102:14:21",
                          "memberName": "appealJurySize",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2836,
                          "src": "21090:26:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21065:51:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4478,
                                "name": "poolSize",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4468,
                                "src": "21143:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 4479,
                                "name": "requiredJurors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4473,
                                "src": "21155:14:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "21143:26:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420656e6f75676820617661696c61626c65206a75726f727320666f722061707065616c",
                              "id": 4481,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21171:40:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_acbd82aa316e217f583652e6df3ec7d94376c93e3c10b56213e4579967d35ad0",
                                "typeString": "literal_string \"Not enough available jurors for appeal\""
                              },
                              "value": "Not enough available jurors for appeal"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_acbd82aa316e217f583652e6df3ec7d94376c93e3c10b56213e4579967d35ad0",
                                "typeString": "literal_string \"Not enough available jurors for appeal\""
                              }
                            ],
                            "id": 4477,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "21135:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21135:77:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4483,
                        "nodeType": "ExpressionStatement",
                        "src": "21135:77:21"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4484,
                            "name": "poolSize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4468,
                            "src": "21328:8:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 4485,
                            "name": "requiredJurors",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4473,
                            "src": "21340:14:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21328:26:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4522,
                        "nodeType": "IfStatement",
                        "src": "21324:273:21",
                        "trueBody": {
                          "id": 4521,
                          "nodeType": "Block",
                          "src": "21356:241:21",
                          "statements": [
                            {
                              "body": {
                                "id": 4518,
                                "nodeType": "Block",
                                "src": "21406:161:21",
                                "statements": [
                                  {
                                    "assignments": [
                                      4498
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 4498,
                                        "mutability": "mutable",
                                        "name": "juror",
                                        "nameLocation": "21432:5:21",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 4518,
                                        "src": "21424:13:21",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "typeName": {
                                          "id": 4497,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "21424:7:21",
                                          "stateMutability": "nonpayable",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 4502,
                                    "initialValue": {
                                      "baseExpression": {
                                        "id": 4499,
                                        "name": "jurorPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2883,
                                        "src": "21440:9:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 4501,
                                      "indexExpression": {
                                        "id": 4500,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4488,
                                        "src": "21450:1:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "21440:12:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "21424:28:21"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 4508,
                                          "name": "juror",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4498,
                                          "src": "21494:5:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "expression": {
                                            "id": 4503,
                                            "name": "currentCase",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4462,
                                            "src": "21470:11:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                              "typeString": "struct DeciCourt.Case storage pointer"
                                            }
                                          },
                                          "id": 4506,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "21482:6:21",
                                          "memberName": "jurors",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2805,
                                          "src": "21470:18:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 4507,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "21489:4:21",
                                        "memberName": "push",
                                        "nodeType": "MemberAccess",
                                        "src": "21470:23:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                          "typeString": "function (address[] storage pointer,address)"
                                        }
                                      },
                                      "id": 4509,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "21470:30:21",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 4510,
                                    "nodeType": "ExpressionStatement",
                                    "src": "21470:30:21"
                                  },
                                  {
                                    "expression": {
                                      "id": 4516,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 4511,
                                            "name": "jurorsInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2892,
                                            "src": "21518:10:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_JurorInfo_$2852_storage_$",
                                              "typeString": "mapping(address => struct DeciCourt.JurorInfo storage ref)"
                                            }
                                          },
                                          "id": 4513,
                                          "indexExpression": {
                                            "id": 4512,
                                            "name": "juror",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4498,
                                            "src": "21529:5:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "21518:17:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_JurorInfo_$2852_storage",
                                            "typeString": "struct DeciCourt.JurorInfo storage ref"
                                          }
                                        },
                                        "id": 4514,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "21536:9:21",
                                        "memberName": "isServing",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2843,
                                        "src": "21518:27:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 4515,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "21548:4:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "21518:34:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 4517,
                                    "nodeType": "ExpressionStatement",
                                    "src": "21518:34:21"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4491,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4488,
                                  "src": "21387:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 4492,
                                  "name": "poolSize",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4468,
                                  "src": "21391:8:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "21387:12:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4519,
                              "initializationExpression": {
                                "assignments": [
                                  4488
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 4488,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "21380:1:21",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 4519,
                                    "src": "21375:6:21",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 4487,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "21375:4:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 4490,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 4489,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21384:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "21375:10:21"
                              },
                              "isSimpleCounterLoop": true,
                              "loopExpression": {
                                "expression": {
                                  "id": 4495,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "21401:3:21",
                                  "subExpression": {
                                    "id": 4494,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4488,
                                    "src": "21401:1:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4496,
                                "nodeType": "ExpressionStatement",
                                "src": "21401:3:21"
                              },
                              "nodeType": "ForStatement",
                              "src": "21370:197:21"
                            },
                            {
                              "functionReturnParameters": 4459,
                              "id": 4520,
                              "nodeType": "Return",
                              "src": "21580:7:21"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          4524
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4524,
                            "mutability": "mutable",
                            "name": "seed",
                            "nameLocation": "21692:4:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4651,
                            "src": "21684:12:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4523,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "21684:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4539,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 4530,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "21734:5:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 4531,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "21740:9:21",
                                      "memberName": "timestamp",
                                      "nodeType": "MemberAccess",
                                      "src": "21734:15:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 4532,
                                        "name": "block",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -4,
                                        "src": "21751:5:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_block",
                                          "typeString": "block"
                                        }
                                      },
                                      "id": 4533,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "21757:10:21",
                                      "memberName": "prevrandao",
                                      "nodeType": "MemberAccess",
                                      "src": "21751:16:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 4534,
                                      "name": "_caseId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4457,
                                      "src": "21769:7:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "hexValue": "61707065616c",
                                      "id": 4535,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "21778:8:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_33917ea26411503971a9a2ffe585d90d96e3f94f0adb48983eac4322b8a6498a",
                                        "typeString": "literal_string \"appeal\""
                                      },
                                      "value": "appeal"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_stringliteral_33917ea26411503971a9a2ffe585d90d96e3f94f0adb48983eac4322b8a6498a",
                                        "typeString": "literal_string \"appeal\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 4528,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "21717:3:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 4529,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "21721:12:21",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "21717:16:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 4536,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "21717:70:21",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 4527,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "21707:9:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 4537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21707:81:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 4526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "21699:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 4525,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "21699:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21699:90:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21684:105:21"
                      },
                      {
                        "assignments": [
                          4544
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4544,
                            "mutability": "mutable",
                            "name": "selected",
                            "nameLocation": "21882:8:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4651,
                            "src": "21868:22:21",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                              "typeString": "bool[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 4542,
                                "name": "bool",
                                "nodeType": "ElementaryTypeName",
                                "src": "21868:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4543,
                              "nodeType": "ArrayTypeName",
                              "src": "21868:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                                "typeString": "bool[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4550,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 4548,
                              "name": "poolSize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4468,
                              "src": "21904:8:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "21893:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bool[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 4545,
                                "name": "bool",
                                "nodeType": "ElementaryTypeName",
                                "src": "21897:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4546,
                              "nodeType": "ArrayTypeName",
                              "src": "21897:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                                "typeString": "bool[]"
                              }
                            }
                          },
                          "id": 4549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21893:20:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                            "typeString": "bool[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21868:45:21"
                      },
                      {
                        "assignments": [
                          4552
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4552,
                            "mutability": "mutable",
                            "name": "selectedCount",
                            "nameLocation": "21931:13:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4651,
                            "src": "21923:21:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4551,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "21923:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4554,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 4553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21947:1:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21923:25:21"
                      },
                      {
                        "body": {
                          "id": 4640,
                          "nodeType": "Block",
                          "src": "22040:757:21",
                          "statements": [
                            {
                              "assignments": [
                                4570
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 4570,
                                  "mutability": "mutable",
                                  "name": "attempts",
                                  "nameLocation": "22062:8:21",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 4640,
                                  "src": "22054:16:21",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 4569,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22054:7:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 4572,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 4571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "22073:1:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "22054:20:21"
                            },
                            {
                              "assignments": [
                                4574
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 4574,
                                  "mutability": "mutable",
                                  "name": "randomIndex",
                                  "nameLocation": "22096:11:21",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 4640,
                                  "src": "22088:19:21",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 4573,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22088:7:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 4575,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "22088:19:21"
                            },
                            {
                              "body": {
                                "id": 4595,
                                "nodeType": "Block",
                                "src": "22209:141:21",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 4590,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 4576,
                                        "name": "randomIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4574,
                                        "src": "22227:11:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 4589,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "id": 4582,
                                                      "name": "seed",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4524,
                                                      "src": "22276:4:21",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    {
                                                      "id": 4583,
                                                      "name": "i",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4556,
                                                      "src": "22282:1:21",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    {
                                                      "id": 4584,
                                                      "name": "attempts",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4570,
                                                      "src": "22285:8:21",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "id": 4580,
                                                      "name": "abi",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": -1,
                                                      "src": "22259:3:21",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_abi",
                                                        "typeString": "abi"
                                                      }
                                                    },
                                                    "id": 4581,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "memberLocation": "22263:12:21",
                                                    "memberName": "encodePacked",
                                                    "nodeType": "MemberAccess",
                                                    "src": "22259:16:21",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                      "typeString": "function () pure returns (bytes memory)"
                                                    }
                                                  },
                                                  "id": 4585,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "nameLocations": [],
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "22259:35:21",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_bytes_memory_ptr",
                                                    "typeString": "bytes memory"
                                                  }
                                                ],
                                                "id": 4579,
                                                "name": "keccak256",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -8,
                                                "src": "22249:9:21",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                                }
                                              },
                                              "id": 4586,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "22249:46:21",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            ],
                                            "id": 4578,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "22241:7:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint256_$",
                                              "typeString": "type(uint256)"
                                            },
                                            "typeName": {
                                              "id": 4577,
                                              "name": "uint256",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "22241:7:21",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 4587,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "22241:55:21",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "%",
                                        "rightExpression": {
                                          "id": 4588,
                                          "name": "poolSize",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4468,
                                          "src": "22299:8:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "22241:66:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "22227:80:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4591,
                                    "nodeType": "ExpressionStatement",
                                    "src": "22227:80:21"
                                  },
                                  {
                                    "expression": {
                                      "id": 4593,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "22325:10:21",
                                      "subExpression": {
                                        "id": 4592,
                                        "name": "attempts",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4570,
                                        "src": "22325:8:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4594,
                                    "nodeType": "ExpressionStatement",
                                    "src": "22325:10:21"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 4602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 4596,
                                    "name": "selected",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4544,
                                    "src": "22358:8:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 4598,
                                  "indexExpression": {
                                    "id": 4597,
                                    "name": "randomIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4574,
                                    "src": "22367:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "22358:21:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4601,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 4599,
                                    "name": "attempts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4570,
                                    "src": "22383:8:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "id": 4600,
                                    "name": "poolSize",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4468,
                                    "src": "22394:8:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "22383:19:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "22358:44:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4603,
                              "nodeType": "DoWhileStatement",
                              "src": "22206:198:21"
                            },
                            {
                              "condition": {
                                "id": 4607,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "22489:22:21",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 4604,
                                    "name": "selected",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4544,
                                    "src": "22490:8:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                      "typeString": "bool[] memory"
                                    }
                                  },
                                  "id": 4606,
                                  "indexExpression": {
                                    "id": 4605,
                                    "name": "randomIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4574,
                                    "src": "22499:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "22490:21:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4639,
                              "nodeType": "IfStatement",
                              "src": "22485:302:21",
                              "trueBody": {
                                "id": 4638,
                                "nodeType": "Block",
                                "src": "22513:274:21",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 4612,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 4608,
                                          "name": "selected",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4544,
                                          "src": "22531:8:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                            "typeString": "bool[] memory"
                                          }
                                        },
                                        "id": 4610,
                                        "indexExpression": {
                                          "id": 4609,
                                          "name": "randomIndex",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4574,
                                          "src": "22540:11:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "22531:21:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 4611,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "22555:4:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "22531:28:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 4613,
                                    "nodeType": "ExpressionStatement",
                                    "src": "22531:28:21"
                                  },
                                  {
                                    "assignments": [
                                      4615
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 4615,
                                        "mutability": "mutable",
                                        "name": "selectedJuror",
                                        "nameLocation": "22585:13:21",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 4638,
                                        "src": "22577:21:21",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "typeName": {
                                          "id": 4614,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "22577:7:21",
                                          "stateMutability": "nonpayable",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 4619,
                                    "initialValue": {
                                      "baseExpression": {
                                        "id": 4616,
                                        "name": "jurorPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2883,
                                        "src": "22601:9:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 4618,
                                      "indexExpression": {
                                        "id": 4617,
                                        "name": "randomIndex",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4574,
                                        "src": "22611:11:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "22601:22:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "22577:46:21"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 4625,
                                          "name": "selectedJuror",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4615,
                                          "src": "22665:13:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "expression": {
                                            "id": 4620,
                                            "name": "currentCase",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4462,
                                            "src": "22641:11:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                              "typeString": "struct DeciCourt.Case storage pointer"
                                            }
                                          },
                                          "id": 4623,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "22653:6:21",
                                          "memberName": "jurors",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2805,
                                          "src": "22641:18:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 4624,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "22660:4:21",
                                        "memberName": "push",
                                        "nodeType": "MemberAccess",
                                        "src": "22641:23:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                          "typeString": "function (address[] storage pointer,address)"
                                        }
                                      },
                                      "id": 4626,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22641:38:21",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 4627,
                                    "nodeType": "ExpressionStatement",
                                    "src": "22641:38:21"
                                  },
                                  {
                                    "expression": {
                                      "id": 4633,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 4628,
                                            "name": "jurorsInfo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2892,
                                            "src": "22697:10:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_JurorInfo_$2852_storage_$",
                                              "typeString": "mapping(address => struct DeciCourt.JurorInfo storage ref)"
                                            }
                                          },
                                          "id": 4630,
                                          "indexExpression": {
                                            "id": 4629,
                                            "name": "selectedJuror",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4615,
                                            "src": "22708:13:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "22697:25:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_JurorInfo_$2852_storage",
                                            "typeString": "struct DeciCourt.JurorInfo storage ref"
                                          }
                                        },
                                        "id": 4631,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "22723:9:21",
                                        "memberName": "isServing",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2843,
                                        "src": "22697:35:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 4632,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "22735:4:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "22697:42:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 4634,
                                    "nodeType": "ExpressionStatement",
                                    "src": "22697:42:21"
                                  },
                                  {
                                    "expression": {
                                      "id": 4636,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "22757:15:21",
                                      "subExpression": {
                                        "id": 4635,
                                        "name": "selectedCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4552,
                                        "src": "22757:13:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4637,
                                    "nodeType": "ExpressionStatement",
                                    "src": "22757:15:21"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 4565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4559,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4556,
                              "src": "21987:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 4560,
                              "name": "requiredJurors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4473,
                              "src": "21991:14:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "21987:18:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4562,
                              "name": "selectedCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4552,
                              "src": "22009:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 4563,
                              "name": "poolSize",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4468,
                              "src": "22025:8:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22009:24:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "21987:46:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4641,
                        "initializationExpression": {
                          "assignments": [
                            4556
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 4556,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "21980:1:21",
                              "nodeType": "VariableDeclaration",
                              "scope": 4641,
                              "src": "21972:9:21",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 4555,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "21972:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 4558,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 4557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21984:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "21972:13:21"
                        },
                        "isSimpleCounterLoop": false,
                        "loopExpression": {
                          "expression": {
                            "id": 4567,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "22035:3:21",
                            "subExpression": {
                              "id": 4566,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4556,
                              "src": "22035:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4568,
                          "nodeType": "ExpressionStatement",
                          "src": "22035:3:21"
                        },
                        "nodeType": "ForStatement",
                        "src": "21967:830:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 4643,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4462,
                                    "src": "22823:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 4644,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "22835:6:21",
                                  "memberName": "jurors",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2805,
                                  "src": "22823:18:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 4645,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "22842:6:21",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "22823:25:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 4646,
                                "name": "requiredJurors",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4473,
                                "src": "22852:14:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "22823:43:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4661696c656420746f2061737369676e20656e6f7567682061707065616c206a75726f7273",
                              "id": 4648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22868:39:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e7c4a8750e3c79231a11301b44a94313754a0cca6792c9b5f64748cf5bdab223",
                                "typeString": "literal_string \"Failed to assign enough appeal jurors\""
                              },
                              "value": "Failed to assign enough appeal jurors"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e7c4a8750e3c79231a11301b44a94313754a0cca6792c9b5f64748cf5bdab223",
                                "typeString": "literal_string \"Failed to assign enough appeal jurors\""
                              }
                            ],
                            "id": 4642,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "22815:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22815:93:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4650,
                        "nodeType": "ExpressionStatement",
                        "src": "22815:93:21"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4455,
                    "nodeType": "StructuredDocumentation",
                    "src": "20815:84:21",
                    "text": " @dev 内部函数：为上诉案件分配更大规模的陪审员"
                  },
                  "id": 4652,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_assignAppealJurors",
                  "nameLocation": "20913:19:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4457,
                        "mutability": "mutable",
                        "name": "_caseId",
                        "nameLocation": "20941:7:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4652,
                        "src": "20933:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4456,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20933:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20932:17:21"
                  },
                  "returnParameters": {
                    "id": 4459,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "20959:0:21"
                  },
                  "scope": 4966,
                  "src": "20904:2011:21",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4778,
                    "nodeType": "Block",
                    "src": "23179:1440:21",
                    "statements": [
                      {
                        "assignments": [
                          4668
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4668,
                            "mutability": "mutable",
                            "name": "currentCase",
                            "nameLocation": "23202:11:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4778,
                            "src": "23189:24:21",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                              "typeString": "struct DeciCourt.Case"
                            },
                            "typeName": {
                              "id": 4667,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 4666,
                                "name": "Case",
                                "nameLocations": [
                                  "23189:4:21"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2837,
                                "src": "23189:4:21"
                              },
                              "referencedDeclaration": 2837,
                              "src": "23189:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4672,
                        "initialValue": {
                          "baseExpression": {
                            "id": 4669,
                            "name": "cases",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2880,
                            "src": "23216:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Case_$2837_storage_$",
                              "typeString": "mapping(uint256 => struct DeciCourt.Case storage ref)"
                            }
                          },
                          "id": 4671,
                          "indexExpression": {
                            "id": 4670,
                            "name": "_caseId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4655,
                            "src": "23222:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23216:14:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Case_$2837_storage",
                            "typeString": "struct DeciCourt.Case storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23189:41:21"
                      },
                      {
                        "assignments": [
                          4674
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4674,
                            "mutability": "mutable",
                            "name": "appealSuccessful",
                            "nameLocation": "23317:16:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4778,
                            "src": "23312:21:21",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 4673,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "23312:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4680,
                        "initialValue": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 4678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4675,
                                "name": "winner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4657,
                                "src": "23337:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 4676,
                                  "name": "currentCase",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4668,
                                  "src": "23347:11:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                    "typeString": "struct DeciCourt.Case storage pointer"
                                  }
                                },
                                "id": 4677,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "23359:9:21",
                                "memberName": "appellant",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2828,
                                "src": "23347:21:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "23337:31:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 4679,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "23336:33:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "23312:57:21"
                      },
                      {
                        "condition": {
                          "id": 4681,
                          "name": "appealSuccessful",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4674,
                          "src": "23392:16:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 4755,
                          "nodeType": "Block",
                          "src": "23774:614:21",
                          "statements": [
                            {
                              "assignments": [
                                4710
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 4710,
                                  "mutability": "mutable",
                                  "name": "winnerBonus",
                                  "nameLocation": "23933:11:21",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 4755,
                                  "src": "23925:19:21",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 4709,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23925:7:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 4715,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 4711,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4668,
                                    "src": "23947:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 4712,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "23959:13:21",
                                  "memberName": "appealDeposit",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2830,
                                  "src": "23947:25:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 4713,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "23975:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "23947:29:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "23925:51:21"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 4719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4716,
                                  "name": "winner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4657,
                                  "src": "23994:6:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 4717,
                                    "name": "currentCase",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4668,
                                    "src": "24004:11:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                      "typeString": "struct DeciCourt.Case storage pointer"
                                    }
                                  },
                                  "id": 4718,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "24016:9:21",
                                  "memberName": "plaintiff",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2793,
                                  "src": "24004:21:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "23994:31:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 4745,
                                "nodeType": "Block",
                                "src": "24168:135:21",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 4736,
                                            "name": "currentCase",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4668,
                                            "src": "24205:11:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                              "typeString": "struct DeciCourt.Case storage pointer"
                                            }
                                          },
                                          "id": 4737,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "24217:9:21",
                                          "memberName": "defendant",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2795,
                                          "src": "24205:21:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 4738,
                                          "name": "winnerBonus",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4710,
                                          "src": "24228:11:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 4733,
                                          "name": "juryToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2855,
                                          "src": "24186:9:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$877",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 4735,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "24196:8:21",
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 844,
                                        "src": "24186:18:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      "id": 4739,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "24186:54:21",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 4740,
                                    "nodeType": "ExpressionStatement",
                                    "src": "24186:54:21"
                                  },
                                  {
                                    "expression": {
                                      "id": 4743,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 4741,
                                        "name": "defendantReward",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4661,
                                        "src": "24258:15:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "id": 4742,
                                        "name": "winnerBonus",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4710,
                                        "src": "24277:11:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "24258:30:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4744,
                                    "nodeType": "ExpressionStatement",
                                    "src": "24258:30:21"
                                  }
                                ]
                              },
                              "id": 4746,
                              "nodeType": "IfStatement",
                              "src": "23990:313:21",
                              "trueBody": {
                                "id": 4732,
                                "nodeType": "Block",
                                "src": "24027:135:21",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 4723,
                                            "name": "currentCase",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4668,
                                            "src": "24064:11:21",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                              "typeString": "struct DeciCourt.Case storage pointer"
                                            }
                                          },
                                          "id": 4724,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "24076:9:21",
                                          "memberName": "plaintiff",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2793,
                                          "src": "24064:21:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 4725,
                                          "name": "winnerBonus",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4710,
                                          "src": "24087:11:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 4720,
                                          "name": "juryToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2855,
                                          "src": "24045:9:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$877",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 4722,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "24055:8:21",
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 844,
                                        "src": "24045:18:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      "id": 4726,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "24045:54:21",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 4727,
                                    "nodeType": "ExpressionStatement",
                                    "src": "24045:54:21"
                                  },
                                  {
                                    "expression": {
                                      "id": 4730,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 4728,
                                        "name": "plaintiffReward",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4659,
                                        "src": "24117:15:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "id": 4729,
                                        "name": "winnerBonus",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4710,
                                        "src": "24136:11:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "24117:30:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4731,
                                    "nodeType": "ExpressionStatement",
                                    "src": "24117:30:21"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 4753,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 4747,
                                  "name": "totalJurorReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4663,
                                  "src": "24316:16:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 4751,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 4748,
                                          "name": "currentCase",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4668,
                                          "src": "24337:11:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                            "typeString": "struct DeciCourt.Case storage pointer"
                                          }
                                        },
                                        "id": 4749,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "24349:13:21",
                                        "memberName": "appealDeposit",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2830,
                                        "src": "24337:25:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 4750,
                                        "name": "winnerBonus",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4710,
                                        "src": "24365:11:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "24337:39:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 4752,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "24336:41:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "24316:61:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4754,
                              "nodeType": "ExpressionStatement",
                              "src": "24316:61:21"
                            }
                          ]
                        },
                        "id": 4756,
                        "nodeType": "IfStatement",
                        "src": "23388:1000:21",
                        "trueBody": {
                          "id": 4708,
                          "nodeType": "Block",
                          "src": "23410:358:21",
                          "statements": [
                            {
                              "assignments": [
                                4683
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 4683,
                                  "mutability": "mutable",
                                  "name": "refund",
                                  "nameLocation": "23505:6:21",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 4708,
                                  "src": "23497:14:21",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 4682,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "23497:7:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 4691,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 4687,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 4684,
                                          "name": "currentCase",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4668,
                                          "src": "23515:11:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                            "typeString": "struct DeciCourt.Case storage pointer"
                                          }
                                        },
                                        "id": 4685,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "23527:13:21",
                                        "memberName": "appealDeposit",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2830,
                                        "src": "23515:25:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "33",
                                        "id": 4686,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "23543:1:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_3_by_1",
                                          "typeString": "int_const 3"
                                        },
                                        "value": "3"
                                      },
                                      "src": "23515:29:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 4688,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "23514:31:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "34",
                                  "id": 4689,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "23548:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "src": "23514:35:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "23497:52:21"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 4695,
                                      "name": "currentCase",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4668,
                                      "src": "23601:11:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                        "typeString": "struct DeciCourt.Case storage pointer"
                                      }
                                    },
                                    "id": 4696,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "23613:9:21",
                                    "memberName": "appellant",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2828,
                                    "src": "23601:21:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 4697,
                                    "name": "refund",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4683,
                                    "src": "23624:6:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 4692,
                                    "name": "juryToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2855,
                                    "src": "23582:9:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$877",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 4694,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "23592:8:21",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 844,
                                  "src": "23582:18:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 4698,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "23582:49:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4699,
                              "nodeType": "ExpressionStatement",
                              "src": "23582:49:21"
                            },
                            {
                              "expression": {
                                "id": 4706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 4700,
                                  "name": "totalJurorReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4663,
                                  "src": "23701:16:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 4704,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 4701,
                                          "name": "currentCase",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4668,
                                          "src": "23722:11:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                            "typeString": "struct DeciCourt.Case storage pointer"
                                          }
                                        },
                                        "id": 4702,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "23734:13:21",
                                        "memberName": "appealDeposit",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2830,
                                        "src": "23722:25:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 4703,
                                        "name": "refund",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4683,
                                        "src": "23750:6:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "23722:34:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 4705,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "23721:36:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "23701:56:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4707,
                              "nodeType": "ExpressionStatement",
                              "src": "23701:56:21"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 4762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 4757,
                              "name": "currentCase",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4668,
                              "src": "24406:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case storage pointer"
                              }
                            },
                            "id": 4759,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "24418:6:21",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2800,
                            "src": "24406:18:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CaseStatus_$2785",
                              "typeString": "enum DeciCourt.CaseStatus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 4760,
                              "name": "CaseStatus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2785,
                              "src": "24427:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CaseStatus_$2785_$",
                                "typeString": "type(enum DeciCourt.CaseStatus)"
                              }
                            },
                            "id": 4761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "24438:14:21",
                            "memberName": "AppealResolved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2784,
                            "src": "24427:25:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CaseStatus_$2785",
                              "typeString": "enum DeciCourt.CaseStatus"
                            }
                          },
                          "src": "24406:46:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CaseStatus_$2785",
                            "typeString": "enum DeciCourt.CaseStatus"
                          }
                        },
                        "id": 4763,
                        "nodeType": "ExpressionStatement",
                        "src": "24406:46:21"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 4765,
                              "name": "_caseId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4655,
                              "src": "24482:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4766,
                              "name": "winner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4657,
                              "src": "24491:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4767,
                              "name": "appealSuccessful",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4674,
                              "src": "24499:16:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 4764,
                            "name": "AppealResolved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2758,
                            "src": "24467:14:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bool_$returns$__$",
                              "typeString": "function (uint256,address,bool)"
                            }
                          },
                          "id": 4768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24467:49:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4769,
                        "nodeType": "EmitStatement",
                        "src": "24462:54:21"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 4771,
                              "name": "_caseId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4655,
                              "src": "24544:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4772,
                              "name": "winner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4657,
                              "src": "24553:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4773,
                              "name": "plaintiffReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4659,
                              "src": "24561:15:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4774,
                              "name": "defendantReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4661,
                              "src": "24578:15:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4775,
                              "name": "totalJurorReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4663,
                              "src": "24595:16:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4770,
                            "name": "CaseResolved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2742,
                            "src": "24531:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,uint256,uint256,uint256)"
                            }
                          },
                          "id": 4776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24531:81:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4777,
                        "nodeType": "EmitStatement",
                        "src": "24526:86:21"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4653,
                    "nodeType": "StructuredDocumentation",
                    "src": "22925:51:21",
                    "text": " @dev 处理上诉案件的判决"
                  },
                  "id": 4779,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_handleAppealVerdict",
                  "nameLocation": "22990:20:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4664,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4655,
                        "mutability": "mutable",
                        "name": "_caseId",
                        "nameLocation": "23028:7:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4779,
                        "src": "23020:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4654,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23020:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4657,
                        "mutability": "mutable",
                        "name": "winner",
                        "nameLocation": "23054:6:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4779,
                        "src": "23046:14:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4656,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "23046:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4659,
                        "mutability": "mutable",
                        "name": "plaintiffReward",
                        "nameLocation": "23079:15:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4779,
                        "src": "23071:23:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4658,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23071:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4661,
                        "mutability": "mutable",
                        "name": "defendantReward",
                        "nameLocation": "23113:15:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4779,
                        "src": "23105:23:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4660,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23105:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4663,
                        "mutability": "mutable",
                        "name": "totalJurorReward",
                        "nameLocation": "23147:16:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4779,
                        "src": "23139:24:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4662,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23139:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "23010:159:21"
                  },
                  "returnParameters": {
                    "id": 4665,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "23179:0:21"
                  },
                  "scope": 4966,
                  "src": "22981:1638:21",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4816,
                    "nodeType": "Block",
                    "src": "24798:183:21",
                    "statements": [
                      {
                        "body": {
                          "id": 4812,
                          "nodeType": "Block",
                          "src": "24855:98:21",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 4807,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 4802,
                                      "name": "_case",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4783,
                                      "src": "24873:5:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                        "typeString": "struct DeciCourt.Case storage pointer"
                                      }
                                    },
                                    "id": 4803,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "24879:6:21",
                                    "memberName": "jurors",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2805,
                                    "src": "24873:12:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 4805,
                                  "indexExpression": {
                                    "id": 4804,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4791,
                                    "src": "24886:1:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "24873:15:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 4806,
                                  "name": "_addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4785,
                                  "src": "24892:5:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "24873:24:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4811,
                              "nodeType": "IfStatement",
                              "src": "24869:74:21",
                              "trueBody": {
                                "id": 4810,
                                "nodeType": "Block",
                                "src": "24899:44:21",
                                "statements": [
                                  {
                                    "expression": {
                                      "hexValue": "74727565",
                                      "id": 4808,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "24924:4:21",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "true"
                                    },
                                    "functionReturnParameters": 4789,
                                    "id": 4809,
                                    "nodeType": "Return",
                                    "src": "24917:11:21"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4794,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4791,
                            "src": "24825:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 4795,
                                "name": "_case",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4783,
                                "src": "24829:5:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 4796,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "24835:6:21",
                              "memberName": "jurors",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2805,
                              "src": "24829:12:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 4797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "24842:6:21",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "24829:19:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24825:23:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4813,
                        "initializationExpression": {
                          "assignments": [
                            4791
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 4791,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "24818:1:21",
                              "nodeType": "VariableDeclaration",
                              "scope": 4813,
                              "src": "24813:6:21",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 4790,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "24813:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 4793,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 4792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "24822:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "24813:10:21"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 4800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "24850:3:21",
                            "subExpression": {
                              "id": 4799,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4791,
                              "src": "24850:1:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4801,
                          "nodeType": "ExpressionStatement",
                          "src": "24850:3:21"
                        },
                        "nodeType": "ForStatement",
                        "src": "24808:145:21"
                      },
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 4814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24969:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 4789,
                        "id": 4815,
                        "nodeType": "Return",
                        "src": "24962:12:21"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4780,
                    "nodeType": "StructuredDocumentation",
                    "src": "24629:75:21",
                    "text": " @dev 检查一个地址是否是指定案件的陪审员"
                  },
                  "id": 4817,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_isJurorForCase",
                  "nameLocation": "24718:15:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4786,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4783,
                        "mutability": "mutable",
                        "name": "_case",
                        "nameLocation": "24747:5:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4817,
                        "src": "24734:18:21",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                          "typeString": "struct DeciCourt.Case"
                        },
                        "typeName": {
                          "id": 4782,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4781,
                            "name": "Case",
                            "nameLocations": [
                              "24734:4:21"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2837,
                            "src": "24734:4:21"
                          },
                          "referencedDeclaration": 2837,
                          "src": "24734:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                            "typeString": "struct DeciCourt.Case"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4785,
                        "mutability": "mutable",
                        "name": "_addr",
                        "nameLocation": "24762:5:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4817,
                        "src": "24754:13:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4784,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "24754:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "24733:35:21"
                  },
                  "returnParameters": {
                    "id": 4789,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4788,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4817,
                        "src": "24792:4:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 4787,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "24792:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "24791:6:21"
                  },
                  "scope": 4966,
                  "src": "24709:272:21",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4885,
                    "nodeType": "Block",
                    "src": "25290:525:21",
                    "statements": [
                      {
                        "assignments": [
                          4835
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4835,
                            "mutability": "mutable",
                            "name": "juror",
                            "nameLocation": "25319:5:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4885,
                            "src": "25301:23:21",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                              "typeString": "struct DeciCourt.JurorInfo"
                            },
                            "typeName": {
                              "id": 4834,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 4833,
                                "name": "JurorInfo",
                                "nameLocations": [
                                  "25301:9:21"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2852,
                                "src": "25301:9:21"
                              },
                              "referencedDeclaration": 2852,
                              "src": "25301:9:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                "typeString": "struct DeciCourt.JurorInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4839,
                        "initialValue": {
                          "baseExpression": {
                            "id": 4836,
                            "name": "jurorsInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2892,
                            "src": "25327:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_JurorInfo_$2852_storage_$",
                              "typeString": "mapping(address => struct DeciCourt.JurorInfo storage ref)"
                            }
                          },
                          "id": 4838,
                          "indexExpression": {
                            "id": 4837,
                            "name": "_juror",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4820,
                            "src": "25338:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25327:18:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_JurorInfo_$2852_storage",
                            "typeString": "struct DeciCourt.JurorInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "25301:44:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4841,
                                "name": "juror",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4835,
                                "src": "25364:5:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                  "typeString": "struct DeciCourt.JurorInfo storage pointer"
                                }
                              },
                              "id": 4842,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "25370:12:21",
                              "memberName": "isRegistered",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2839,
                              "src": "25364:18:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4a75726f72206e6f742072656769737465726564",
                              "id": 4843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25384:22:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7847dacb8462a9eb94a5541c4f129c24f1e262cd9c4ac1ba93a04f2da613c94d",
                                "typeString": "literal_string \"Juror not registered\""
                              },
                              "value": "Juror not registered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7847dacb8462a9eb94a5541c4f129c24f1e262cd9c4ac1ba93a04f2da613c94d",
                                "typeString": "literal_string \"Juror not registered\""
                              }
                            ],
                            "id": 4840,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "25356:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25356:51:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4845,
                        "nodeType": "ExpressionStatement",
                        "src": "25356:51:21"
                      },
                      {
                        "expression": {
                          "id": 4849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4846,
                            "name": "correctVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4823,
                            "src": "25428:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 4847,
                              "name": "juror",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4835,
                              "src": "25443:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                "typeString": "struct DeciCourt.JurorInfo storage pointer"
                              }
                            },
                            "id": 4848,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "25449:12:21",
                            "memberName": "correctVotes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2845,
                            "src": "25443:18:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "25428:33:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4850,
                        "nodeType": "ExpressionStatement",
                        "src": "25428:33:21"
                      },
                      {
                        "expression": {
                          "id": 4854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4851,
                            "name": "totalVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4825,
                            "src": "25472:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 4852,
                              "name": "juror",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4835,
                              "src": "25485:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                "typeString": "struct DeciCourt.JurorInfo storage pointer"
                              }
                            },
                            "id": 4853,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "25491:10:21",
                            "memberName": "totalVotes",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2847,
                            "src": "25485:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "25472:29:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4855,
                        "nodeType": "ExpressionStatement",
                        "src": "25472:29:21"
                      },
                      {
                        "expression": {
                          "id": 4859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4856,
                            "name": "reputationScore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4827,
                            "src": "25512:15:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 4857,
                              "name": "juror",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4835,
                              "src": "25530:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                "typeString": "struct DeciCourt.JurorInfo storage pointer"
                              }
                            },
                            "id": 4858,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "25536:15:21",
                            "memberName": "reputationScore",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2849,
                            "src": "25530:21:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "25512:39:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4860,
                        "nodeType": "ExpressionStatement",
                        "src": "25512:39:21"
                      },
                      {
                        "expression": {
                          "id": 4864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4861,
                            "name": "consecutiveWrong",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4829,
                            "src": "25562:16:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 4862,
                              "name": "juror",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4835,
                              "src": "25581:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_JurorInfo_$2852_storage_ptr",
                                "typeString": "struct DeciCourt.JurorInfo storage pointer"
                              }
                            },
                            "id": 4863,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "25587:16:21",
                            "memberName": "consecutiveWrong",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2851,
                            "src": "25581:22:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "25562:41:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4865,
                        "nodeType": "ExpressionStatement",
                        "src": "25562:41:21"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4866,
                            "name": "totalVotes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4825,
                            "src": "25668:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "25681:1:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "25668:14:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 4883,
                          "nodeType": "Block",
                          "src": "25765:43:21",
                          "statements": [
                            {
                              "expression": {
                                "id": 4881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 4879,
                                  "name": "accuracyRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4831,
                                  "src": "25780:12:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 4880,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "25795:1:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "25780:16:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4882,
                              "nodeType": "ExpressionStatement",
                              "src": "25780:16:21"
                            }
                          ]
                        },
                        "id": 4884,
                        "nodeType": "IfStatement",
                        "src": "25664:144:21",
                        "trueBody": {
                          "id": 4878,
                          "nodeType": "Block",
                          "src": "25684:75:21",
                          "statements": [
                            {
                              "expression": {
                                "id": 4876,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 4869,
                                  "name": "accuracyRate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4831,
                                  "src": "25699:12:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4875,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 4872,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 4870,
                                          "name": "correctVotes",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4823,
                                          "src": "25715:12:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "hexValue": "313030",
                                          "id": 4871,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "25730:3:21",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_100_by_1",
                                            "typeString": "int_const 100"
                                          },
                                          "value": "100"
                                        },
                                        "src": "25715:18:21",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 4873,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "25714:20:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 4874,
                                    "name": "totalVotes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4825,
                                    "src": "25737:10:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "25714:33:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "25699:48:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4877,
                              "nodeType": "ExpressionStatement",
                              "src": "25699:48:21"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4818,
                    "nodeType": "StructuredDocumentation",
                    "src": "24991:60:21",
                    "text": " @dev 获取陪审员的详细声誉信息"
                  },
                  "functionSelector": "4c4b848c",
                  "id": 4886,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getJurorReputation",
                  "nameLocation": "25065:18:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4821,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4820,
                        "mutability": "mutable",
                        "name": "_juror",
                        "nameLocation": "25092:6:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4886,
                        "src": "25084:14:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4819,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "25084:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "25083:16:21"
                  },
                  "returnParameters": {
                    "id": 4832,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4823,
                        "mutability": "mutable",
                        "name": "correctVotes",
                        "nameLocation": "25141:12:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4886,
                        "src": "25133:20:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4822,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25133:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4825,
                        "mutability": "mutable",
                        "name": "totalVotes",
                        "nameLocation": "25172:10:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4886,
                        "src": "25164:18:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4824,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25164:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4827,
                        "mutability": "mutable",
                        "name": "reputationScore",
                        "nameLocation": "25201:15:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4886,
                        "src": "25193:23:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4826,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25193:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4829,
                        "mutability": "mutable",
                        "name": "consecutiveWrong",
                        "nameLocation": "25235:16:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4886,
                        "src": "25227:24:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4828,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25227:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4831,
                        "mutability": "mutable",
                        "name": "accuracyRate",
                        "nameLocation": "25270:12:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4886,
                        "src": "25262:20:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4830,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25262:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "25122:167:21"
                  },
                  "scope": 4966,
                  "src": "25056:759:21",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4900,
                    "nodeType": "Block",
                    "src": "25973:45:21",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 4895,
                              "name": "cases",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2880,
                              "src": "25990:5:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Case_$2837_storage_$",
                                "typeString": "mapping(uint256 => struct DeciCourt.Case storage ref)"
                              }
                            },
                            "id": 4897,
                            "indexExpression": {
                              "id": 4896,
                              "name": "_caseId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4889,
                              "src": "25996:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "25990:14:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Case_$2837_storage",
                              "typeString": "struct DeciCourt.Case storage ref"
                            }
                          },
                          "id": 4898,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "26005:6:21",
                          "memberName": "jurors",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2805,
                          "src": "25990:21:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "functionReturnParameters": 4894,
                        "id": 4899,
                        "nodeType": "Return",
                        "src": "25983:28:21"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4887,
                    "nodeType": "StructuredDocumentation",
                    "src": "25827:60:21",
                    "text": " @dev 获取指定案件的陪审员列表"
                  },
                  "functionSelector": "7035aba2",
                  "id": 4901,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCaseJurors",
                  "nameLocation": "25901:13:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4890,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4889,
                        "mutability": "mutable",
                        "name": "_caseId",
                        "nameLocation": "25923:7:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4901,
                        "src": "25915:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4888,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25915:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "25914:17:21"
                  },
                  "returnParameters": {
                    "id": 4894,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4893,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4901,
                        "src": "25955:16:21",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 4891,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "25955:7:21",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 4892,
                          "nodeType": "ArrayTypeName",
                          "src": "25955:9:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "25954:18:21"
                  },
                  "scope": 4966,
                  "src": "25892:126:21",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4964,
                    "nodeType": "Block",
                    "src": "26447:486:21",
                    "statements": [
                      {
                        "assignments": [
                          4933
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4933,
                            "mutability": "mutable",
                            "name": "caseData",
                            "nameLocation": "26470:8:21",
                            "nodeType": "VariableDeclaration",
                            "scope": 4964,
                            "src": "26457:21:21",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                              "typeString": "struct DeciCourt.Case"
                            },
                            "typeName": {
                              "id": 4932,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 4931,
                                "name": "Case",
                                "nameLocations": [
                                  "26457:4:21"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2837,
                                "src": "26457:4:21"
                              },
                              "referencedDeclaration": 2837,
                              "src": "26457:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                "typeString": "struct DeciCourt.Case"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4937,
                        "initialValue": {
                          "baseExpression": {
                            "id": 4934,
                            "name": "cases",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2880,
                            "src": "26481:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Case_$2837_storage_$",
                              "typeString": "mapping(uint256 => struct DeciCourt.Case storage ref)"
                            }
                          },
                          "id": 4936,
                          "indexExpression": {
                            "id": 4935,
                            "name": "_caseId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4903,
                            "src": "26487:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "26481:14:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Case_$2837_storage",
                            "typeString": "struct DeciCourt.Case storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "26457:38:21"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "id": 4938,
                                "name": "caseData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4933,
                                "src": "26526:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 4939,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "26535:2:21",
                              "memberName": "id",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2791,
                              "src": "26526:11:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 4940,
                                "name": "caseData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4933,
                                "src": "26551:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 4941,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "26560:9:21",
                              "memberName": "plaintiff",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2793,
                              "src": "26551:18:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 4942,
                                "name": "caseData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4933,
                                "src": "26583:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 4943,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "26592:9:21",
                              "memberName": "defendant",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2795,
                              "src": "26583:18:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 4944,
                                "name": "caseData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4933,
                                "src": "26615:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 4945,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "26624:11:21",
                              "memberName": "evidenceCID",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2797,
                              "src": "26615:20:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "expression": {
                                "id": 4946,
                                "name": "caseData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4933,
                                "src": "26649:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 4947,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "26658:6:21",
                              "memberName": "status",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2800,
                              "src": "26649:15:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CaseStatus_$2785",
                                "typeString": "enum DeciCourt.CaseStatus"
                              }
                            },
                            {
                              "expression": {
                                "id": 4948,
                                "name": "caseData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4933,
                                "src": "26678:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 4949,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "26687:9:21",
                              "memberName": "filingFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2802,
                              "src": "26678:18:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 4950,
                                "name": "caseData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4933,
                                "src": "26710:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 4951,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "26719:18:21",
                              "memberName": "plaintiffVoteCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2816,
                              "src": "26710:27:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 4952,
                                "name": "caseData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4933,
                                "src": "26751:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 4953,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "26760:18:21",
                              "memberName": "defendantVoteCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2818,
                              "src": "26751:27:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 4954,
                                "name": "caseData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4933,
                                "src": "26792:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 4955,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "26801:12:21",
                              "memberName": "creationTime",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2820,
                              "src": "26792:21:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 4956,
                                "name": "caseData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4933,
                                "src": "26827:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 4957,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "26836:14:21",
                              "memberName": "commitDeadline",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2822,
                              "src": "26827:23:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 4958,
                                "name": "caseData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4933,
                                "src": "26864:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 4959,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "26873:14:21",
                              "memberName": "revealDeadline",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2824,
                              "src": "26864:23:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 4960,
                                "name": "caseData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4933,
                                "src": "26901:8:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Case_$2837_storage_ptr",
                                  "typeString": "struct DeciCourt.Case storage pointer"
                                }
                              },
                              "id": 4961,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "26910:6:21",
                              "memberName": "winner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2826,
                              "src": "26901:15:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "id": 4962,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "26512:414:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_address_$_t_string_storage_$_t_enum$_CaseStatus_$2785_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$",
                            "typeString": "tuple(uint256,address,address,string storage ref,enum DeciCourt.CaseStatus,uint256,uint256,uint256,uint256,uint256,uint256,address)"
                          }
                        },
                        "functionReturnParameters": 4930,
                        "id": 4963,
                        "nodeType": "Return",
                        "src": "26505:421:21"
                      }
                    ]
                  },
                  "functionSelector": "c3a90635",
                  "id": 4965,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCaseDetails",
                  "nameLocation": "26033:14:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4904,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4903,
                        "mutability": "mutable",
                        "name": "_caseId",
                        "nameLocation": "26056:7:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4965,
                        "src": "26048:15:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4902,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "26048:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "26047:17:21"
                  },
                  "returnParameters": {
                    "id": 4930,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4906,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "26105:2:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4965,
                        "src": "26097:10:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4905,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "26097:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4908,
                        "mutability": "mutable",
                        "name": "plaintiff",
                        "nameLocation": "26125:9:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4965,
                        "src": "26117:17:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4907,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "26117:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4910,
                        "mutability": "mutable",
                        "name": "defendant",
                        "nameLocation": "26152:9:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4965,
                        "src": "26144:17:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4909,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "26144:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4912,
                        "mutability": "mutable",
                        "name": "evidenceCID",
                        "nameLocation": "26185:11:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4965,
                        "src": "26171:25:21",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 4911,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "26171:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4915,
                        "mutability": "mutable",
                        "name": "status",
                        "nameLocation": "26217:6:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4965,
                        "src": "26206:17:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CaseStatus_$2785",
                          "typeString": "enum DeciCourt.CaseStatus"
                        },
                        "typeName": {
                          "id": 4914,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4913,
                            "name": "CaseStatus",
                            "nameLocations": [
                              "26206:10:21"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2785,
                            "src": "26206:10:21"
                          },
                          "referencedDeclaration": 2785,
                          "src": "26206:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CaseStatus_$2785",
                            "typeString": "enum DeciCourt.CaseStatus"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4917,
                        "mutability": "mutable",
                        "name": "filingFee",
                        "nameLocation": "26241:9:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4965,
                        "src": "26233:17:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4916,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "26233:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4919,
                        "mutability": "mutable",
                        "name": "plaintiffVoteCount",
                        "nameLocation": "26268:18:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4965,
                        "src": "26260:26:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4918,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "26260:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4921,
                        "mutability": "mutable",
                        "name": "defendantVoteCount",
                        "nameLocation": "26304:18:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4965,
                        "src": "26296:26:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4920,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "26296:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4923,
                        "mutability": "mutable",
                        "name": "creationTime",
                        "nameLocation": "26340:12:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4965,
                        "src": "26332:20:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4922,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "26332:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4925,
                        "mutability": "mutable",
                        "name": "commitDeadline",
                        "nameLocation": "26370:14:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4965,
                        "src": "26362:22:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4924,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "26362:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4927,
                        "mutability": "mutable",
                        "name": "revealDeadline",
                        "nameLocation": "26402:14:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4965,
                        "src": "26394:22:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4926,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "26394:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4929,
                        "mutability": "mutable",
                        "name": "winner",
                        "nameLocation": "26434:6:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 4965,
                        "src": "26426:14:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4928,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "26426:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "26087:359:21"
                  },
                  "scope": 4966,
                  "src": "26024:909:21",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4967,
              "src": "175:26761:21",
              "usedErrors": [
                1135
              ],
              "usedEvents": [
                2705,
                2711,
                2715,
                2721,
                2730,
                2742,
                2750,
                2758,
                2768,
                2778
              ]
            }
          ],
          "src": "32:26904:21"
        },
        "id": 21
      },
      "contracts/JuryToken.sol": {
        "ast": {
          "absolutePath": "contracts/JuryToken.sol",
          "exportedSymbols": {
            "ERC20": [
              799
            ],
            "ERC20Burnable": [
              923
            ],
            "ERC20Pausable": [
              957
            ],
            "JuryToken": [
              5062
            ],
            "Ownable": [
              147
            ]
          },
          "id": 5063,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 4968,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:22"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 4970,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 5063,
              "sourceUnit": 800,
              "src": "151:68:22",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4969,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 799,
                    "src": "159:5:22",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "id": 4972,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 5063,
              "sourceUnit": 924,
              "src": "220:95:22",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4971,
                    "name": "ERC20Burnable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 923,
                    "src": "228:13:22",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
              "id": 4974,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 5063,
              "sourceUnit": 958,
              "src": "316:95:22",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4973,
                    "name": "ERC20Pausable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 957,
                    "src": "324:13:22",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 4976,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 5063,
              "sourceUnit": 148,
              "src": "412:67:22",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4975,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "420:7:22",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4977,
                    "name": "ERC20",
                    "nameLocations": [
                      "503:5:22"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 799,
                    "src": "503:5:22"
                  },
                  "id": 4978,
                  "nodeType": "InheritanceSpecifier",
                  "src": "503:5:22"
                },
                {
                  "baseName": {
                    "id": 4979,
                    "name": "ERC20Burnable",
                    "nameLocations": [
                      "510:13:22"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 923,
                    "src": "510:13:22"
                  },
                  "id": 4980,
                  "nodeType": "InheritanceSpecifier",
                  "src": "510:13:22"
                },
                {
                  "baseName": {
                    "id": 4981,
                    "name": "ERC20Pausable",
                    "nameLocations": [
                      "525:13:22"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 957,
                    "src": "525:13:22"
                  },
                  "id": 4982,
                  "nodeType": "InheritanceSpecifier",
                  "src": "525:13:22"
                },
                {
                  "baseName": {
                    "id": 4983,
                    "name": "Ownable",
                    "nameLocations": [
                      "540:7:22"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "540:7:22"
                  },
                  "id": 4984,
                  "nodeType": "InheritanceSpecifier",
                  "src": "540:7:22"
                }
              ],
              "canonicalName": "JuryToken",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 5062,
              "linearizedBaseContracts": [
                5062,
                147,
                957,
                1121,
                923,
                799,
                189,
                983,
                877,
                1013
              ],
              "name": "JuryToken",
              "nameLocation": "490:9:22",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 5006,
                    "nodeType": "Block",
                    "src": "635:62:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4996,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "651:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "655:6:22",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "651:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "31303030303030",
                                "id": 4998,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "663:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000_by_1",
                                  "typeString": "int_const 1000000"
                                },
                                "value": "1000000"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5002,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 4999,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "673:2:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 5000,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 363,
                                    "src": "679:8:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view returns (uint8)"
                                    }
                                  },
                                  "id": 5001,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "679:10:22",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "673:16:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "663:26:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4995,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "645:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 5004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "645:45:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5005,
                        "nodeType": "ExpressionStatement",
                        "src": "645:45:22"
                      }
                    ]
                  },
                  "id": 5007,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "4a757279546f6b656e",
                          "id": 4987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "582:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_5e5c315cfe81eedc89188b00f92591670479cebe5e50f40587a2ea531d9e0117",
                            "typeString": "literal_string \"JuryToken\""
                          },
                          "value": "JuryToken"
                        },
                        {
                          "hexValue": "4a555259",
                          "id": 4988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "595:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_9f70476b4563c57c3056cc4e8dffc8025828c99ea7a458e33c1502f84b53cc94",
                            "typeString": "literal_string \"JURY\""
                          },
                          "value": "JURY"
                        }
                      ],
                      "id": 4989,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 4986,
                        "name": "ERC20",
                        "nameLocations": [
                          "576:5:22"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 799,
                        "src": "576:5:22"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "576:26:22"
                    },
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 4991,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "619:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "623:6:22",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "619:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 4993,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 4990,
                        "name": "Ownable",
                        "nameLocations": [
                          "611:7:22"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "611:7:22"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "611:19:22"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4985,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "565:2:22"
                  },
                  "returnParameters": {
                    "id": 4994,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "635:0:22"
                  },
                  "scope": 5062,
                  "src": "554:143:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 5015,
                    "nodeType": "Block",
                    "src": "737:25:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 5012,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1104,
                            "src": "747:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 5013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "747:8:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5014,
                        "nodeType": "ExpressionStatement",
                        "src": "747:8:22"
                      }
                    ]
                  },
                  "functionSelector": "8456cb59",
                  "id": 5016,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 5010,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 5009,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "727:9:22"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "727:9:22"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "727:9:22"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "712:5:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 5008,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "717:2:22"
                  },
                  "returnParameters": {
                    "id": 5011,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "737:0:22"
                  },
                  "scope": 5062,
                  "src": "703:59:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 5024,
                    "nodeType": "Block",
                    "src": "804:27:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 5021,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1120,
                            "src": "814:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 5022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "814:10:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5023,
                        "nodeType": "ExpressionStatement",
                        "src": "814:10:22"
                      }
                    ]
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 5025,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 5019,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 5018,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "794:9:22"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "794:9:22"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "794:9:22"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "777:7:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 5017,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "784:2:22"
                  },
                  "returnParameters": {
                    "id": 5020,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "804:0:22"
                  },
                  "scope": 5062,
                  "src": "768:63:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 5039,
                    "nodeType": "Block",
                    "src": "896:34:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5035,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5027,
                              "src": "912:2:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5036,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5029,
                              "src": "916:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5034,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "906:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 5037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "906:17:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5038,
                        "nodeType": "ExpressionStatement",
                        "src": "906:17:22"
                      }
                    ]
                  },
                  "functionSelector": "40c10f19",
                  "id": 5040,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 5032,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 5031,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "886:9:22"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "886:9:22"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "886:9:22"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "846:4:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 5030,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5027,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "859:2:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 5040,
                        "src": "851:10:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 5026,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "851:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 5029,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "871:6:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 5040,
                        "src": "863:14:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5028,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "863:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "850:28:22"
                  },
                  "returnParameters": {
                    "id": 5033,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "896:0:22"
                  },
                  "scope": 5062,
                  "src": "837:93:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    606,
                    956
                  ],
                  "body": {
                    "id": 5060,
                    "nodeType": "Block",
                    "src": "1122:47:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5055,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5042,
                              "src": "1146:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5056,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5044,
                              "src": "1152:2:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5057,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5046,
                              "src": "1156:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 5052,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "1132:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_JuryToken_$5062_$",
                                "typeString": "type(contract super JuryToken)"
                              }
                            },
                            "id": 5054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1138:7:22",
                            "memberName": "_update",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 956,
                            "src": "1132:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 5058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1132:30:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5059,
                        "nodeType": "ExpressionStatement",
                        "src": "1132:30:22"
                      }
                    ]
                  },
                  "id": 5061,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "1013:7:22",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 5050,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 5048,
                        "name": "ERC20",
                        "nameLocations": [
                          "1096:5:22"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 799,
                        "src": "1096:5:22"
                      },
                      {
                        "id": 5049,
                        "name": "ERC20Pausable",
                        "nameLocations": [
                          "1103:13:22"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 957,
                        "src": "1103:13:22"
                      }
                    ],
                    "src": "1087:30:22"
                  },
                  "parameters": {
                    "id": 5047,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5042,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "1029:4:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 5061,
                        "src": "1021:12:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 5041,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1021:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 5044,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1043:2:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 5061,
                        "src": "1035:10:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 5043,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1035:7:22",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 5046,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1055:5:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 5061,
                        "src": "1047:13:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5045,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1047:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1020:41:22"
                  },
                  "returnParameters": {
                    "id": 5051,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1122:0:22"
                  },
                  "scope": 5062,
                  "src": "1004:165:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 5063,
              "src": "481:690:22",
              "usedErrors": [
                13,
                18,
                159,
                164,
                169,
                178,
                183,
                188,
                1035,
                1038
              ],
              "usedEvents": [
                24,
                811,
                820,
                1027,
                1032
              ]
            }
          ],
          "src": "32:1139:22"
        },
        "id": 22
      },
      "contracts/SimpleTest.sol": {
        "ast": {
          "absolutePath": "contracts/SimpleTest.sol",
          "exportedSymbols": {
            "SimpleTest": [
              5099
            ]
          },
          "id": 5100,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 5064,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".19"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:23"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SimpleTest",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 5099,
              "linearizedBaseContracts": [
                5099
              ],
              "name": "SimpleTest",
              "nameLocation": "67:10:23",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "e21f37ce",
                  "id": 5066,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "98:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5099,
                  "src": "84:21:23",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5065,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "84:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 5068,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "126:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5099,
                  "src": "111:20:23",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "111:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 5071,
                    "nodeType": "Block",
                    "src": "152:2:23",
                    "statements": []
                  },
                  "id": 5072,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 5069,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "149:2:23"
                  },
                  "returnParameters": {
                    "id": 5070,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "152:0:23"
                  },
                  "scope": 5099,
                  "src": "138:16:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 5089,
                    "nodeType": "Block",
                    "src": "213:103:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 5081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 5078,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "231:3:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 5079,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "235:6:23",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "231:10:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 5080,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5068,
                                "src": "245:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "231:19:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c79206f776e65722063616e20736574206d657373616765",
                              "id": 5082,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "252:28:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8e8696b7d756aa43ad5d11b3fe7298664127f55252ddbc964e43725a49aeb25c",
                                "typeString": "literal_string \"Only owner can set message\""
                              },
                              "value": "Only owner can set message"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8e8696b7d756aa43ad5d11b3fe7298664127f55252ddbc964e43725a49aeb25c",
                                "typeString": "literal_string \"Only owner can set message\""
                              }
                            ],
                            "id": 5077,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "223:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "223:58:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5084,
                        "nodeType": "ExpressionStatement",
                        "src": "223:58:23"
                      },
                      {
                        "expression": {
                          "id": 5087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5085,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5066,
                            "src": "291:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 5086,
                            "name": "_message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5074,
                            "src": "301:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "291:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 5088,
                        "nodeType": "ExpressionStatement",
                        "src": "291:18:23"
                      }
                    ]
                  },
                  "functionSelector": "368b8772",
                  "id": 5090,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setMessage",
                  "nameLocation": "169:10:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 5075,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5074,
                        "mutability": "mutable",
                        "name": "_message",
                        "nameLocation": "194:8:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 5090,
                        "src": "180:22:23",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 5073,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "180:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "179:24:23"
                  },
                  "returnParameters": {
                    "id": 5076,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "213:0:23"
                  },
                  "scope": 5099,
                  "src": "160:156:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 5097,
                    "nodeType": "Block",
                    "src": "382:31:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 5095,
                          "name": "message",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5066,
                          "src": "399:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 5094,
                        "id": 5096,
                        "nodeType": "Return",
                        "src": "392:14:23"
                      }
                    ]
                  },
                  "functionSelector": "ce6d41de",
                  "id": 5098,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getMessage",
                  "nameLocation": "331:10:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 5091,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "341:2:23"
                  },
                  "returnParameters": {
                    "id": 5094,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5093,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 5098,
                        "src": "367:13:23",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 5092,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "367:6:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "366:15:23"
                  },
                  "scope": 5099,
                  "src": "322:91:23",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 5100,
              "src": "58:357:23",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "32:383:23"
        },
        "id": 23
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "ERC20Burnable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
        "ERC20Pausable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "paused()": "5c975abb",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"
        }
      },
      "contracts/.deps/npm/@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "contracts/.deps/npm/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"
        }
      },
      "contracts/.deps/npm/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"
        }
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"
        }
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "ERC20Burnable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
        "ERC20Pausable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "paused()": "5c975abb",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"
        }
      },
      "contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"contracts/.deps/npm/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"
        }
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/.deps/npm/@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"
        }
      },
      "contracts/.deps/npm/@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "SafeMath": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220006bac0f70ede1116b2071917552b4c42b33dc468058d39d2ab361455e74a60164736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP PUSH12 0xAC0F70EDE1116B2071917552 0xB4 0xC4 0x2B CALLER 0xDC CHAINID DUP1 PC 0xD3 SWAP14 0x2A 0xB3 PUSH2 0x455E PUSH21 0xA60164736F6C634300081C00330000000000000000 ",
              "sourceMap": "482:6210:20:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea2646970667358221220006bac0f70ede1116b2071917552b4c42b33dc468058d39d2ab361455e74a60164736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP PUSH12 0xAC0F70EDE1116B2071917552 0xB4 0xC4 0x2B CALLER 0xDC CHAINID DUP1 PC 0xD3 SWAP14 0x2A 0xB3 PUSH2 0x455E PUSH21 0xA60164736F6C634300081C00330000000000000000 ",
              "sourceMap": "482:6210:20:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/.deps/npm/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}"
        }
      },
      "contracts/DeciCourt.sol": {
        "DeciCourt": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_filingFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_jurorStake",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_jurySize",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_commitDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_revealDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_penaltyRate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_appealDepositMultiplier",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_appealDuration",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_appealJurySize",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "caseId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "appellant",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "appealDeposit",
                  "type": "uint256"
                }
              ],
              "name": "AppealInitiated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "caseId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "bool",
                  "name": "appealSuccessful",
                  "type": "bool"
                }
              ],
              "name": "AppealResolved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "caseId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "plaintiff",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "defendant",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "filingFee",
                  "type": "uint256"
                }
              ],
              "name": "CaseCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "caseId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "plaintiffReward",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "defendantReward",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalJurorReward",
                  "type": "uint256"
                }
              ],
              "name": "CaseResolved",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "juror",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "penaltyAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "penaltyRate",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "reason",
                  "type": "string"
                }
              ],
              "name": "JurorPenalized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "juror",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "stakeAmount",
                  "type": "uint256"
                }
              ],
              "name": "JurorRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "juror",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newReputation",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "correctVotes",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalVotes",
                  "type": "uint256"
                }
              ],
              "name": "JurorReputationUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "juror",
                  "type": "address"
                }
              ],
              "name": "JurorUnregistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "caseId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "juror",
                  "type": "address"
                }
              ],
              "name": "VoteCommitted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "caseId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "juror",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "enum DeciCourt.VoteOption",
                  "name": "vote",
                  "type": "uint8"
                }
              ],
              "name": "VoteRevealed",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_caseId",
                  "type": "uint256"
                }
              ],
              "name": "appeal",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "appealDepositMultiplier",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "appealDuration",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "appealJurySize",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "cases",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "plaintiff",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "defendant",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "evidenceCID",
                  "type": "string"
                },
                {
                  "internalType": "enum DeciCourt.CaseStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "filingFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "plaintiffVoteCount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "defendantVoteCount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "creationTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "commitDeadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "revealDeadline",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "appellant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "appealDeposit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "appealDeadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isAppealed",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "appealJurySize",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "commitDuration",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_caseId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "_voteHash",
                  "type": "bytes32"
                }
              ],
              "name": "commitVote",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_defendant",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "_evidenceCID",
                  "type": "string"
                }
              ],
              "name": "createCase",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_caseId",
                  "type": "uint256"
                }
              ],
              "name": "executeVerdict",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "filingFeeAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_caseId",
                  "type": "uint256"
                }
              ],
              "name": "getCaseDetails",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "plaintiff",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "defendant",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "evidenceCID",
                  "type": "string"
                },
                {
                  "internalType": "enum DeciCourt.CaseStatus",
                  "name": "status",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "filingFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "plaintiffVoteCount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "defendantVoteCount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "creationTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "commitDeadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "revealDeadline",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "winner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_caseId",
                  "type": "uint256"
                }
              ],
              "name": "getCaseJurors",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_juror",
                  "type": "address"
                }
              ],
              "name": "getJurorReputation",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "correctVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reputationScore",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "consecutiveWrong",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "accuracyRate",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "jurorPenaltyRate",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "jurorPool",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "jurorStakeAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "jurorsInfo",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isRegistered",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "stakedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isServing",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "correctVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalVotes",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reputationScore",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "consecutiveWrong",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "jurySize",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "juryToken",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "nextCaseId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "registerAsJuror",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "revealDuration",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_caseId",
                  "type": "uint256"
                },
                {
                  "internalType": "enum DeciCourt.VoteOption",
                  "name": "_vote",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "_salt",
                  "type": "bytes32"
                }
              ],
              "name": "revealVote",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unregisterAsJuror",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60a03461042457601f61303738819003918201601f19168301916001600160401b0383118484101761042957808492610140946040528339810103126104245780516001600160a01b038116919082900361042457602081015160408201516060830151608084015160a08501519160c08601519360e08701519561012061010089015198015198600160005580156103df57811561039a578215610355578315158061034a575b156103115784156102cd57851561028957606487116102445787156101ec5788156101a857838a1061014d576080526001556002556003556004556005556006556007556008556009556001600a55604051612bf79081610440823960805181818161050c0152818161084d01528181610ad201528181610e14015281816113bf01528181611b6b01528181611cd601528181611d9f01528181611ea80152611f430152f35b60405162461bcd60e51b815260206004820152602d60248201527f41707065616c206a7572792073697a65206d757374206265203e3d207265677560448201526c6c6172206a7572792073697a6560981b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f41707065616c206475726174696f6e206d75737420626520706f7369746976656044820152fd5b60405162461bcd60e51b815260206004820152602a60248201527f41707065616c206465706f736974206d756c7469706c696572206d75737420626044820152696520706f73697469766560b01b6064820152608490fd5b60405162461bcd60e51b815260206004820152601f60248201527f50656e616c747920726174652063616e6e6f74206578636565642031303025006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f52657665616c206475726174696f6e206d75737420626520706f7369746976656044820152fd5b606460405162461bcd60e51b815260206004820152602060248201527f436f6d6d6974206475726174696f6e206d75737420626520706f7369746976656044820152fd5b60405162461bcd60e51b8152602060048201526011602482015270496e76616c6964206a7572792073697a6560781b6044820152606490fd5b5060648411156100a7565b60405162461bcd60e51b815260206004820152601c60248201527f4a75726f72207374616b65206d75737420626520706f736974697665000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f46696c696e6720666565206d75737420626520706f73697469766500000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e206164647265737300000000000000000000006044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe61010080604052600436101561001457600080fd5b60003560e01c90816304495c991461232057508063059a184c146123025780630b05b14f1461205a5780631c204d0e14611569578063232e0c871461154b578063317e48b61461152d57806343bbdd3f146112635780634c4b848c1461118a578063536c8c151461116c5780636350eae81461114e5780636f833811146111305780637035aba21461106f57806371929ad514610db75780637e69b7b0146109f4578063867bc61b146109d6578063886a6de1146109b85780639da691801461087c5780639eacb5b914610837578063a2febe291461045b578063b55796f3146103d6578063c3a90635146102ef578063d496c455146102d1578063f09790dd1461016f5763f643d3d71461012857600080fd5b3461016a57602036600319011261016a57600435600c5481101561016a5761015160209161249f565b905460405160039290921b1c6001600160a01b03168152f35b600080fd5b3461016a57602036600319011261016a576004356000908152600b60205260409020805460018201546001600160a01b0390811660a05260028301541660e0526101bb600383016123fb565b9160ff6004820154166080528080806005810154956009820154600a830154600b840154600c85015491600d8601549361025760018060a01b03600e8901541696601360ff6012601160108d600f60018060a01b03910154169d01549d01549d0154169c01549c60405160c05260c0515260a051602060c051015260e051604060c0510152610220606060c051015261022060c0510190612351565b9b610269608060c05101608051612392565b60a060c051015260c08051015260e060c051015261010060c051015261012060c051015261014060c051015261016060c051015261018060c05101526101a060c05101526101c060c051015215156101e060c051015261020060c051015260c051900360c051f35b3461016a57600036600319011261016a576020600254604051908152f35b3461016a57602036600319011261016a57600435600052600b6020526020604060002080549060018060a01b036001820154169060018060a01b0360028201541660ff6004830154169260058301546009840154600a85015490600b860154926103ab6103a0600c89015496600d8a01549861037b60038c600e60018060a01b03910154169c016123fb565b916040519e8f9e8f908152015260408d015261018060608d01526101808c0190612351565b9860808b0190612392565b60a089015260c088015260e08701526101008601526101208501526101408401526101608301520390f35b3461016a57602036600319011261016a576001600160a01b036103f761233b565b16600052600e60205260e0604060002060ff8154169060018101549060ff6002820154166003820154600483015491600660058501549401549460405196151587526020870152151560408601526060850152608084015260a083015260c0820152f35b3461016a57604036600319011261016a5761047461233b565b6024359067ffffffffffffffff821161016a573660238301121561016a5781600401359067ffffffffffffffff821161016a57366024838501011161016a576001600160a01b0316908115158061082d575b156107f457600c54600354116107af576001546040516323b872dd60e01b8152336004820152306024820152604481019190915260208160648160006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af19081156107a357600091610774575b501561071a57600a549061055082612576565b600a5581600052600b6020526040600020908282556001820160018060a01b0333166bffffffffffffffffffffffff60a01b82541617905560028201846bffffffffffffffffffffffff60a01b8254161790556003820190806000966105b6845461239f565b601f81116106df575b508790601f8311600114610673578892610665575b50508160011b916000199060031b1c19161790555b60048101600160ff19825416179055600154600582015542600b820155600d610626610617600454426125c5565b80600c850155600554906125c5565b910155610632816129ad565b600154906040519182527f5c5f5f5c62d8082bc010726f98db2630d9da2b426a6717bd67bfbd9e8e17963860203393a480f35b6024925001013587806105d4565b84895260208920925090601f198416895b8181106106c457509084600195949392106106a7575b505050811b0190556105e9565b0160240135600019600384901b60f8161c1916905587808061069a565b91936020600181926024888801013581550195019201610684565b61070a90858a5260208a20601f850160051c81019160208610610710575b601f0160051c019061260d565b886105bf565b90915081906106fd565b60405162461bcd60e51b815260206004820152602c60248201527f46696c696e6720666565207472616e73666572206661696c65642e204469642060448201526b796f7520617070726f76653f60a01b6064820152608490fd5b610796915060203d60201161079c575b61078e81836123d9565b8101906125d2565b8461053d565b503d610784565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f75676820617661696c61626c65206a75726f727300000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a5908191959995b99185b9d607a1b6044820152606490fd5b50338214156104c6565b3461016a57600036600319011261016a576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461016a57604036600319011261016a5760043580600052600b602052604060002060ff60048201541660068110156109a25760016108bb91146124e8565b600c8101544211610968576007906108db6108d63383612624565b61252a565b3360009081529101602081905260409091205461092f5733600081815260209290925260408220602435905591907f3834a2c8ea101e1468b529270d35fbff0a12de32a5a7e5729b8b4dad6fb32c019080a3005b60405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e4818dbdb5b5a5d1d1959607a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601260248201527110dbdb5b5a5d081c1a185cd948195b99195960721b6044820152606490fd5b634e487b7160e01b600052602160045260246000fd5b3461016a57600036600319011261016a576020600554604051908152f35b3461016a57600036600319011261016a576020600854604051908152f35b3461016a57602036600319011261016a57600435610a10612674565b80600052600b60205260406000206004810160ff81541660068110156109a257600303610d7a5760118201544211610d3c57601282019160ff835416610cff57600e81015460018201546001600160a01b0390811691168103610cfa575060028101546001600160a01b03165b6001600160a01b03163303610cb557610a9d6005820154600754906125b2565b6040516323b872dd60e01b81523360048201523060248201526044810182905290939060208160648160006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af19081156107a357600091610c96575b5015610c5157600f820180546001600160a01b0319163317905560108201849055805460ff1990811660011790915582541660041782556009805460138301556000908201819055600a8201819055600682019491936007850193600886019391925b8754811015610bc95780610b7c6001928a6124d0565b905460039190911b1c60a083901b83900316600090815260208881526040808320839055888252808320805460ff19908116909155600e9092529091206002018054909116905501610b66565b50858780546000825580610c35575b5050610be3836126fe565b600d610bf4610617600454426125c5565b910155600160ff198254161790556040519182527f7055524dc69306fe397256b9b4ef9fe5a3b01235fdb799638b61e323b9e2c3bc60203393a36001600055005b610c4a9160005260206000209081019061260d565b8480610bd8565b60405162461bcd60e51b815260206004820152601e60248201527f41707065616c206465706f736974207472616e73666572206661696c656400006044820152606490fd5b610caf915060203d60201161079c5761078e81836123d9565b86610b03565b60405162461bcd60e51b815260206004820152601c60248201527f4f6e6c79206c6f73696e672070617274792063616e2061707065616c000000006044820152606490fd5b610a7d565b60405162461bcd60e51b815260206004820152601560248201527410d85cd948185b1c9958591e48185c1c19585b1959605a1b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275105c1c19585b08191958591b1a5b99481c185cdcd95960521b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527410d85cd9481b9bdd081c995cdbdb1d9959081e595d605a1b6044820152606490fd5b3461016a57600036600319011261016a5733600052600e60205260ff60406000205416611035576002546040516323b872dd60e01b8152336004820152306024820152604481019190915260208160648160006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af19081156107a357600091611016575b5015610fc1576002546040519060e082019082821067ffffffffffffffff831117610fab57600691604052600183526020830190815260408301600081526060840160008152608085019060008252610eee60a08701936032855260c08801956000875233600052600e602052610ed06040600020995115158a9060ff801983541691151516179055565b516001890155511515600288019060ff801983541691151516179055565b51600386015551600485015551600584015551910155600c54600160401b811015610fab57610f28816001610f469301600c55600c6124d0565b81546001600160a01b0360039290921b91821b19163390911b179055565b600c546000198101908111610f955733600052600d6020526040600020556002546040519081527f302e82b0b7908cfac0232eeb6a83332cbf587d0cb58eaa7ba72f884c149910fa60203392a2005b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152602760248201527f546f6b656e207472616e73666572206661696c65642e2044696420796f7520616044820152667070726f76653f60c81b6064820152608490fd5b61102f915060203d60201161079c5761078e81836123d9565b81610e45565b60405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b6044820152606490fd5b3461016a57602036600319011261016a57600435600052600b60205260066040600020016040518060208354918281520190819360005260206000209060005b81811061111157505050816110c59103826123d9565b6040519182916020830190602084525180915260408301919060005b8181106110ef575050500390f35b82516001600160a01b03168452859450602093840193909201916001016110e1565b82546001600160a01b03168452602090930192600192830192016110af565b3461016a57600036600319011261016a576020600454604051908152f35b3461016a57600036600319011261016a576020600a54604051908152f35b3461016a57600036600319011261016a576020600354604051908152f35b3461016a57602036600319011261016a576111a361233b565b6001600160a01b03166000908152600e60205260409020805460ff161561122757600381015460048201546005830154600690930154811561121c57606483029383850460641484151715610f95576111fe8360a096612585565b925b6040519485526020850152604084015260608301526080820152f35b60a093600092611200565b60405162461bcd60e51b8152602060048201526014602482015273129d5c9bdc881b9bdd081c9959da5cdd195c995960621b6044820152606490fd5b3461016a57600036600319011261016a5733600052600e602052604060002060ff815416156114ef5760ff600282015416611498576001015433600052600d602052604060002054600c546000198101908111610f95576112c39061249f565b905460039190911b1c6001600160a01b0316611306816112e28461249f565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b600052600d602052604060002055600c548015611482576113b991602091600019016113318161249f565b81549060018060a01b039060031b1b19169055600c5533600052600e82526000600660408220828155826001820155826002820155826003820155826004820155826005820155015533600052600d8252600060408120556040518093819263a9059cbb60e01b8352336004840160209093929193604081019460018060a01b031681520152565b038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156107a357600091611463575b501561142657337ff67e7162188cb7e3f756d0f6d7c86d1b7cc88b891ae19dd58118705a7859034b600080a2005b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b61147c915060203d60201161079c5761078e81836123d9565b816113f8565b634e487b7160e01b600052603160045260246000fd5b60405162461bcd60e51b815260206004820152602960248201527f43616e6e6f7420756e7265676973746572207768696c652073657276696e67206044820152686f6e2061206361736560b81b6064820152608490fd5b60405162461bcd60e51b81526020600482015260166024820152752737ba1030903932b3b4b9ba32b932b210353ab937b960511b6044820152606490fd5b3461016a57600036600319011261016a576020600754604051908152f35b3461016a57600036600319011261016a576020600154604051908152f35b3461016a57602036600319011261016a57611582612674565b600435600052600b602052604060002060ff60048201541660068110156109a25760010361201557600d810154421115611fd05760048101805460ff191660021790556009810154600a8201541015611fbd5760018101546001600160a01b03165b600e820180546001600160a01b0319166001600160a01b03838116918217909255600184015490911603611fb5576001915b6000928390815b60068401548310156119d05761163683600686016124d0565b60018060a01b0391549060031b1c169260ff6040600060018060a01b0387168152600888016020522054169184600052600e60205260406000209261167e6004850154612576565b9081600486015560038610156109a257600381101591826109a257868214806119c3575b15611784575050506116b390612576565b93600383016116c28154612576565b80915560006006850155600584019384546064811061172e575b509354600490940154604080519586526020860192909252908401526001927ff258ac71ca04f4b808e0c4f36355a6bbcd15af6c6cf087ba2655d6b05c81d2d99080606081015b0390a25b019161161d565b919060028301809311610f95576117236004876064867ff258ac71ca04f4b808e0c4f36355a6bbcd15af6c6cf087ba2655d6b05c81d2d99760019b551161177b575b9750505090916116dc565b60648155611770565b91996006869296989498016117998154612576565b80915560036006549411156119b9575b60018111611975575b5060058201549a60468c11611957575b600183019182549260646117d687866125b2565b0493600a60025404806117e987846125a5565b10611937575b50600592611809926118028780946125a5565b90556125c5565b9c111561192b5760058301546004198101908111610f955760058401555b6109a2577f43b8287040b746addd91738208fe6a278fd8dc7325e4979c30bf3c8d0409d7177ff258ac71ca04f4b808e0c4f36355a6bbcd15af6c6cf087ba2655d6b05c81d2d9938592600198600090156000146118fd57506118c36040516118906040826123d9565b60078152664e6f20766f746560c81b60208201525b60405193849384526020840152606060408401526060830190612351565b0390a260058101546118f560046003840154930154604051938493846040919493926060820195825260208201520152565b0390a2611727565b506118c360405161190f6040826123d9565b600a81526957726f6e6720766f746560b01b60208201526118a5565b60006005840155611827565b6118029550926118099261194d600595846125a5565b96509250926117ef565b92605081029080820460501490151715610f955760649004926117c2565b9092906000198101908111610f9557600a810290808204600a1490151715610f95576119a0916125c5565b91605083116119b0575b8b6117b2565b605092506119aa565b9260011c926117a9565b50600092508115156116a2565b915093926000908182809460058701549781611fa2575b505060018601546001600160a01b03848116911603611efc57508580611e70575b505b60005b6006860154811015611acb57611a2681600688016124d0565b9054600391821b1c6001600160a01b03166000818152600889016020526040902054909160ff91909116908a10156109a25760038110156109a2578914611a89575b6000908152600e60205260409020600201805460ff19169055600101611a0d565b9490611ac28560019388600052600e602052611aac8286604060002001546125c5565b89600052600e60205285604060002001556125c5565b95909150611a68565b5085848660ff601282015416600014611e0257506004356000908152600b60205260409020600f81018054929493929091906001600160a01b038781169116148385878315611c7157505050601082018054600381029080820460031490151715610f9557935460405163a9059cbb60e01b81526001600160a01b03909116600482015260029490941c60248501819052936020818060448101038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19788156107a357611bc6611c4996600494611bcc94600080516020612ba28339815191529c611c54575b50546125a5565b906125c5565b925b01805460ff19166005179055604080516001600160a01b03891681526020810192909252600435917fd4406e003c73582310b2b897fd7cacd5866ecaed769ac129eb0b1dcbb09011169190a2604051938493600435978590949392606092608083019660018060a01b03168352602083015260408201520152565b0390a25b6001600055005b611c6c9060203d60201161079c5761078e81836123d9565b611bbf565b60108501805460018088018054969c50929991901c97509193909291906001600160a01b038c8116911603611d5f5750505460405163a9059cbb60e01b81526001600160a01b03909116600482015260248101859052906020828060448101038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156107a357611bc686611d34611c4998600080516020612ba28339815191529c600497611d3c97611d42575b506125c5565b985b546125a5565b92611bce565b611d5a9060203d60201161079c5761078e81836123d9565b611d2e565b600286015460405163a9059cbb60e01b81526001600160a01b039091166004820152602481018890529199509697509190506020828060448101038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156107a357611bc686611dfc611c4998600080516020612ba28339815191529c600497611d3c97611d4257506125c5565b99611d36565b600080516020612ba2833981519152939291611e6891611e24600854426125c5565b60118201556004600360ff19828401541617910155604051938493600435978590949392606092608083019660018060a01b03168352602083015260408201520152565b0390a2611c4d565b600186015460405163a9059cbb60e01b81526001600160a01b03909116600482015260248101919091526020818060448101038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af180156107a35715611a0857611ef59060203d60201161079c5761078e81836123d9565b5087611a08565b9590508080611f0c575b50611a0a565b600286015460405163a9059cbb60e01b81526001600160a01b0390911660048201526024810191909152602081806044810103818a7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af18015611f975715611f0657611f909060203d60201161079c5761078e81836123d9565b5087611f06565b6040513d89823e3d90fd5b611fad929550612585565b9288806119e7565b600291611616565b60028101546001600160a01b03166115e4565b60405162461bcd60e51b815260206004820152601a60248201527f52657665616c207068617365206e6f7420656e646564207965740000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f43617365206e6f7420726561647920666f7220766572646963740000000000006044820152606490fd5b3461016a57606036600319011261016a57602435600435600382101561016a5780600052600b60205260406000209160ff60048401541660068110156109a25760016120a691146124e8565b600c8301544211156122bd57600d8301544211612283576120ca6108d63385612624565b3360009081526007840160208190526040909120541561224d5733600090815260088501602081905260409091205460ff1660038110156109a2576122155760405191602083016000938560f81b82526044356021820152602181526121316041826123d9565b5190203384526020919091526040832054036121d05733825260205260409020805460ff191660ff831617905560009260001982016121ac576009016121778154612576565b90555b604051926109a25782527ffb0a2a4b906424480a54d601db26ad920592115a97358d199495345723df34cb60203393a3005b600282146121bb575b5061217a565b600a016121c88154612576565b9055836121b5565b60405162461bcd60e51b815260206004820152601a60248201527f566f746520646f6573206e6f74206d6174636820636f6d6d69740000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c995d99585b195960821b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d111a59081b9bdd0818dbdb5b5a5d60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601260248201527114995d99585b081c1a185cd948195b99195960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f436f6d6d6974207068617365206e6f7420656e646564207965740000000000006044820152606490fd5b3461016a57600036600319011261016a576020600654604051908152f35b3461016a57600036600319011261016a576020906009548152f35b600435906001600160a01b038216820361016a57565b919082519283825260005b84811061237d575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161235c565b9060068210156109a25752565b90600182811c921680156123cf575b60208310146123b957565b634e487b7160e01b600052602260045260246000fd5b91607f16916123ae565b90601f8019910116810190811067ffffffffffffffff821117610fab57604052565b906040519182600082549261240f8461239f565b808452936001811690811561247d5750600114612436575b50612434925003836123d9565b565b90506000929192526020600020906000915b8183106124615750509060206124349282010138612427565b6020919350806001915483858901015201910190918492612448565b90506020925061243494915060ff191682840152151560051b82010138612427565b600c548110156124ba57600c60005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b80548210156124ba5760005260206000200190600090565b156124ef57565b60405162461bcd60e51b81526020600482015260136024820152724e6f7420696e20766f74696e6720706861736560681b6044820152606490fd5b1561253157565b60405162461bcd60e51b815260206004820152601960248201527f4e6f742061206a75726f7220666f7220746869732063617365000000000000006044820152606490fd5b6000198114610f955760010190565b811561258f570490565b634e487b7160e01b600052601260045260246000fd5b91908203918211610f9557565b81810292918115918404141715610f9557565b91908201809211610f9557565b9081602091031261016a5751801515810361016a5790565b90815491600160401b831015610fab57826112e2916001612434950181556124d0565b818110612618575050565b6000815560010161260d565b9060005b60068301805482101561266b578161263f916124d0565b905460039190911b1c6001600160a01b039081169083161461266357600101612628565b505050600190565b50505050600090565b600260005414612685576002600055565b633ee5aeb560e01b60005260046000fd5b67ffffffffffffffff8111610fab5760051b60200190565b906126b882612696565b6126c560405191826123d9565b82815280926126d6601f1991612696565b0190602036910137565b80518210156124ba5760209160051b010190565b811561258f570690565b9081600052600b6020526040600020600c5492601382015490818510612959578185146128fe576040516020810191428352446040830152606082015265185c1c19585b60d21b6080820152606681526127596086826123d9565b51902091612766856126ae565b6000906000935b808510806128f5575b1561288e576000968760015b156127df575b506000976127d96127d38b8a846127cb8c6127bd60405193849260208401968791606093918352602083015260408201520190565b03601f1981018352826123d9565b5190206126f4565b91612576565b98612782565b6127e981856126e0565b51151580612885575b612788579092975094909461280781896126e0565b5115612821575b5061281890612576565b9395909561276d565b612818919361283f82600161283961287e958d6126e0565b5261249f565b905460039190911b1c6001600160a01b031661285e81600689016125ea565b600052600e6020526002604060002001600160ff19825416179055612576565b929061280e565b508989106127f2565b95965050509050600691500154036128a257565b60405162461bcd60e51b815260206004820152602560248201527f4661696c656420746f2061737369676e20656e6f7567682061707065616c206a60448201526475726f727360d81b6064820152608490fd5b50878310612776565b509192915060060160005b82811061291557505050565b8061292160019261249f565b838060a01b0391549060031b1c1661293981856125ea565b600052600e60205260026040600020018260ff1982541617905501612909565b60405162461bcd60e51b815260206004820152602660248201527f4e6f7420656e6f75676820617661696c61626c65206a75726f727320666f7220604482015265185c1c19585b60d21b6064820152608490fd5b9081600052600b602052604060002090600c54926003548414612b48576040929192516129f4816127bd602082019444428791606093918352602083015260408201520190565b51902090612a01846126ae565b90600080925b600354841080612b3f575b15612ae4576000958660015b15612a5f575b50600096612a596127d38a89846127cb8b6127bd60405193849260208401968791606093918352602083015260408201520190565b97612a1e565b612a6981846126e0565b51151580612adb575b612a24579094919650612a8581886126e0565b5115612a9d575b50612a9690612576565b9294612a07565b612a969192612ab5826001612839612ad4958c6126e0565b905460039190911b1c6001600160a01b031661285e81600688016125ea565b9190612a8c565b50888810612a72565b50509150506006919250015460035403612afa57565b60405162461bcd60e51b815260206004820152601e60248201527f4661696c656420746f2061737369676e20656e6f756768206a75726f727300006044820152606490fd5b50868210612a12565b50919060060160005b828110612b5d57505050565b80612b6960019261249f565b838060a01b0391549060031b1c16612b8181856125ea565b600052600e60205260026040600020018260ff1982541617905501612b5156feb179b08881890bd8e13edde8255f745991199906456a378692ec11430a4560a9a2646970667358221220ecb989fcadbe961aaf747d5c8835d0bea1f22d094fb29d956f8a665189f95cd464736f6c634300081c0033",
              "opcodes": "PUSH1 0xA0 CALLVALUE PUSH2 0x424 JUMPI PUSH1 0x1F PUSH2 0x3037 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x429 JUMPI DUP1 DUP5 SWAP3 PUSH2 0x140 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x424 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x424 JUMPI PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP6 ADD MLOAD SWAP2 PUSH1 0xC0 DUP7 ADD MLOAD SWAP4 PUSH1 0xE0 DUP8 ADD MLOAD SWAP6 PUSH2 0x120 PUSH2 0x100 DUP10 ADD MLOAD SWAP9 ADD MLOAD SWAP9 PUSH1 0x1 PUSH1 0x0 SSTORE DUP1 ISZERO PUSH2 0x3DF JUMPI DUP2 ISZERO PUSH2 0x39A JUMPI DUP3 ISZERO PUSH2 0x355 JUMPI DUP4 ISZERO ISZERO DUP1 PUSH2 0x34A JUMPI JUMPDEST ISZERO PUSH2 0x311 JUMPI DUP5 ISZERO PUSH2 0x2CD JUMPI DUP6 ISZERO PUSH2 0x289 JUMPI PUSH1 0x64 DUP8 GT PUSH2 0x244 JUMPI DUP8 ISZERO PUSH2 0x1EC JUMPI DUP9 ISZERO PUSH2 0x1A8 JUMPI DUP4 DUP11 LT PUSH2 0x14D JUMPI PUSH1 0x80 MSTORE PUSH1 0x1 SSTORE PUSH1 0x2 SSTORE PUSH1 0x3 SSTORE PUSH1 0x4 SSTORE PUSH1 0x5 SSTORE PUSH1 0x6 SSTORE PUSH1 0x7 SSTORE PUSH1 0x8 SSTORE PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0xA SSTORE PUSH1 0x40 MLOAD PUSH2 0x2BF7 SWAP1 DUP2 PUSH2 0x440 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x50C ADD MSTORE DUP2 DUP2 PUSH2 0x84D ADD MSTORE DUP2 DUP2 PUSH2 0xAD2 ADD MSTORE DUP2 DUP2 PUSH2 0xE14 ADD MSTORE DUP2 DUP2 PUSH2 0x13BF ADD MSTORE DUP2 DUP2 PUSH2 0x1B6B ADD MSTORE DUP2 DUP2 PUSH2 0x1CD6 ADD MSTORE DUP2 DUP2 PUSH2 0x1D9F ADD MSTORE DUP2 DUP2 PUSH2 0x1EA8 ADD MSTORE PUSH2 0x1F43 ADD MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41707065616C206A7572792073697A65206D757374206265203E3D2072656775 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x6C6172206A7572792073697A65 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41707065616C206475726174696F6E206D75737420626520706F736974697665 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41707065616C206465706F736974206D756C7469706C696572206D7573742062 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x6520706F736974697665 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50656E616C747920726174652063616E6E6F7420657863656564203130302500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657665616C206475726174696F6E206D75737420626520706F736974697665 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D6D6974206475726174696F6E206D75737420626520706F736974697665 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964206A7572792073697A65 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x64 DUP5 GT ISZERO PUSH2 0xA7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4A75726F72207374616B65206D75737420626520706F73697469766500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46696C696E6720666565206D75737420626520706F7369746976650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH2 0x100 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4495C99 EQ PUSH2 0x2320 JUMPI POP DUP1 PUSH4 0x59A184C EQ PUSH2 0x2302 JUMPI DUP1 PUSH4 0xB05B14F EQ PUSH2 0x205A JUMPI DUP1 PUSH4 0x1C204D0E EQ PUSH2 0x1569 JUMPI DUP1 PUSH4 0x232E0C87 EQ PUSH2 0x154B JUMPI DUP1 PUSH4 0x317E48B6 EQ PUSH2 0x152D JUMPI DUP1 PUSH4 0x43BBDD3F EQ PUSH2 0x1263 JUMPI DUP1 PUSH4 0x4C4B848C EQ PUSH2 0x118A JUMPI DUP1 PUSH4 0x536C8C15 EQ PUSH2 0x116C JUMPI DUP1 PUSH4 0x6350EAE8 EQ PUSH2 0x114E JUMPI DUP1 PUSH4 0x6F833811 EQ PUSH2 0x1130 JUMPI DUP1 PUSH4 0x7035ABA2 EQ PUSH2 0x106F JUMPI DUP1 PUSH4 0x71929AD5 EQ PUSH2 0xDB7 JUMPI DUP1 PUSH4 0x7E69B7B0 EQ PUSH2 0x9F4 JUMPI DUP1 PUSH4 0x867BC61B EQ PUSH2 0x9D6 JUMPI DUP1 PUSH4 0x886A6DE1 EQ PUSH2 0x9B8 JUMPI DUP1 PUSH4 0x9DA69180 EQ PUSH2 0x87C JUMPI DUP1 PUSH4 0x9EACB5B9 EQ PUSH2 0x837 JUMPI DUP1 PUSH4 0xA2FEBE29 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xB55796F3 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xC3A90635 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xD496C455 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xF09790DD EQ PUSH2 0x16F JUMPI PUSH4 0xF643D3D7 EQ PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x16A JUMPI PUSH2 0x151 PUSH1 0x20 SWAP2 PUSH2 0x249F JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0xA0 MSTORE PUSH1 0x2 DUP4 ADD SLOAD AND PUSH1 0xE0 MSTORE PUSH2 0x1BB PUSH1 0x3 DUP4 ADD PUSH2 0x23FB JUMP JUMPDEST SWAP2 PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD AND PUSH1 0x80 MSTORE DUP1 DUP1 DUP1 PUSH1 0x5 DUP2 ADD SLOAD SWAP6 PUSH1 0x9 DUP3 ADD SLOAD PUSH1 0xA DUP4 ADD SLOAD PUSH1 0xB DUP5 ADD SLOAD PUSH1 0xC DUP6 ADD SLOAD SWAP2 PUSH1 0xD DUP7 ADD SLOAD SWAP4 PUSH2 0x257 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xE DUP10 ADD SLOAD AND SWAP7 PUSH1 0x13 PUSH1 0xFF PUSH1 0x12 PUSH1 0x11 PUSH1 0x10 DUP14 PUSH1 0xF PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP14 ADD SLOAD SWAP14 ADD SLOAD SWAP14 ADD SLOAD AND SWAP13 ADD SLOAD SWAP13 PUSH1 0x40 MLOAD PUSH1 0xC0 MSTORE PUSH1 0xC0 MLOAD MSTORE PUSH1 0xA0 MLOAD PUSH1 0x20 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0xE0 MLOAD PUSH1 0x40 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x220 PUSH1 0x60 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x220 PUSH1 0xC0 MLOAD ADD SWAP1 PUSH2 0x2351 JUMP JUMPDEST SWAP12 PUSH2 0x269 PUSH1 0x80 PUSH1 0xC0 MLOAD ADD PUSH1 0x80 MLOAD PUSH2 0x2392 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0xC0 DUP1 MLOAD ADD MSTORE PUSH1 0xE0 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x100 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x120 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x140 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x160 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x180 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x1A0 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x1C0 PUSH1 0xC0 MLOAD ADD MSTORE ISZERO ISZERO PUSH2 0x1E0 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x200 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0xC0 MLOAD SWAP1 SUB PUSH1 0xC0 MLOAD RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP3 ADD SLOAD AND PUSH1 0xFF PUSH1 0x4 DUP4 ADD SLOAD AND SWAP3 PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x9 DUP5 ADD SLOAD PUSH1 0xA DUP6 ADD SLOAD SWAP1 PUSH1 0xB DUP7 ADD SLOAD SWAP3 PUSH2 0x3AB PUSH2 0x3A0 PUSH1 0xC DUP10 ADD SLOAD SWAP7 PUSH1 0xD DUP11 ADD SLOAD SWAP9 PUSH2 0x37B PUSH1 0x3 DUP13 PUSH1 0xE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP13 ADD PUSH2 0x23FB JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP15 DUP16 SWAP1 DUP2 MSTORE ADD MSTORE PUSH1 0x40 DUP14 ADD MSTORE PUSH2 0x180 PUSH1 0x60 DUP14 ADD MSTORE PUSH2 0x180 DUP13 ADD SWAP1 PUSH2 0x2351 JUMP JUMPDEST SWAP9 PUSH1 0x80 DUP12 ADD SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3F7 PUSH2 0x233B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xE0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF DUP2 SLOAD AND SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD SWAP2 PUSH1 0x6 PUSH1 0x5 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP5 PUSH1 0x40 MLOAD SWAP7 ISZERO ISZERO DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH2 0x474 PUSH2 0x233B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x16A JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x16A JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x16A JUMPI CALLDATASIZE PUSH1 0x24 DUP4 DUP6 ADD ADD GT PUSH2 0x16A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0x82D JUMPI JUMPDEST ISZERO PUSH2 0x7F4 JUMPI PUSH1 0xC SLOAD PUSH1 0x3 SLOAD GT PUSH2 0x7AF JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x774 JUMPI JUMPDEST POP ISZERO PUSH2 0x71A JUMPI PUSH1 0xA SLOAD SWAP1 PUSH2 0x550 DUP3 PUSH2 0x2576 JUMP JUMPDEST PUSH1 0xA SSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP3 DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x3 DUP3 ADD SWAP1 DUP1 PUSH1 0x0 SWAP7 PUSH2 0x5B6 DUP5 SLOAD PUSH2 0x239F JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x6DF JUMPI JUMPDEST POP DUP8 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x673 JUMPI DUP9 SWAP3 PUSH2 0x665 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x4 DUP2 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x5 DUP3 ADD SSTORE TIMESTAMP PUSH1 0xB DUP3 ADD SSTORE PUSH1 0xD PUSH2 0x626 PUSH2 0x617 PUSH1 0x4 SLOAD TIMESTAMP PUSH2 0x25C5 JUMP JUMPDEST DUP1 PUSH1 0xC DUP6 ADD SSTORE PUSH1 0x5 SLOAD SWAP1 PUSH2 0x25C5 JUMP JUMPDEST SWAP2 ADD SSTORE PUSH2 0x632 DUP2 PUSH2 0x29AD JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x5C5F5F5C62D8082BC010726F98DB2630D9DA2B426A6717BD67BFBD9E8E179638 PUSH1 0x20 CALLER SWAP4 LOG4 DUP1 RETURN JUMPDEST PUSH1 0x24 SWAP3 POP ADD ADD CALLDATALOAD DUP8 DUP1 PUSH2 0x5D4 JUMP JUMPDEST DUP5 DUP10 MSTORE PUSH1 0x20 DUP10 KECCAK256 SWAP3 POP SWAP1 PUSH1 0x1F NOT DUP5 AND DUP10 JUMPDEST DUP2 DUP2 LT PUSH2 0x6C4 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x6A7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x5E9 JUMP JUMPDEST ADD PUSH1 0x24 ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP5 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x69A JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 PUSH1 0x24 DUP9 DUP9 ADD ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x684 JUMP JUMPDEST PUSH2 0x70A SWAP1 DUP6 DUP11 MSTORE PUSH1 0x20 DUP11 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x710 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x260D JUMP JUMPDEST DUP9 PUSH2 0x5BF JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46696C696E6720666565207472616E73666572206661696C65642E2044696420 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x796F7520617070726F76653F PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x796 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x79C JUMPI JUMPDEST PUSH2 0x78E DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x25D2 JUMP JUMPDEST DUP5 PUSH2 0x53D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820617661696C61626C65206A75726F72730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A5908191959995B99185B9D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER DUP3 EQ ISZERO PUSH2 0x4C6 JUMP JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x1 PUSH2 0x8BB SWAP2 EQ PUSH2 0x24E8 JUMP JUMPDEST PUSH1 0xC DUP2 ADD SLOAD TIMESTAMP GT PUSH2 0x968 JUMPI PUSH1 0x7 SWAP1 PUSH2 0x8DB PUSH2 0x8D6 CALLER DUP4 PUSH2 0x2624 JUMP JUMPDEST PUSH2 0x252A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 ADD PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x92F JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x24 CALLDATALOAD SWAP1 SSTORE SWAP2 SWAP1 PUSH32 0x3834A2C8EA101E1468B529270D35FBFF0A12DE32A5A7E5729B8B4DAD6FB32C01 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1C9958591E4818DBDB5B5A5D1D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x10DBDB5B5A5D081C1A185CD948195B991959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA10 PUSH2 0x2674 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x4 DUP2 ADD PUSH1 0xFF DUP2 SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x3 SUB PUSH2 0xD7A JUMPI PUSH1 0x11 DUP3 ADD SLOAD TIMESTAMP GT PUSH2 0xD3C JUMPI PUSH1 0x12 DUP3 ADD SWAP2 PUSH1 0xFF DUP4 SLOAD AND PUSH2 0xCFF JUMPI PUSH1 0xE DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP2 SUB PUSH2 0xCFA JUMPI POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xCB5 JUMPI PUSH2 0xA9D PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x7 SLOAD SWAP1 PUSH2 0x25B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP4 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xC96 JUMPI JUMPDEST POP ISZERO PUSH2 0xC51 JUMPI PUSH1 0xF DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x10 DUP3 ADD DUP5 SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 OR SWAP1 SWAP2 SSTORE DUP3 SLOAD AND PUSH1 0x4 OR DUP3 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x13 DUP4 ADD SSTORE PUSH1 0x0 SWAP1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0xA DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD SWAP5 SWAP2 SWAP4 PUSH1 0x7 DUP6 ADD SWAP4 PUSH1 0x8 DUP7 ADD SWAP4 SWAP2 SWAP3 JUMPDEST DUP8 SLOAD DUP2 LT ISZERO PUSH2 0xBC9 JUMPI DUP1 PUSH2 0xB7C PUSH1 0x1 SWAP3 DUP11 PUSH2 0x24D0 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0xA0 DUP4 SWAP1 SHL DUP4 SWAP1 SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP9 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE DUP9 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE ADD PUSH2 0xB66 JUMP JUMPDEST POP DUP6 DUP8 DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE DUP1 PUSH2 0xC35 JUMPI JUMPDEST POP POP PUSH2 0xBE3 DUP4 PUSH2 0x26FE JUMP JUMPDEST PUSH1 0xD PUSH2 0xBF4 PUSH2 0x617 PUSH1 0x4 SLOAD TIMESTAMP PUSH2 0x25C5 JUMP JUMPDEST SWAP2 ADD SSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x7055524DC69306FE397256B9B4EF9FE5A3B01235FDB799638B61E323B9E2C3BC PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH2 0xC4A SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x260D JUMP JUMPDEST DUP5 DUP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41707065616C206465706F736974207472616E73666572206661696C65640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xCAF SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x79C JUMPI PUSH2 0x78E DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP7 PUSH2 0xB03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206C6F73696E672070617274792063616E2061707065616C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10D85CD948185B1C9958591E48185C1C19585B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x105C1C19585B08191958591B1A5B99481C185CDCD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10D85CD9481B9BDD081C995CDBDB1D9959081E595D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1035 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1016 JUMPI JUMPDEST POP ISZERO PUSH2 0xFC1 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0xFAB JUMPI PUSH1 0x6 SWAP2 PUSH1 0x40 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x60 DUP5 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x80 DUP6 ADD SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH2 0xEEE PUSH1 0xA0 DUP8 ADD SWAP4 PUSH1 0x32 DUP6 MSTORE PUSH1 0xC0 DUP9 ADD SWAP6 PUSH1 0x0 DUP8 MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH2 0xED0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP10 MLOAD ISZERO ISZERO DUP11 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x1 DUP10 ADD SSTORE MLOAD ISZERO ISZERO PUSH1 0x2 DUP9 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x3 DUP7 ADD SSTORE MLOAD PUSH1 0x4 DUP6 ADD SSTORE MLOAD PUSH1 0x5 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xFAB JUMPI PUSH2 0xF28 DUP2 PUSH1 0x1 PUSH2 0xF46 SWAP4 ADD PUSH1 0xC SSTORE PUSH1 0xC PUSH2 0x24D0 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP1 SWAP2 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0xF95 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x302E82B0B7908CFAC0232EEB6A83332CBF587D0CB58EAA7BA72F884C149910FA PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E207472616E73666572206661696C65642E2044696420796F752061 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x7070726F76653F PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x102F SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x79C JUMPI PUSH2 0x78E DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481C9959DA5CDD195C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1111 JUMPI POP POP POP DUP2 PUSH2 0x10C5 SWAP2 SUB DUP3 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x10EF JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x10E1 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x10AF JUMP JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH2 0x11A3 PUSH2 0x233B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1227 JUMPI PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x6 SWAP1 SWAP4 ADD SLOAD DUP2 ISZERO PUSH2 0x121C JUMPI PUSH1 0x64 DUP4 MUL SWAP4 DUP4 DUP6 DIV PUSH1 0x64 EQ DUP5 ISZERO OR ISZERO PUSH2 0xF95 JUMPI PUSH2 0x11FE DUP4 PUSH1 0xA0 SWAP7 PUSH2 0x2585 JUMP JUMPDEST SWAP3 JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0xA0 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x129D5C9BDC881B9BDD081C9959DA5CDD195C9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF DUP2 SLOAD AND ISZERO PUSH2 0x14EF JUMPI PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0x1498 JUMPI PUSH1 0x1 ADD SLOAD CALLER PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xC SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0xF95 JUMPI PUSH2 0x12C3 SWAP1 PUSH2 0x249F JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1306 DUP2 PUSH2 0x12E2 DUP5 PUSH2 0x249F JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL SWAP4 SWAP1 SWAP2 SHL NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0xC SLOAD DUP1 ISZERO PUSH2 0x1482 JUMPI PUSH2 0x13B9 SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x0 NOT ADD PUSH2 0x1331 DUP2 PUSH2 0x249F JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0xC SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0xE DUP3 MSTORE PUSH1 0x0 PUSH1 0x6 PUSH1 0x40 DUP3 KECCAK256 DUP3 DUP2 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD SSTORE DUP3 PUSH1 0x4 DUP3 ADD SSTORE DUP3 PUSH1 0x5 DUP3 ADD SSTORE ADD SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0xD DUP3 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1463 JUMPI JUMPDEST POP ISZERO PUSH2 0x1426 JUMPI CALLER PUSH32 0xF67E7162188CB7E3F756D0F6D7C86D1B7CC88B891AE19DD58118705A7859034B PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x147C SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x79C JUMPI PUSH2 0x78E DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 PUSH2 0x13F8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420756E7265676973746572207768696C652073657276696E6720 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x6F6E20612063617365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2737BA1030903932B3B4B9BA32B932B210353AB937B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH2 0x1582 PUSH2 0x2674 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x1 SUB PUSH2 0x2015 JUMPI PUSH1 0xD DUP2 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x1FD0 JUMPI PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH1 0xA DUP3 ADD SLOAD LT ISZERO PUSH2 0x1FBD JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0xE DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP5 ADD SLOAD SWAP1 SWAP2 AND SUB PUSH2 0x1FB5 JUMPI PUSH1 0x1 SWAP2 JUMPDEST PUSH1 0x0 SWAP3 DUP4 SWAP1 DUP2 JUMPDEST PUSH1 0x6 DUP5 ADD SLOAD DUP4 LT ISZERO PUSH2 0x19D0 JUMPI PUSH2 0x1636 DUP4 PUSH1 0x6 DUP7 ADD PUSH2 0x24D0 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP3 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0x8 DUP9 ADD PUSH1 0x20 MSTORE KECCAK256 SLOAD AND SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH2 0x167E PUSH1 0x4 DUP6 ADD SLOAD PUSH2 0x2576 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x4 DUP7 ADD SSTORE PUSH1 0x3 DUP7 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x3 DUP2 LT ISZERO SWAP2 DUP3 PUSH2 0x9A2 JUMPI DUP7 DUP3 EQ DUP1 PUSH2 0x19C3 JUMPI JUMPDEST ISZERO PUSH2 0x1784 JUMPI POP POP POP PUSH2 0x16B3 SWAP1 PUSH2 0x2576 JUMP JUMPDEST SWAP4 PUSH1 0x3 DUP4 ADD PUSH2 0x16C2 DUP2 SLOAD PUSH2 0x2576 JUMP JUMPDEST DUP1 SWAP2 SSTORE PUSH1 0x0 PUSH1 0x6 DUP6 ADD SSTORE PUSH1 0x5 DUP5 ADD SWAP4 DUP5 SLOAD PUSH1 0x64 DUP2 LT PUSH2 0x172E JUMPI JUMPDEST POP SWAP4 SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP5 ADD MSTORE PUSH1 0x1 SWAP3 PUSH32 0xF258AC71CA04F4B808E0C4F36355A6BBCD15AF6C6CF087BA2655D6B05C81D2D9 SWAP1 DUP1 PUSH1 0x60 DUP2 ADD JUMPDEST SUB SWAP1 LOG2 JUMPDEST ADD SWAP2 PUSH2 0x161D JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x2 DUP4 ADD DUP1 SWAP4 GT PUSH2 0xF95 JUMPI PUSH2 0x1723 PUSH1 0x4 DUP8 PUSH1 0x64 DUP7 PUSH32 0xF258AC71CA04F4B808E0C4F36355A6BBCD15AF6C6CF087BA2655D6B05C81D2D9 SWAP8 PUSH1 0x1 SWAP12 SSTORE GT PUSH2 0x177B JUMPI JUMPDEST SWAP8 POP POP POP SWAP1 SWAP2 PUSH2 0x16DC JUMP JUMPDEST PUSH1 0x64 DUP2 SSTORE PUSH2 0x1770 JUMP JUMPDEST SWAP2 SWAP10 PUSH1 0x6 DUP7 SWAP3 SWAP7 SWAP9 SWAP5 SWAP9 ADD PUSH2 0x1799 DUP2 SLOAD PUSH2 0x2576 JUMP JUMPDEST DUP1 SWAP2 SSTORE PUSH1 0x3 PUSH1 0x6 SLOAD SWAP5 GT ISZERO PUSH2 0x19B9 JUMPI JUMPDEST PUSH1 0x1 DUP2 GT PUSH2 0x1975 JUMPI JUMPDEST POP PUSH1 0x5 DUP3 ADD SLOAD SWAP11 PUSH1 0x46 DUP13 GT PUSH2 0x1957 JUMPI JUMPDEST PUSH1 0x1 DUP4 ADD SWAP2 DUP3 SLOAD SWAP3 PUSH1 0x64 PUSH2 0x17D6 DUP8 DUP7 PUSH2 0x25B2 JUMP JUMPDEST DIV SWAP4 PUSH1 0xA PUSH1 0x2 SLOAD DIV DUP1 PUSH2 0x17E9 DUP8 DUP5 PUSH2 0x25A5 JUMP JUMPDEST LT PUSH2 0x1937 JUMPI JUMPDEST POP PUSH1 0x5 SWAP3 PUSH2 0x1809 SWAP3 PUSH2 0x1802 DUP8 DUP1 SWAP5 PUSH2 0x25A5 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x25C5 JUMP JUMPDEST SWAP13 GT ISZERO PUSH2 0x192B JUMPI PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x4 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0xF95 JUMPI PUSH1 0x5 DUP5 ADD SSTORE JUMPDEST PUSH2 0x9A2 JUMPI PUSH32 0x43B8287040B746ADDD91738208FE6A278FD8DC7325E4979C30BF3C8D0409D717 PUSH32 0xF258AC71CA04F4B808E0C4F36355A6BBCD15AF6C6CF087BA2655D6B05C81D2D9 SWAP4 DUP6 SWAP3 PUSH1 0x1 SWAP9 PUSH1 0x0 SWAP1 ISZERO PUSH1 0x0 EQ PUSH2 0x18FD JUMPI POP PUSH2 0x18C3 PUSH1 0x40 MLOAD PUSH2 0x1890 PUSH1 0x40 DUP3 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x4E6F20766F7465 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x2351 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x18F5 PUSH1 0x4 PUSH1 0x3 DUP5 ADD SLOAD SWAP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x1727 JUMP JUMPDEST POP PUSH2 0x18C3 PUSH1 0x40 MLOAD PUSH2 0x190F PUSH1 0x40 DUP3 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0xA DUP2 MSTORE PUSH10 0x57726F6E6720766F7465 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP5 ADD SSTORE PUSH2 0x1827 JUMP JUMPDEST PUSH2 0x1802 SWAP6 POP SWAP3 PUSH2 0x1809 SWAP3 PUSH2 0x194D PUSH1 0x5 SWAP6 DUP5 PUSH2 0x25A5 JUMP JUMPDEST SWAP7 POP SWAP3 POP SWAP3 PUSH2 0x17EF JUMP JUMPDEST SWAP3 PUSH1 0x50 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x50 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xF95 JUMPI PUSH1 0x64 SWAP1 DIV SWAP3 PUSH2 0x17C2 JUMP JUMPDEST SWAP1 SWAP3 SWAP1 PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0xF95 JUMPI PUSH1 0xA DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0xA EQ SWAP1 ISZERO OR ISZERO PUSH2 0xF95 JUMPI PUSH2 0x19A0 SWAP2 PUSH2 0x25C5 JUMP JUMPDEST SWAP2 PUSH1 0x50 DUP4 GT PUSH2 0x19B0 JUMPI JUMPDEST DUP12 PUSH2 0x17B2 JUMP JUMPDEST PUSH1 0x50 SWAP3 POP PUSH2 0x19AA JUMP JUMPDEST SWAP3 PUSH1 0x1 SHR SWAP3 PUSH2 0x17A9 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 POP DUP2 ISZERO ISZERO PUSH2 0x16A2 JUMP JUMPDEST SWAP2 POP SWAP4 SWAP3 PUSH1 0x0 SWAP1 DUP2 DUP3 DUP1 SWAP5 PUSH1 0x5 DUP8 ADD SLOAD SWAP8 DUP2 PUSH2 0x1FA2 JUMPI JUMPDEST POP POP PUSH1 0x1 DUP7 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND SUB PUSH2 0x1EFC JUMPI POP DUP6 DUP1 PUSH2 0x1E70 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP7 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1ACB JUMPI PUSH2 0x1A26 DUP2 PUSH1 0x6 DUP9 ADD PUSH2 0x24D0 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 DUP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 DUP10 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND SWAP1 DUP11 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x9A2 JUMPI DUP10 EQ PUSH2 0x1A89 JUMPI JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x1A0D JUMP JUMPDEST SWAP5 SWAP1 PUSH2 0x1AC2 DUP6 PUSH1 0x1 SWAP4 DUP9 PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH2 0x1AAC DUP3 DUP7 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x25C5 JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE DUP6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SSTORE PUSH2 0x25C5 JUMP JUMPDEST SWAP6 SWAP1 SWAP2 POP PUSH2 0x1A68 JUMP JUMPDEST POP DUP6 DUP5 DUP7 PUSH1 0xFF PUSH1 0x12 DUP3 ADD SLOAD AND PUSH1 0x0 EQ PUSH2 0x1E02 JUMPI POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF DUP2 ADD DUP1 SLOAD SWAP3 SWAP5 SWAP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ DUP4 DUP6 DUP8 DUP4 ISZERO PUSH2 0x1C71 JUMPI POP POP POP PUSH1 0x10 DUP3 ADD DUP1 SLOAD PUSH1 0x3 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x3 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xF95 JUMPI SWAP4 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 SWAP5 SWAP1 SWAP5 SHR PUSH1 0x24 DUP6 ADD DUP2 SWAP1 MSTORE SWAP4 PUSH1 0x20 DUP2 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP8 DUP9 ISZERO PUSH2 0x7A3 JUMPI PUSH2 0x1BC6 PUSH2 0x1C49 SWAP7 PUSH1 0x4 SWAP5 PUSH2 0x1BCC SWAP5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP13 PUSH2 0x1C54 JUMPI JUMPDEST POP SLOAD PUSH2 0x25A5 JUMP JUMPDEST SWAP1 PUSH2 0x25C5 JUMP JUMPDEST SWAP3 JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x5 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x4 CALLDATALOAD SWAP2 PUSH32 0xD4406E003C73582310B2B897FD7CACD5866ECAED769AC129EB0B1DCBB0901116 SWAP2 SWAP1 LOG2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x4 CALLDATALOAD SWAP8 DUP6 SWAP1 SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x80 DUP4 ADD SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH2 0x1C6C SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x79C JUMPI PUSH2 0x78E DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x10 DUP6 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP9 ADD DUP1 SLOAD SWAP7 SWAP13 POP SWAP3 SWAP10 SWAP2 SWAP1 SHR SWAP8 POP SWAP2 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND SWAP2 AND SUB PUSH2 0x1D5F JUMPI POP POP SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 PUSH1 0x20 DUP3 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7A3 JUMPI PUSH2 0x1BC6 DUP7 PUSH2 0x1D34 PUSH2 0x1C49 SWAP9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP13 PUSH1 0x4 SWAP8 PUSH2 0x1D3C SWAP8 PUSH2 0x1D42 JUMPI JUMPDEST POP PUSH2 0x25C5 JUMP JUMPDEST SWAP9 JUMPDEST SLOAD PUSH2 0x25A5 JUMP JUMPDEST SWAP3 PUSH2 0x1BCE JUMP JUMPDEST PUSH2 0x1D5A SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x79C JUMPI PUSH2 0x78E DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE SWAP2 SWAP10 POP SWAP7 SWAP8 POP SWAP2 SWAP1 POP PUSH1 0x20 DUP3 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7A3 JUMPI PUSH2 0x1BC6 DUP7 PUSH2 0x1DFC PUSH2 0x1C49 SWAP9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP13 PUSH1 0x4 SWAP8 PUSH2 0x1D3C SWAP8 PUSH2 0x1D42 JUMPI POP PUSH2 0x25C5 JUMP JUMPDEST SWAP10 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 SWAP3 SWAP2 PUSH2 0x1E68 SWAP2 PUSH2 0x1E24 PUSH1 0x8 SLOAD TIMESTAMP PUSH2 0x25C5 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SSTORE PUSH1 0x4 PUSH1 0x3 PUSH1 0xFF NOT DUP3 DUP5 ADD SLOAD AND OR SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x4 CALLDATALOAD SWAP8 DUP6 SWAP1 SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x80 DUP4 ADD SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x1 DUP7 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x7A3 JUMPI ISZERO PUSH2 0x1A08 JUMPI PUSH2 0x1EF5 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x79C JUMPI PUSH2 0x78E DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST POP DUP8 PUSH2 0x1A08 JUMP JUMPDEST SWAP6 SWAP1 POP DUP1 DUP1 PUSH2 0x1F0C JUMPI JUMPDEST POP PUSH2 0x1A0A JUMP JUMPDEST PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 DUP11 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x1F97 JUMPI ISZERO PUSH2 0x1F06 JUMPI PUSH2 0x1F90 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x79C JUMPI PUSH2 0x78E DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST POP DUP8 PUSH2 0x1F06 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1FAD SWAP3 SWAP6 POP PUSH2 0x2585 JUMP JUMPDEST SWAP3 DUP9 DUP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x2 SWAP2 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657665616C207068617365206E6F7420656E64656420796574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43617365206E6F7420726561647920666F722076657264696374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x16A JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0xFF PUSH1 0x4 DUP5 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x1 PUSH2 0x20A6 SWAP2 EQ PUSH2 0x24E8 JUMP JUMPDEST PUSH1 0xC DUP4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x22BD JUMPI PUSH1 0xD DUP4 ADD SLOAD TIMESTAMP GT PUSH2 0x2283 JUMPI PUSH2 0x20CA PUSH2 0x8D6 CALLER DUP6 PUSH2 0x2624 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP5 ADD PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD ISZERO PUSH2 0x224D JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 DUP6 ADD PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x9A2 JUMPI PUSH2 0x2215 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD PUSH1 0x0 SWAP4 DUP6 PUSH1 0xF8 SHL DUP3 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x21 DUP2 MSTORE PUSH2 0x2131 PUSH1 0x41 DUP3 PUSH2 0x23D9 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD SUB PUSH2 0x21D0 JUMPI CALLER DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x0 SWAP3 PUSH1 0x0 NOT DUP3 ADD PUSH2 0x21AC JUMPI PUSH1 0x9 ADD PUSH2 0x2177 DUP2 SLOAD PUSH2 0x2576 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH2 0x9A2 JUMPI DUP3 MSTORE PUSH32 0xFB0A2A4B906424480A54D601DB26AD920592115A97358D199495345723DF34CB PUSH1 0x20 CALLER SWAP4 LOG3 STOP JUMPDEST PUSH1 0x2 DUP3 EQ PUSH2 0x21BB JUMPI JUMPDEST POP PUSH2 0x217A JUMP JUMPDEST PUSH1 0xA ADD PUSH2 0x21C8 DUP2 SLOAD PUSH2 0x2576 JUMP JUMPDEST SWAP1 SSTORE DUP4 PUSH2 0x21B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F746520646F6573206E6F74206D6174636820636F6D6D6974000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E481C995D99585B1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x111A59081B9BDD0818DBDB5B5A5D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x14995D99585B081C1A185CD948195B991959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D6D6974207068617365206E6F7420656E64656420796574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x16A JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x237D JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x235C JUMP JUMPDEST SWAP1 PUSH1 0x6 DUP3 LT ISZERO PUSH2 0x9A2 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x23CF JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x23B9 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x23AE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xFAB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x240F DUP5 PUSH2 0x239F JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x247D JUMPI POP PUSH1 0x1 EQ PUSH2 0x2436 JUMPI JUMPDEST POP PUSH2 0x2434 SWAP3 POP SUB DUP4 PUSH2 0x23D9 JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2461 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x2434 SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0x2427 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x2448 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x2434 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x2427 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x24BA JUMPI PUSH1 0xC PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x24BA JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x24EF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F7420696E20766F74696E67207068617365 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2531 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061206A75726F7220666F722074686973206361736500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xF95 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x258F JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xF95 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xF95 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xF95 JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x16A JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x16A JUMPI SWAP1 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0xFAB JUMPI DUP3 PUSH2 0x12E2 SWAP2 PUSH1 0x1 PUSH2 0x2434 SWAP6 ADD DUP2 SSTORE PUSH2 0x24D0 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2618 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x260D JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP4 ADD DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x266B JUMPI DUP2 PUSH2 0x263F SWAP2 PUSH2 0x24D0 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND EQ PUSH2 0x2663 JUMPI PUSH1 0x1 ADD PUSH2 0x2628 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x2685 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xFAB JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x26B8 DUP3 PUSH2 0x2696 JUMP JUMPDEST PUSH2 0x26C5 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x23D9 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x26D6 PUSH1 0x1F NOT SWAP2 PUSH2 0x2696 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x24BA JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x258F JUMPI MOD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xC SLOAD SWAP3 PUSH1 0x13 DUP3 ADD SLOAD SWAP1 DUP2 DUP6 LT PUSH2 0x2959 JUMPI DUP2 DUP6 EQ PUSH2 0x28FE JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 TIMESTAMP DUP4 MSTORE PREVRANDAO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH6 0x185C1C19585B PUSH1 0xD2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x66 DUP2 MSTORE PUSH2 0x2759 PUSH1 0x86 DUP3 PUSH2 0x23D9 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0x2766 DUP6 PUSH2 0x26AE JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST DUP1 DUP6 LT DUP1 PUSH2 0x28F5 JUMPI JUMPDEST ISZERO PUSH2 0x288E JUMPI PUSH1 0x0 SWAP7 DUP8 PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x27DF JUMPI JUMPDEST POP PUSH1 0x0 SWAP8 PUSH2 0x27D9 PUSH2 0x27D3 DUP12 DUP11 DUP5 PUSH2 0x27CB DUP13 PUSH2 0x27BD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP7 DUP8 SWAP2 PUSH1 0x60 SWAP4 SWAP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x23D9 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 PUSH2 0x2576 JUMP JUMPDEST SWAP9 PUSH2 0x2782 JUMP JUMPDEST PUSH2 0x27E9 DUP2 DUP6 PUSH2 0x26E0 JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x2885 JUMPI JUMPDEST PUSH2 0x2788 JUMPI SWAP1 SWAP3 SWAP8 POP SWAP5 SWAP1 SWAP5 PUSH2 0x2807 DUP2 DUP10 PUSH2 0x26E0 JUMP JUMPDEST MLOAD ISZERO PUSH2 0x2821 JUMPI JUMPDEST POP PUSH2 0x2818 SWAP1 PUSH2 0x2576 JUMP JUMPDEST SWAP4 SWAP6 SWAP1 SWAP6 PUSH2 0x276D JUMP JUMPDEST PUSH2 0x2818 SWAP2 SWAP4 PUSH2 0x283F DUP3 PUSH1 0x1 PUSH2 0x2839 PUSH2 0x287E SWAP6 DUP14 PUSH2 0x26E0 JUMP JUMPDEST MSTORE PUSH2 0x249F JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x285E DUP2 PUSH1 0x6 DUP10 ADD PUSH2 0x25EA JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x2576 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x280E JUMP JUMPDEST POP DUP10 DUP10 LT PUSH2 0x27F2 JUMP JUMPDEST SWAP6 SWAP7 POP POP POP SWAP1 POP PUSH1 0x6 SWAP2 POP ADD SLOAD SUB PUSH2 0x28A2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2061737369676E20656E6F7567682061707065616C206A PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x75726F7273 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP8 DUP4 LT PUSH2 0x2776 JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP PUSH1 0x6 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2915 JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x2921 PUSH1 0x1 SWAP3 PUSH2 0x249F JUMP JUMPDEST DUP4 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x2939 DUP2 DUP6 PUSH2 0x25EA JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820617661696C61626C65206A75726F727320666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x185C1C19585B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xC SLOAD SWAP3 PUSH1 0x3 SLOAD DUP5 EQ PUSH2 0x2B48 JUMPI PUSH1 0x40 SWAP3 SWAP2 SWAP3 MLOAD PUSH2 0x29F4 DUP2 PUSH2 0x27BD PUSH1 0x20 DUP3 ADD SWAP5 PREVRANDAO TIMESTAMP DUP8 SWAP2 PUSH1 0x60 SWAP4 SWAP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x2A01 DUP5 PUSH2 0x26AE JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP1 SWAP3 JUMPDEST PUSH1 0x3 SLOAD DUP5 LT DUP1 PUSH2 0x2B3F JUMPI JUMPDEST ISZERO PUSH2 0x2AE4 JUMPI PUSH1 0x0 SWAP6 DUP7 PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x2A5F JUMPI JUMPDEST POP PUSH1 0x0 SWAP7 PUSH2 0x2A59 PUSH2 0x27D3 DUP11 DUP10 DUP5 PUSH2 0x27CB DUP12 PUSH2 0x27BD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP7 DUP8 SWAP2 PUSH1 0x60 SWAP4 SWAP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SWAP8 PUSH2 0x2A1E JUMP JUMPDEST PUSH2 0x2A69 DUP2 DUP5 PUSH2 0x26E0 JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x2ADB JUMPI JUMPDEST PUSH2 0x2A24 JUMPI SWAP1 SWAP5 SWAP2 SWAP7 POP PUSH2 0x2A85 DUP2 DUP9 PUSH2 0x26E0 JUMP JUMPDEST MLOAD ISZERO PUSH2 0x2A9D JUMPI JUMPDEST POP PUSH2 0x2A96 SWAP1 PUSH2 0x2576 JUMP JUMPDEST SWAP3 SWAP5 PUSH2 0x2A07 JUMP JUMPDEST PUSH2 0x2A96 SWAP2 SWAP3 PUSH2 0x2AB5 DUP3 PUSH1 0x1 PUSH2 0x2839 PUSH2 0x2AD4 SWAP6 DUP13 PUSH2 0x26E0 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x285E DUP2 PUSH1 0x6 DUP9 ADD PUSH2 0x25EA JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2A8C JUMP JUMPDEST POP DUP9 DUP9 LT PUSH2 0x2A72 JUMP JUMPDEST POP POP SWAP2 POP POP PUSH1 0x6 SWAP2 SWAP3 POP ADD SLOAD PUSH1 0x3 SLOAD SUB PUSH2 0x2AFA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2061737369676E20656E6F756768206A75726F72730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP7 DUP3 LT PUSH2 0x2A12 JUMP JUMPDEST POP SWAP2 SWAP1 PUSH1 0x6 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2B5D JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x2B69 PUSH1 0x1 SWAP3 PUSH2 0x249F JUMP JUMPDEST DUP4 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x2B81 DUP2 DUP6 PUSH2 0x25EA JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD PUSH2 0x2B51 JUMP INVALID 0xB1 PUSH26 0xB08881890BD8E13EDDE8255F745991199906456A378692EC1143 EXP GASLIMIT PUSH1 0xA9 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xB9 DUP10 0xFC 0xAD 0xBE SWAP7 BYTE 0xAF PUSH21 0x7D5C8835D0BEA1F22D094FB29D956F8A665189F95C 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "175:26761:21:-:0;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;-1:-1:-1;;;;;175:26761:21;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;175:26761:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;175:26761:21;4362:27;;175:26761;;4433:14;;175:26761;;4497:15;;175:26761;;4563:13;;;:33;;;-1:-1:-1;175:26761:21;;;4636:19;;175:26761;;4710:19;;175:26761;;4800:3;4784:19;;175:26761;;4857:28;;175:26761;;4950:19;;175:26761;;5024:28;;;175:26761;;;5121:33;175:26761;;5202:30;175:26761;5242:20;175:26761;5272:32;175:26761;5314:32;175:26761;5356:31;175:26761;5397:50;175:26761;5457:32;175:26761;5499:32;175:26761;;5541:14;175:26761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;4800:3:21;175:26761;;;;;;;4800:3;175:26761;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;4800:3:21;175:26761;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;4800:3;;175:26761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;4563:33;4580:16;4593:3;4580:16;;;4563:33;;175:26761;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;175:26761:21;;;;;;-1:-1:-1;175:26761:21;;;;;-1:-1:-1;175:26761:21"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 9019,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 9682,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256_uint256_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_enum_CaseStatus": {
                  "entryPoint": 9106,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_packed_uint256_uint256_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 9041,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_array_array_bool_dyn": {
                  "entryPoint": 9902,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_array_bool_dyn": {
                  "entryPoint": 9878,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_push_from_address_to_array_address_dyn_storage_ptr": {
                  "entryPoint": 9706,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "checked_add_uint256": {
                  "entryPoint": 9669,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 9605,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 9650,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 9637,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "clear_storage_range_address": {
                  "entryPoint": 9741,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_array_from_storage_to_memory_string": {
                  "entryPoint": 9211,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 9119,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 9177,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_assignAppealJurors": {
                  "entryPoint": 9982,
                  "id": 4652,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_assignJurors": {
                  "entryPoint": 10669,
                  "id": 4454,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_isJurorForCase": {
                  "entryPoint": 9764,
                  "id": 4817,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 9844,
                  "id": 1170,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "increment_uint256": {
                  "entryPoint": 9590,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "memory_array_index_access_bool_dyn": {
                  "entryPoint": 9952,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "mod_uint256": {
                  "entryPoint": 9972,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "require_helper_stringliteral": {
                  "entryPoint": 9514,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_7581": {
                  "entryPoint": 9448,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_address_dyn": {
                  "entryPoint": 9424,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "storage_array_index_access_address_dyn_32841": {
                  "entryPoint": 9375,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "update_storage_value_address_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "update_storage_value_offset_bool_to_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "2855": [
                  {
                    "length": 32,
                    "start": 1292
                  },
                  {
                    "length": 32,
                    "start": 2125
                  },
                  {
                    "length": 32,
                    "start": 2770
                  },
                  {
                    "length": 32,
                    "start": 3604
                  },
                  {
                    "length": 32,
                    "start": 5055
                  },
                  {
                    "length": 32,
                    "start": 7019
                  },
                  {
                    "length": 32,
                    "start": 7382
                  },
                  {
                    "length": 32,
                    "start": 7583
                  },
                  {
                    "length": 32,
                    "start": 7848
                  },
                  {
                    "length": 32,
                    "start": 8003
                  }
                ]
              },
              "linkReferences": {},
              "object": "61010080604052600436101561001457600080fd5b60003560e01c90816304495c991461232057508063059a184c146123025780630b05b14f1461205a5780631c204d0e14611569578063232e0c871461154b578063317e48b61461152d57806343bbdd3f146112635780634c4b848c1461118a578063536c8c151461116c5780636350eae81461114e5780636f833811146111305780637035aba21461106f57806371929ad514610db75780637e69b7b0146109f4578063867bc61b146109d6578063886a6de1146109b85780639da691801461087c5780639eacb5b914610837578063a2febe291461045b578063b55796f3146103d6578063c3a90635146102ef578063d496c455146102d1578063f09790dd1461016f5763f643d3d71461012857600080fd5b3461016a57602036600319011261016a57600435600c5481101561016a5761015160209161249f565b905460405160039290921b1c6001600160a01b03168152f35b600080fd5b3461016a57602036600319011261016a576004356000908152600b60205260409020805460018201546001600160a01b0390811660a05260028301541660e0526101bb600383016123fb565b9160ff6004820154166080528080806005810154956009820154600a830154600b840154600c85015491600d8601549361025760018060a01b03600e8901541696601360ff6012601160108d600f60018060a01b03910154169d01549d01549d0154169c01549c60405160c05260c0515260a051602060c051015260e051604060c0510152610220606060c051015261022060c0510190612351565b9b610269608060c05101608051612392565b60a060c051015260c08051015260e060c051015261010060c051015261012060c051015261014060c051015261016060c051015261018060c05101526101a060c05101526101c060c051015215156101e060c051015261020060c051015260c051900360c051f35b3461016a57600036600319011261016a576020600254604051908152f35b3461016a57602036600319011261016a57600435600052600b6020526020604060002080549060018060a01b036001820154169060018060a01b0360028201541660ff6004830154169260058301546009840154600a85015490600b860154926103ab6103a0600c89015496600d8a01549861037b60038c600e60018060a01b03910154169c016123fb565b916040519e8f9e8f908152015260408d015261018060608d01526101808c0190612351565b9860808b0190612392565b60a089015260c088015260e08701526101008601526101208501526101408401526101608301520390f35b3461016a57602036600319011261016a576001600160a01b036103f761233b565b16600052600e60205260e0604060002060ff8154169060018101549060ff6002820154166003820154600483015491600660058501549401549460405196151587526020870152151560408601526060850152608084015260a083015260c0820152f35b3461016a57604036600319011261016a5761047461233b565b6024359067ffffffffffffffff821161016a573660238301121561016a5781600401359067ffffffffffffffff821161016a57366024838501011161016a576001600160a01b0316908115158061082d575b156107f457600c54600354116107af576001546040516323b872dd60e01b8152336004820152306024820152604481019190915260208160648160006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af19081156107a357600091610774575b501561071a57600a549061055082612576565b600a5581600052600b6020526040600020908282556001820160018060a01b0333166bffffffffffffffffffffffff60a01b82541617905560028201846bffffffffffffffffffffffff60a01b8254161790556003820190806000966105b6845461239f565b601f81116106df575b508790601f8311600114610673578892610665575b50508160011b916000199060031b1c19161790555b60048101600160ff19825416179055600154600582015542600b820155600d610626610617600454426125c5565b80600c850155600554906125c5565b910155610632816129ad565b600154906040519182527f5c5f5f5c62d8082bc010726f98db2630d9da2b426a6717bd67bfbd9e8e17963860203393a480f35b6024925001013587806105d4565b84895260208920925090601f198416895b8181106106c457509084600195949392106106a7575b505050811b0190556105e9565b0160240135600019600384901b60f8161c1916905587808061069a565b91936020600181926024888801013581550195019201610684565b61070a90858a5260208a20601f850160051c81019160208610610710575b601f0160051c019061260d565b886105bf565b90915081906106fd565b60405162461bcd60e51b815260206004820152602c60248201527f46696c696e6720666565207472616e73666572206661696c65642e204469642060448201526b796f7520617070726f76653f60a01b6064820152608490fd5b610796915060203d60201161079c575b61078e81836123d9565b8101906125d2565b8461053d565b503d610784565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152601b60248201527f4e6f7420656e6f75676820617661696c61626c65206a75726f727300000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a5908191959995b99185b9d607a1b6044820152606490fd5b50338214156104c6565b3461016a57600036600319011261016a576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461016a57604036600319011261016a5760043580600052600b602052604060002060ff60048201541660068110156109a25760016108bb91146124e8565b600c8101544211610968576007906108db6108d63383612624565b61252a565b3360009081529101602081905260409091205461092f5733600081815260209290925260408220602435905591907f3834a2c8ea101e1468b529270d35fbff0a12de32a5a7e5729b8b4dad6fb32c019080a3005b60405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e4818dbdb5b5a5d1d1959607a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601260248201527110dbdb5b5a5d081c1a185cd948195b99195960721b6044820152606490fd5b634e487b7160e01b600052602160045260246000fd5b3461016a57600036600319011261016a576020600554604051908152f35b3461016a57600036600319011261016a576020600854604051908152f35b3461016a57602036600319011261016a57600435610a10612674565b80600052600b60205260406000206004810160ff81541660068110156109a257600303610d7a5760118201544211610d3c57601282019160ff835416610cff57600e81015460018201546001600160a01b0390811691168103610cfa575060028101546001600160a01b03165b6001600160a01b03163303610cb557610a9d6005820154600754906125b2565b6040516323b872dd60e01b81523360048201523060248201526044810182905290939060208160648160006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af19081156107a357600091610c96575b5015610c5157600f820180546001600160a01b0319163317905560108201849055805460ff1990811660011790915582541660041782556009805460138301556000908201819055600a8201819055600682019491936007850193600886019391925b8754811015610bc95780610b7c6001928a6124d0565b905460039190911b1c60a083901b83900316600090815260208881526040808320839055888252808320805460ff19908116909155600e9092529091206002018054909116905501610b66565b50858780546000825580610c35575b5050610be3836126fe565b600d610bf4610617600454426125c5565b910155600160ff198254161790556040519182527f7055524dc69306fe397256b9b4ef9fe5a3b01235fdb799638b61e323b9e2c3bc60203393a36001600055005b610c4a9160005260206000209081019061260d565b8480610bd8565b60405162461bcd60e51b815260206004820152601e60248201527f41707065616c206465706f736974207472616e73666572206661696c656400006044820152606490fd5b610caf915060203d60201161079c5761078e81836123d9565b86610b03565b60405162461bcd60e51b815260206004820152601c60248201527f4f6e6c79206c6f73696e672070617274792063616e2061707065616c000000006044820152606490fd5b610a7d565b60405162461bcd60e51b815260206004820152601560248201527410d85cd948185b1c9958591e48185c1c19585b1959605a1b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275105c1c19585b08191958591b1a5b99481c185cdcd95960521b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527410d85cd9481b9bdd081c995cdbdb1d9959081e595d605a1b6044820152606490fd5b3461016a57600036600319011261016a5733600052600e60205260ff60406000205416611035576002546040516323b872dd60e01b8152336004820152306024820152604481019190915260208160648160006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af19081156107a357600091611016575b5015610fc1576002546040519060e082019082821067ffffffffffffffff831117610fab57600691604052600183526020830190815260408301600081526060840160008152608085019060008252610eee60a08701936032855260c08801956000875233600052600e602052610ed06040600020995115158a9060ff801983541691151516179055565b516001890155511515600288019060ff801983541691151516179055565b51600386015551600485015551600584015551910155600c54600160401b811015610fab57610f28816001610f469301600c55600c6124d0565b81546001600160a01b0360039290921b91821b19163390911b179055565b600c546000198101908111610f955733600052600d6020526040600020556002546040519081527f302e82b0b7908cfac0232eeb6a83332cbf587d0cb58eaa7ba72f884c149910fa60203392a2005b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152602760248201527f546f6b656e207472616e73666572206661696c65642e2044696420796f7520616044820152667070726f76653f60c81b6064820152608490fd5b61102f915060203d60201161079c5761078e81836123d9565b81610e45565b60405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b6044820152606490fd5b3461016a57602036600319011261016a57600435600052600b60205260066040600020016040518060208354918281520190819360005260206000209060005b81811061111157505050816110c59103826123d9565b6040519182916020830190602084525180915260408301919060005b8181106110ef575050500390f35b82516001600160a01b03168452859450602093840193909201916001016110e1565b82546001600160a01b03168452602090930192600192830192016110af565b3461016a57600036600319011261016a576020600454604051908152f35b3461016a57600036600319011261016a576020600a54604051908152f35b3461016a57600036600319011261016a576020600354604051908152f35b3461016a57602036600319011261016a576111a361233b565b6001600160a01b03166000908152600e60205260409020805460ff161561122757600381015460048201546005830154600690930154811561121c57606483029383850460641484151715610f95576111fe8360a096612585565b925b6040519485526020850152604084015260608301526080820152f35b60a093600092611200565b60405162461bcd60e51b8152602060048201526014602482015273129d5c9bdc881b9bdd081c9959da5cdd195c995960621b6044820152606490fd5b3461016a57600036600319011261016a5733600052600e602052604060002060ff815416156114ef5760ff600282015416611498576001015433600052600d602052604060002054600c546000198101908111610f95576112c39061249f565b905460039190911b1c6001600160a01b0316611306816112e28461249f565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b600052600d602052604060002055600c548015611482576113b991602091600019016113318161249f565b81549060018060a01b039060031b1b19169055600c5533600052600e82526000600660408220828155826001820155826002820155826003820155826004820155826005820155015533600052600d8252600060408120556040518093819263a9059cbb60e01b8352336004840160209093929193604081019460018060a01b031681520152565b038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156107a357600091611463575b501561142657337ff67e7162188cb7e3f756d0f6d7c86d1b7cc88b891ae19dd58118705a7859034b600080a2005b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b61147c915060203d60201161079c5761078e81836123d9565b816113f8565b634e487b7160e01b600052603160045260246000fd5b60405162461bcd60e51b815260206004820152602960248201527f43616e6e6f7420756e7265676973746572207768696c652073657276696e67206044820152686f6e2061206361736560b81b6064820152608490fd5b60405162461bcd60e51b81526020600482015260166024820152752737ba1030903932b3b4b9ba32b932b210353ab937b960511b6044820152606490fd5b3461016a57600036600319011261016a576020600754604051908152f35b3461016a57600036600319011261016a576020600154604051908152f35b3461016a57602036600319011261016a57611582612674565b600435600052600b602052604060002060ff60048201541660068110156109a25760010361201557600d810154421115611fd05760048101805460ff191660021790556009810154600a8201541015611fbd5760018101546001600160a01b03165b600e820180546001600160a01b0319166001600160a01b03838116918217909255600184015490911603611fb5576001915b6000928390815b60068401548310156119d05761163683600686016124d0565b60018060a01b0391549060031b1c169260ff6040600060018060a01b0387168152600888016020522054169184600052600e60205260406000209261167e6004850154612576565b9081600486015560038610156109a257600381101591826109a257868214806119c3575b15611784575050506116b390612576565b93600383016116c28154612576565b80915560006006850155600584019384546064811061172e575b509354600490940154604080519586526020860192909252908401526001927ff258ac71ca04f4b808e0c4f36355a6bbcd15af6c6cf087ba2655d6b05c81d2d99080606081015b0390a25b019161161d565b919060028301809311610f95576117236004876064867ff258ac71ca04f4b808e0c4f36355a6bbcd15af6c6cf087ba2655d6b05c81d2d99760019b551161177b575b9750505090916116dc565b60648155611770565b91996006869296989498016117998154612576565b80915560036006549411156119b9575b60018111611975575b5060058201549a60468c11611957575b600183019182549260646117d687866125b2565b0493600a60025404806117e987846125a5565b10611937575b50600592611809926118028780946125a5565b90556125c5565b9c111561192b5760058301546004198101908111610f955760058401555b6109a2577f43b8287040b746addd91738208fe6a278fd8dc7325e4979c30bf3c8d0409d7177ff258ac71ca04f4b808e0c4f36355a6bbcd15af6c6cf087ba2655d6b05c81d2d9938592600198600090156000146118fd57506118c36040516118906040826123d9565b60078152664e6f20766f746560c81b60208201525b60405193849384526020840152606060408401526060830190612351565b0390a260058101546118f560046003840154930154604051938493846040919493926060820195825260208201520152565b0390a2611727565b506118c360405161190f6040826123d9565b600a81526957726f6e6720766f746560b01b60208201526118a5565b60006005840155611827565b6118029550926118099261194d600595846125a5565b96509250926117ef565b92605081029080820460501490151715610f955760649004926117c2565b9092906000198101908111610f9557600a810290808204600a1490151715610f95576119a0916125c5565b91605083116119b0575b8b6117b2565b605092506119aa565b9260011c926117a9565b50600092508115156116a2565b915093926000908182809460058701549781611fa2575b505060018601546001600160a01b03848116911603611efc57508580611e70575b505b60005b6006860154811015611acb57611a2681600688016124d0565b9054600391821b1c6001600160a01b03166000818152600889016020526040902054909160ff91909116908a10156109a25760038110156109a2578914611a89575b6000908152600e60205260409020600201805460ff19169055600101611a0d565b9490611ac28560019388600052600e602052611aac8286604060002001546125c5565b89600052600e60205285604060002001556125c5565b95909150611a68565b5085848660ff601282015416600014611e0257506004356000908152600b60205260409020600f81018054929493929091906001600160a01b038781169116148385878315611c7157505050601082018054600381029080820460031490151715610f9557935460405163a9059cbb60e01b81526001600160a01b03909116600482015260029490941c60248501819052936020818060448101038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19788156107a357611bc6611c4996600494611bcc94600080516020612ba28339815191529c611c54575b50546125a5565b906125c5565b925b01805460ff19166005179055604080516001600160a01b03891681526020810192909252600435917fd4406e003c73582310b2b897fd7cacd5866ecaed769ac129eb0b1dcbb09011169190a2604051938493600435978590949392606092608083019660018060a01b03168352602083015260408201520152565b0390a25b6001600055005b611c6c9060203d60201161079c5761078e81836123d9565b611bbf565b60108501805460018088018054969c50929991901c97509193909291906001600160a01b038c8116911603611d5f5750505460405163a9059cbb60e01b81526001600160a01b03909116600482015260248101859052906020828060448101038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156107a357611bc686611d34611c4998600080516020612ba28339815191529c600497611d3c97611d42575b506125c5565b985b546125a5565b92611bce565b611d5a9060203d60201161079c5761078e81836123d9565b611d2e565b600286015460405163a9059cbb60e01b81526001600160a01b039091166004820152602481018890529199509697509190506020828060448101038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156107a357611bc686611dfc611c4998600080516020612ba28339815191529c600497611d3c97611d4257506125c5565b99611d36565b600080516020612ba2833981519152939291611e6891611e24600854426125c5565b60118201556004600360ff19828401541617910155604051938493600435978590949392606092608083019660018060a01b03168352602083015260408201520152565b0390a2611c4d565b600186015460405163a9059cbb60e01b81526001600160a01b03909116600482015260248101919091526020818060448101038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af180156107a35715611a0857611ef59060203d60201161079c5761078e81836123d9565b5087611a08565b9590508080611f0c575b50611a0a565b600286015460405163a9059cbb60e01b81526001600160a01b0390911660048201526024810191909152602081806044810103818a7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af18015611f975715611f0657611f909060203d60201161079c5761078e81836123d9565b5087611f06565b6040513d89823e3d90fd5b611fad929550612585565b9288806119e7565b600291611616565b60028101546001600160a01b03166115e4565b60405162461bcd60e51b815260206004820152601a60248201527f52657665616c207068617365206e6f7420656e646564207965740000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f43617365206e6f7420726561647920666f7220766572646963740000000000006044820152606490fd5b3461016a57606036600319011261016a57602435600435600382101561016a5780600052600b60205260406000209160ff60048401541660068110156109a25760016120a691146124e8565b600c8301544211156122bd57600d8301544211612283576120ca6108d63385612624565b3360009081526007840160208190526040909120541561224d5733600090815260088501602081905260409091205460ff1660038110156109a2576122155760405191602083016000938560f81b82526044356021820152602181526121316041826123d9565b5190203384526020919091526040832054036121d05733825260205260409020805460ff191660ff831617905560009260001982016121ac576009016121778154612576565b90555b604051926109a25782527ffb0a2a4b906424480a54d601db26ad920592115a97358d199495345723df34cb60203393a3005b600282146121bb575b5061217a565b600a016121c88154612576565b9055836121b5565b60405162461bcd60e51b815260206004820152601a60248201527f566f746520646f6573206e6f74206d6174636820636f6d6d69740000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c995d99585b195960821b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d111a59081b9bdd0818dbdb5b5a5d60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601260248201527114995d99585b081c1a185cd948195b99195960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f436f6d6d6974207068617365206e6f7420656e646564207965740000000000006044820152606490fd5b3461016a57600036600319011261016a576020600654604051908152f35b3461016a57600036600319011261016a576020906009548152f35b600435906001600160a01b038216820361016a57565b919082519283825260005b84811061237d575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161235c565b9060068210156109a25752565b90600182811c921680156123cf575b60208310146123b957565b634e487b7160e01b600052602260045260246000fd5b91607f16916123ae565b90601f8019910116810190811067ffffffffffffffff821117610fab57604052565b906040519182600082549261240f8461239f565b808452936001811690811561247d5750600114612436575b50612434925003836123d9565b565b90506000929192526020600020906000915b8183106124615750509060206124349282010138612427565b6020919350806001915483858901015201910190918492612448565b90506020925061243494915060ff191682840152151560051b82010138612427565b600c548110156124ba57600c60005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b80548210156124ba5760005260206000200190600090565b156124ef57565b60405162461bcd60e51b81526020600482015260136024820152724e6f7420696e20766f74696e6720706861736560681b6044820152606490fd5b1561253157565b60405162461bcd60e51b815260206004820152601960248201527f4e6f742061206a75726f7220666f7220746869732063617365000000000000006044820152606490fd5b6000198114610f955760010190565b811561258f570490565b634e487b7160e01b600052601260045260246000fd5b91908203918211610f9557565b81810292918115918404141715610f9557565b91908201809211610f9557565b9081602091031261016a5751801515810361016a5790565b90815491600160401b831015610fab57826112e2916001612434950181556124d0565b818110612618575050565b6000815560010161260d565b9060005b60068301805482101561266b578161263f916124d0565b905460039190911b1c6001600160a01b039081169083161461266357600101612628565b505050600190565b50505050600090565b600260005414612685576002600055565b633ee5aeb560e01b60005260046000fd5b67ffffffffffffffff8111610fab5760051b60200190565b906126b882612696565b6126c560405191826123d9565b82815280926126d6601f1991612696565b0190602036910137565b80518210156124ba5760209160051b010190565b811561258f570690565b9081600052600b6020526040600020600c5492601382015490818510612959578185146128fe576040516020810191428352446040830152606082015265185c1c19585b60d21b6080820152606681526127596086826123d9565b51902091612766856126ae565b6000906000935b808510806128f5575b1561288e576000968760015b156127df575b506000976127d96127d38b8a846127cb8c6127bd60405193849260208401968791606093918352602083015260408201520190565b03601f1981018352826123d9565b5190206126f4565b91612576565b98612782565b6127e981856126e0565b51151580612885575b612788579092975094909461280781896126e0565b5115612821575b5061281890612576565b9395909561276d565b612818919361283f82600161283961287e958d6126e0565b5261249f565b905460039190911b1c6001600160a01b031661285e81600689016125ea565b600052600e6020526002604060002001600160ff19825416179055612576565b929061280e565b508989106127f2565b95965050509050600691500154036128a257565b60405162461bcd60e51b815260206004820152602560248201527f4661696c656420746f2061737369676e20656e6f7567682061707065616c206a60448201526475726f727360d81b6064820152608490fd5b50878310612776565b509192915060060160005b82811061291557505050565b8061292160019261249f565b838060a01b0391549060031b1c1661293981856125ea565b600052600e60205260026040600020018260ff1982541617905501612909565b60405162461bcd60e51b815260206004820152602660248201527f4e6f7420656e6f75676820617661696c61626c65206a75726f727320666f7220604482015265185c1c19585b60d21b6064820152608490fd5b9081600052600b602052604060002090600c54926003548414612b48576040929192516129f4816127bd602082019444428791606093918352602083015260408201520190565b51902090612a01846126ae565b90600080925b600354841080612b3f575b15612ae4576000958660015b15612a5f575b50600096612a596127d38a89846127cb8b6127bd60405193849260208401968791606093918352602083015260408201520190565b97612a1e565b612a6981846126e0565b51151580612adb575b612a24579094919650612a8581886126e0565b5115612a9d575b50612a9690612576565b9294612a07565b612a969192612ab5826001612839612ad4958c6126e0565b905460039190911b1c6001600160a01b031661285e81600688016125ea565b9190612a8c565b50888810612a72565b50509150506006919250015460035403612afa57565b60405162461bcd60e51b815260206004820152601e60248201527f4661696c656420746f2061737369676e20656e6f756768206a75726f727300006044820152606490fd5b50868210612a12565b50919060060160005b828110612b5d57505050565b80612b6960019261249f565b838060a01b0391549060031b1c16612b8181856125ea565b600052600e60205260026040600020018260ff1982541617905501612b5156feb179b08881890bd8e13edde8255f745991199906456a378692ec11430a4560a9a2646970667358221220ecb989fcadbe961aaf747d5c8835d0bea1f22d094fb29d956f8a665189f95cd464736f6c634300081c0033",
              "opcodes": "PUSH2 0x100 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4495C99 EQ PUSH2 0x2320 JUMPI POP DUP1 PUSH4 0x59A184C EQ PUSH2 0x2302 JUMPI DUP1 PUSH4 0xB05B14F EQ PUSH2 0x205A JUMPI DUP1 PUSH4 0x1C204D0E EQ PUSH2 0x1569 JUMPI DUP1 PUSH4 0x232E0C87 EQ PUSH2 0x154B JUMPI DUP1 PUSH4 0x317E48B6 EQ PUSH2 0x152D JUMPI DUP1 PUSH4 0x43BBDD3F EQ PUSH2 0x1263 JUMPI DUP1 PUSH4 0x4C4B848C EQ PUSH2 0x118A JUMPI DUP1 PUSH4 0x536C8C15 EQ PUSH2 0x116C JUMPI DUP1 PUSH4 0x6350EAE8 EQ PUSH2 0x114E JUMPI DUP1 PUSH4 0x6F833811 EQ PUSH2 0x1130 JUMPI DUP1 PUSH4 0x7035ABA2 EQ PUSH2 0x106F JUMPI DUP1 PUSH4 0x71929AD5 EQ PUSH2 0xDB7 JUMPI DUP1 PUSH4 0x7E69B7B0 EQ PUSH2 0x9F4 JUMPI DUP1 PUSH4 0x867BC61B EQ PUSH2 0x9D6 JUMPI DUP1 PUSH4 0x886A6DE1 EQ PUSH2 0x9B8 JUMPI DUP1 PUSH4 0x9DA69180 EQ PUSH2 0x87C JUMPI DUP1 PUSH4 0x9EACB5B9 EQ PUSH2 0x837 JUMPI DUP1 PUSH4 0xA2FEBE29 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0xB55796F3 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xC3A90635 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xD496C455 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xF09790DD EQ PUSH2 0x16F JUMPI PUSH4 0xF643D3D7 EQ PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x16A JUMPI PUSH2 0x151 PUSH1 0x20 SWAP2 PUSH2 0x249F JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0xA0 MSTORE PUSH1 0x2 DUP4 ADD SLOAD AND PUSH1 0xE0 MSTORE PUSH2 0x1BB PUSH1 0x3 DUP4 ADD PUSH2 0x23FB JUMP JUMPDEST SWAP2 PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD AND PUSH1 0x80 MSTORE DUP1 DUP1 DUP1 PUSH1 0x5 DUP2 ADD SLOAD SWAP6 PUSH1 0x9 DUP3 ADD SLOAD PUSH1 0xA DUP4 ADD SLOAD PUSH1 0xB DUP5 ADD SLOAD PUSH1 0xC DUP6 ADD SLOAD SWAP2 PUSH1 0xD DUP7 ADD SLOAD SWAP4 PUSH2 0x257 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xE DUP10 ADD SLOAD AND SWAP7 PUSH1 0x13 PUSH1 0xFF PUSH1 0x12 PUSH1 0x11 PUSH1 0x10 DUP14 PUSH1 0xF PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP14 ADD SLOAD SWAP14 ADD SLOAD SWAP14 ADD SLOAD AND SWAP13 ADD SLOAD SWAP13 PUSH1 0x40 MLOAD PUSH1 0xC0 MSTORE PUSH1 0xC0 MLOAD MSTORE PUSH1 0xA0 MLOAD PUSH1 0x20 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0xE0 MLOAD PUSH1 0x40 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x220 PUSH1 0x60 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x220 PUSH1 0xC0 MLOAD ADD SWAP1 PUSH2 0x2351 JUMP JUMPDEST SWAP12 PUSH2 0x269 PUSH1 0x80 PUSH1 0xC0 MLOAD ADD PUSH1 0x80 MLOAD PUSH2 0x2392 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0xC0 DUP1 MLOAD ADD MSTORE PUSH1 0xE0 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x100 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x120 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x140 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x160 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x180 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x1A0 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x1C0 PUSH1 0xC0 MLOAD ADD MSTORE ISZERO ISZERO PUSH2 0x1E0 PUSH1 0xC0 MLOAD ADD MSTORE PUSH2 0x200 PUSH1 0xC0 MLOAD ADD MSTORE PUSH1 0xC0 MLOAD SWAP1 SUB PUSH1 0xC0 MLOAD RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP3 ADD SLOAD AND PUSH1 0xFF PUSH1 0x4 DUP4 ADD SLOAD AND SWAP3 PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x9 DUP5 ADD SLOAD PUSH1 0xA DUP6 ADD SLOAD SWAP1 PUSH1 0xB DUP7 ADD SLOAD SWAP3 PUSH2 0x3AB PUSH2 0x3A0 PUSH1 0xC DUP10 ADD SLOAD SWAP7 PUSH1 0xD DUP11 ADD SLOAD SWAP9 PUSH2 0x37B PUSH1 0x3 DUP13 PUSH1 0xE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP13 ADD PUSH2 0x23FB JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP15 DUP16 SWAP1 DUP2 MSTORE ADD MSTORE PUSH1 0x40 DUP14 ADD MSTORE PUSH2 0x180 PUSH1 0x60 DUP14 ADD MSTORE PUSH2 0x180 DUP13 ADD SWAP1 PUSH2 0x2351 JUMP JUMPDEST SWAP9 PUSH1 0x80 DUP12 ADD SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3F7 PUSH2 0x233B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xE0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF DUP2 SLOAD AND SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD SWAP2 PUSH1 0x6 PUSH1 0x5 DUP6 ADD SLOAD SWAP5 ADD SLOAD SWAP5 PUSH1 0x40 MLOAD SWAP7 ISZERO ISZERO DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH2 0x474 PUSH2 0x233B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x16A JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x16A JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x16A JUMPI CALLDATASIZE PUSH1 0x24 DUP4 DUP6 ADD ADD GT PUSH2 0x16A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0x82D JUMPI JUMPDEST ISZERO PUSH2 0x7F4 JUMPI PUSH1 0xC SLOAD PUSH1 0x3 SLOAD GT PUSH2 0x7AF JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x774 JUMPI JUMPDEST POP ISZERO PUSH2 0x71A JUMPI PUSH1 0xA SLOAD SWAP1 PUSH2 0x550 DUP3 PUSH2 0x2576 JUMP JUMPDEST PUSH1 0xA SSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP3 DUP3 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x3 DUP3 ADD SWAP1 DUP1 PUSH1 0x0 SWAP7 PUSH2 0x5B6 DUP5 SLOAD PUSH2 0x239F JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x6DF JUMPI JUMPDEST POP DUP8 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x673 JUMPI DUP9 SWAP3 PUSH2 0x665 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x4 DUP2 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x5 DUP3 ADD SSTORE TIMESTAMP PUSH1 0xB DUP3 ADD SSTORE PUSH1 0xD PUSH2 0x626 PUSH2 0x617 PUSH1 0x4 SLOAD TIMESTAMP PUSH2 0x25C5 JUMP JUMPDEST DUP1 PUSH1 0xC DUP6 ADD SSTORE PUSH1 0x5 SLOAD SWAP1 PUSH2 0x25C5 JUMP JUMPDEST SWAP2 ADD SSTORE PUSH2 0x632 DUP2 PUSH2 0x29AD JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x5C5F5F5C62D8082BC010726F98DB2630D9DA2B426A6717BD67BFBD9E8E179638 PUSH1 0x20 CALLER SWAP4 LOG4 DUP1 RETURN JUMPDEST PUSH1 0x24 SWAP3 POP ADD ADD CALLDATALOAD DUP8 DUP1 PUSH2 0x5D4 JUMP JUMPDEST DUP5 DUP10 MSTORE PUSH1 0x20 DUP10 KECCAK256 SWAP3 POP SWAP1 PUSH1 0x1F NOT DUP5 AND DUP10 JUMPDEST DUP2 DUP2 LT PUSH2 0x6C4 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x6A7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x5E9 JUMP JUMPDEST ADD PUSH1 0x24 ADD CALLDATALOAD PUSH1 0x0 NOT PUSH1 0x3 DUP5 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x69A JUMP JUMPDEST SWAP2 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 PUSH1 0x24 DUP9 DUP9 ADD ADD CALLDATALOAD DUP2 SSTORE ADD SWAP6 ADD SWAP3 ADD PUSH2 0x684 JUMP JUMPDEST PUSH2 0x70A SWAP1 DUP6 DUP11 MSTORE PUSH1 0x20 DUP11 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x710 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x260D JUMP JUMPDEST DUP9 PUSH2 0x5BF JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46696C696E6720666565207472616E73666572206661696C65642E2044696420 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x796F7520617070726F76653F PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x796 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x79C JUMPI JUMPDEST PUSH2 0x78E DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x25D2 JUMP JUMPDEST DUP5 PUSH2 0x53D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820617661696C61626C65206A75726F72730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A5908191959995B99185B9D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER DUP3 EQ ISZERO PUSH2 0x4C6 JUMP JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x1 PUSH2 0x8BB SWAP2 EQ PUSH2 0x24E8 JUMP JUMPDEST PUSH1 0xC DUP2 ADD SLOAD TIMESTAMP GT PUSH2 0x968 JUMPI PUSH1 0x7 SWAP1 PUSH2 0x8DB PUSH2 0x8D6 CALLER DUP4 PUSH2 0x2624 JUMP JUMPDEST PUSH2 0x252A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 ADD PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x92F JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x24 CALLDATALOAD SWAP1 SSTORE SWAP2 SWAP1 PUSH32 0x3834A2C8EA101E1468B529270D35FBFF0A12DE32A5A7E5729B8B4DAD6FB32C01 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1C9958591E4818DBDB5B5A5D1D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x10DBDB5B5A5D081C1A185CD948195B991959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA10 PUSH2 0x2674 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x4 DUP2 ADD PUSH1 0xFF DUP2 SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x3 SUB PUSH2 0xD7A JUMPI PUSH1 0x11 DUP3 ADD SLOAD TIMESTAMP GT PUSH2 0xD3C JUMPI PUSH1 0x12 DUP3 ADD SWAP2 PUSH1 0xFF DUP4 SLOAD AND PUSH2 0xCFF JUMPI PUSH1 0xE DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP2 SUB PUSH2 0xCFA JUMPI POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xCB5 JUMPI PUSH2 0xA9D PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x7 SLOAD SWAP1 PUSH2 0x25B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP4 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xC96 JUMPI JUMPDEST POP ISZERO PUSH2 0xC51 JUMPI PUSH1 0xF DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x10 DUP3 ADD DUP5 SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 OR SWAP1 SWAP2 SSTORE DUP3 SLOAD AND PUSH1 0x4 OR DUP3 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x13 DUP4 ADD SSTORE PUSH1 0x0 SWAP1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0xA DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x6 DUP3 ADD SWAP5 SWAP2 SWAP4 PUSH1 0x7 DUP6 ADD SWAP4 PUSH1 0x8 DUP7 ADD SWAP4 SWAP2 SWAP3 JUMPDEST DUP8 SLOAD DUP2 LT ISZERO PUSH2 0xBC9 JUMPI DUP1 PUSH2 0xB7C PUSH1 0x1 SWAP3 DUP11 PUSH2 0x24D0 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0xA0 DUP4 SWAP1 SHL DUP4 SWAP1 SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP9 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE DUP9 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0xE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE ADD PUSH2 0xB66 JUMP JUMPDEST POP DUP6 DUP8 DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE DUP1 PUSH2 0xC35 JUMPI JUMPDEST POP POP PUSH2 0xBE3 DUP4 PUSH2 0x26FE JUMP JUMPDEST PUSH1 0xD PUSH2 0xBF4 PUSH2 0x617 PUSH1 0x4 SLOAD TIMESTAMP PUSH2 0x25C5 JUMP JUMPDEST SWAP2 ADD SSTORE PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x7055524DC69306FE397256B9B4EF9FE5A3B01235FDB799638B61E323B9E2C3BC PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH2 0xC4A SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x260D JUMP JUMPDEST DUP5 DUP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41707065616C206465706F736974207472616E73666572206661696C65640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xCAF SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x79C JUMPI PUSH2 0x78E DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP7 PUSH2 0xB03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206C6F73696E672070617274792063616E2061707065616C00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0xA7D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10D85CD948185B1C9958591E48185C1C19585B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x105C1C19585B08191958591B1A5B99481C185CDCD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10D85CD9481B9BDD081C995CDBDB1D9959081E595D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x1035 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1016 JUMPI JUMPDEST POP ISZERO PUSH2 0xFC1 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 DUP3 ADD SWAP1 DUP3 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0xFAB JUMPI PUSH1 0x6 SWAP2 PUSH1 0x40 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x60 DUP5 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x80 DUP6 ADD SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH2 0xEEE PUSH1 0xA0 DUP8 ADD SWAP4 PUSH1 0x32 DUP6 MSTORE PUSH1 0xC0 DUP9 ADD SWAP6 PUSH1 0x0 DUP8 MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH2 0xED0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP10 MLOAD ISZERO ISZERO DUP11 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x1 DUP10 ADD SSTORE MLOAD ISZERO ISZERO PUSH1 0x2 DUP9 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x3 DUP7 ADD SSTORE MLOAD PUSH1 0x4 DUP6 ADD SSTORE MLOAD PUSH1 0x5 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0xFAB JUMPI PUSH2 0xF28 DUP2 PUSH1 0x1 PUSH2 0xF46 SWAP4 ADD PUSH1 0xC SSTORE PUSH1 0xC PUSH2 0x24D0 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP1 SWAP2 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0xF95 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x302E82B0B7908CFAC0232EEB6A83332CBF587D0CB58EAA7BA72F884C149910FA PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E207472616E73666572206661696C65642E2044696420796F752061 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x7070726F76653F PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x102F SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x79C JUMPI PUSH2 0x78E DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 PUSH2 0xE45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481C9959DA5CDD195C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 DUP4 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP1 DUP2 SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1111 JUMPI POP POP POP DUP2 PUSH2 0x10C5 SWAP2 SUB DUP3 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x10EF JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x10E1 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x10AF JUMP JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH2 0x11A3 PUSH2 0x233B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1227 JUMPI PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x6 SWAP1 SWAP4 ADD SLOAD DUP2 ISZERO PUSH2 0x121C JUMPI PUSH1 0x64 DUP4 MUL SWAP4 DUP4 DUP6 DIV PUSH1 0x64 EQ DUP5 ISZERO OR ISZERO PUSH2 0xF95 JUMPI PUSH2 0x11FE DUP4 PUSH1 0xA0 SWAP7 PUSH2 0x2585 JUMP JUMPDEST SWAP3 JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0xA0 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x129D5C9BDC881B9BDD081C9959DA5CDD195C9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF DUP2 SLOAD AND ISZERO PUSH2 0x14EF JUMPI PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0x1498 JUMPI PUSH1 0x1 ADD SLOAD CALLER PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xC SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0xF95 JUMPI PUSH2 0x12C3 SWAP1 PUSH2 0x249F JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1306 DUP2 PUSH2 0x12E2 DUP5 PUSH2 0x249F JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL SWAP4 SWAP1 SWAP2 SHL NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0xC SLOAD DUP1 ISZERO PUSH2 0x1482 JUMPI PUSH2 0x13B9 SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x0 NOT ADD PUSH2 0x1331 DUP2 PUSH2 0x249F JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0xC SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0xE DUP3 MSTORE PUSH1 0x0 PUSH1 0x6 PUSH1 0x40 DUP3 KECCAK256 DUP3 DUP2 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD SSTORE DUP3 PUSH1 0x4 DUP3 ADD SSTORE DUP3 PUSH1 0x5 DUP3 ADD SSTORE ADD SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0xD DUP3 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1463 JUMPI JUMPDEST POP ISZERO PUSH2 0x1426 JUMPI CALLER PUSH32 0xF67E7162188CB7E3F756D0F6D7C86D1B7CC88B891AE19DD58118705A7859034B PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x147C SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x79C JUMPI PUSH2 0x78E DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST DUP2 PUSH2 0x13F8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F7420756E7265676973746572207768696C652073657276696E6720 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x6F6E20612063617365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x2737BA1030903932B3B4B9BA32B932B210353AB937B9 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH2 0x1582 PUSH2 0x2674 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x4 DUP3 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x1 SUB PUSH2 0x2015 JUMPI PUSH1 0xD DUP2 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x1FD0 JUMPI PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE PUSH1 0x9 DUP2 ADD SLOAD PUSH1 0xA DUP3 ADD SLOAD LT ISZERO PUSH2 0x1FBD JUMPI PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0xE DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP5 ADD SLOAD SWAP1 SWAP2 AND SUB PUSH2 0x1FB5 JUMPI PUSH1 0x1 SWAP2 JUMPDEST PUSH1 0x0 SWAP3 DUP4 SWAP1 DUP2 JUMPDEST PUSH1 0x6 DUP5 ADD SLOAD DUP4 LT ISZERO PUSH2 0x19D0 JUMPI PUSH2 0x1636 DUP4 PUSH1 0x6 DUP7 ADD PUSH2 0x24D0 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP3 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0x8 DUP9 ADD PUSH1 0x20 MSTORE KECCAK256 SLOAD AND SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH2 0x167E PUSH1 0x4 DUP6 ADD SLOAD PUSH2 0x2576 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x4 DUP7 ADD SSTORE PUSH1 0x3 DUP7 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x3 DUP2 LT ISZERO SWAP2 DUP3 PUSH2 0x9A2 JUMPI DUP7 DUP3 EQ DUP1 PUSH2 0x19C3 JUMPI JUMPDEST ISZERO PUSH2 0x1784 JUMPI POP POP POP PUSH2 0x16B3 SWAP1 PUSH2 0x2576 JUMP JUMPDEST SWAP4 PUSH1 0x3 DUP4 ADD PUSH2 0x16C2 DUP2 SLOAD PUSH2 0x2576 JUMP JUMPDEST DUP1 SWAP2 SSTORE PUSH1 0x0 PUSH1 0x6 DUP6 ADD SSTORE PUSH1 0x5 DUP5 ADD SWAP4 DUP5 SLOAD PUSH1 0x64 DUP2 LT PUSH2 0x172E JUMPI JUMPDEST POP SWAP4 SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP5 ADD MSTORE PUSH1 0x1 SWAP3 PUSH32 0xF258AC71CA04F4B808E0C4F36355A6BBCD15AF6C6CF087BA2655D6B05C81D2D9 SWAP1 DUP1 PUSH1 0x60 DUP2 ADD JUMPDEST SUB SWAP1 LOG2 JUMPDEST ADD SWAP2 PUSH2 0x161D JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x2 DUP4 ADD DUP1 SWAP4 GT PUSH2 0xF95 JUMPI PUSH2 0x1723 PUSH1 0x4 DUP8 PUSH1 0x64 DUP7 PUSH32 0xF258AC71CA04F4B808E0C4F36355A6BBCD15AF6C6CF087BA2655D6B05C81D2D9 SWAP8 PUSH1 0x1 SWAP12 SSTORE GT PUSH2 0x177B JUMPI JUMPDEST SWAP8 POP POP POP SWAP1 SWAP2 PUSH2 0x16DC JUMP JUMPDEST PUSH1 0x64 DUP2 SSTORE PUSH2 0x1770 JUMP JUMPDEST SWAP2 SWAP10 PUSH1 0x6 DUP7 SWAP3 SWAP7 SWAP9 SWAP5 SWAP9 ADD PUSH2 0x1799 DUP2 SLOAD PUSH2 0x2576 JUMP JUMPDEST DUP1 SWAP2 SSTORE PUSH1 0x3 PUSH1 0x6 SLOAD SWAP5 GT ISZERO PUSH2 0x19B9 JUMPI JUMPDEST PUSH1 0x1 DUP2 GT PUSH2 0x1975 JUMPI JUMPDEST POP PUSH1 0x5 DUP3 ADD SLOAD SWAP11 PUSH1 0x46 DUP13 GT PUSH2 0x1957 JUMPI JUMPDEST PUSH1 0x1 DUP4 ADD SWAP2 DUP3 SLOAD SWAP3 PUSH1 0x64 PUSH2 0x17D6 DUP8 DUP7 PUSH2 0x25B2 JUMP JUMPDEST DIV SWAP4 PUSH1 0xA PUSH1 0x2 SLOAD DIV DUP1 PUSH2 0x17E9 DUP8 DUP5 PUSH2 0x25A5 JUMP JUMPDEST LT PUSH2 0x1937 JUMPI JUMPDEST POP PUSH1 0x5 SWAP3 PUSH2 0x1809 SWAP3 PUSH2 0x1802 DUP8 DUP1 SWAP5 PUSH2 0x25A5 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x25C5 JUMP JUMPDEST SWAP13 GT ISZERO PUSH2 0x192B JUMPI PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x4 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0xF95 JUMPI PUSH1 0x5 DUP5 ADD SSTORE JUMPDEST PUSH2 0x9A2 JUMPI PUSH32 0x43B8287040B746ADDD91738208FE6A278FD8DC7325E4979C30BF3C8D0409D717 PUSH32 0xF258AC71CA04F4B808E0C4F36355A6BBCD15AF6C6CF087BA2655D6B05C81D2D9 SWAP4 DUP6 SWAP3 PUSH1 0x1 SWAP9 PUSH1 0x0 SWAP1 ISZERO PUSH1 0x0 EQ PUSH2 0x18FD JUMPI POP PUSH2 0x18C3 PUSH1 0x40 MLOAD PUSH2 0x1890 PUSH1 0x40 DUP3 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x4E6F20766F7465 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0x2351 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x5 DUP2 ADD SLOAD PUSH2 0x18F5 PUSH1 0x4 PUSH1 0x3 DUP5 ADD SLOAD SWAP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x1727 JUMP JUMPDEST POP PUSH2 0x18C3 PUSH1 0x40 MLOAD PUSH2 0x190F PUSH1 0x40 DUP3 PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0xA DUP2 MSTORE PUSH10 0x57726F6E6720766F7465 PUSH1 0xB0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP5 ADD SSTORE PUSH2 0x1827 JUMP JUMPDEST PUSH2 0x1802 SWAP6 POP SWAP3 PUSH2 0x1809 SWAP3 PUSH2 0x194D PUSH1 0x5 SWAP6 DUP5 PUSH2 0x25A5 JUMP JUMPDEST SWAP7 POP SWAP3 POP SWAP3 PUSH2 0x17EF JUMP JUMPDEST SWAP3 PUSH1 0x50 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x50 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xF95 JUMPI PUSH1 0x64 SWAP1 DIV SWAP3 PUSH2 0x17C2 JUMP JUMPDEST SWAP1 SWAP3 SWAP1 PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0xF95 JUMPI PUSH1 0xA DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0xA EQ SWAP1 ISZERO OR ISZERO PUSH2 0xF95 JUMPI PUSH2 0x19A0 SWAP2 PUSH2 0x25C5 JUMP JUMPDEST SWAP2 PUSH1 0x50 DUP4 GT PUSH2 0x19B0 JUMPI JUMPDEST DUP12 PUSH2 0x17B2 JUMP JUMPDEST PUSH1 0x50 SWAP3 POP PUSH2 0x19AA JUMP JUMPDEST SWAP3 PUSH1 0x1 SHR SWAP3 PUSH2 0x17A9 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 POP DUP2 ISZERO ISZERO PUSH2 0x16A2 JUMP JUMPDEST SWAP2 POP SWAP4 SWAP3 PUSH1 0x0 SWAP1 DUP2 DUP3 DUP1 SWAP5 PUSH1 0x5 DUP8 ADD SLOAD SWAP8 DUP2 PUSH2 0x1FA2 JUMPI JUMPDEST POP POP PUSH1 0x1 DUP7 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND SUB PUSH2 0x1EFC JUMPI POP DUP6 DUP1 PUSH2 0x1E70 JUMPI JUMPDEST POP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP7 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1ACB JUMPI PUSH2 0x1A26 DUP2 PUSH1 0x6 DUP9 ADD PUSH2 0x24D0 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 DUP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 DUP10 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND SWAP1 DUP11 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x9A2 JUMPI DUP10 EQ PUSH2 0x1A89 JUMPI JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 ADD PUSH2 0x1A0D JUMP JUMPDEST SWAP5 SWAP1 PUSH2 0x1AC2 DUP6 PUSH1 0x1 SWAP4 DUP9 PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH2 0x1AAC DUP3 DUP7 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x25C5 JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE DUP6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SSTORE PUSH2 0x25C5 JUMP JUMPDEST SWAP6 SWAP1 SWAP2 POP PUSH2 0x1A68 JUMP JUMPDEST POP DUP6 DUP5 DUP7 PUSH1 0xFF PUSH1 0x12 DUP3 ADD SLOAD AND PUSH1 0x0 EQ PUSH2 0x1E02 JUMPI POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0xF DUP2 ADD DUP1 SLOAD SWAP3 SWAP5 SWAP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ DUP4 DUP6 DUP8 DUP4 ISZERO PUSH2 0x1C71 JUMPI POP POP POP PUSH1 0x10 DUP3 ADD DUP1 SLOAD PUSH1 0x3 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x3 EQ SWAP1 ISZERO OR ISZERO PUSH2 0xF95 JUMPI SWAP4 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 SWAP5 SWAP1 SWAP5 SHR PUSH1 0x24 DUP6 ADD DUP2 SWAP1 MSTORE SWAP4 PUSH1 0x20 DUP2 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP8 DUP9 ISZERO PUSH2 0x7A3 JUMPI PUSH2 0x1BC6 PUSH2 0x1C49 SWAP7 PUSH1 0x4 SWAP5 PUSH2 0x1BCC SWAP5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP13 PUSH2 0x1C54 JUMPI JUMPDEST POP SLOAD PUSH2 0x25A5 JUMP JUMPDEST SWAP1 PUSH2 0x25C5 JUMP JUMPDEST SWAP3 JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x5 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x4 CALLDATALOAD SWAP2 PUSH32 0xD4406E003C73582310B2B897FD7CACD5866ECAED769AC129EB0B1DCBB0901116 SWAP2 SWAP1 LOG2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x4 CALLDATALOAD SWAP8 DUP6 SWAP1 SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x80 DUP4 ADD SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH2 0x1C6C SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x79C JUMPI PUSH2 0x78E DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x10 DUP6 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP9 ADD DUP1 SLOAD SWAP7 SWAP13 POP SWAP3 SWAP10 SWAP2 SWAP1 SHR SWAP8 POP SWAP2 SWAP4 SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 DUP2 AND SWAP2 AND SUB PUSH2 0x1D5F JUMPI POP POP SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 PUSH1 0x20 DUP3 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7A3 JUMPI PUSH2 0x1BC6 DUP7 PUSH2 0x1D34 PUSH2 0x1C49 SWAP9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP13 PUSH1 0x4 SWAP8 PUSH2 0x1D3C SWAP8 PUSH2 0x1D42 JUMPI JUMPDEST POP PUSH2 0x25C5 JUMP JUMPDEST SWAP9 JUMPDEST SLOAD PUSH2 0x25A5 JUMP JUMPDEST SWAP3 PUSH2 0x1BCE JUMP JUMPDEST PUSH2 0x1D5A SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x79C JUMPI PUSH2 0x78E DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST PUSH2 0x1D2E JUMP JUMPDEST PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE SWAP2 SWAP10 POP SWAP7 SWAP8 POP SWAP2 SWAP1 POP PUSH1 0x20 DUP3 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7A3 JUMPI PUSH2 0x1BC6 DUP7 PUSH2 0x1DFC PUSH2 0x1C49 SWAP9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP13 PUSH1 0x4 SWAP8 PUSH2 0x1D3C SWAP8 PUSH2 0x1D42 JUMPI POP PUSH2 0x25C5 JUMP JUMPDEST SWAP10 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2BA2 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 SWAP3 SWAP2 PUSH2 0x1E68 SWAP2 PUSH2 0x1E24 PUSH1 0x8 SLOAD TIMESTAMP PUSH2 0x25C5 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SSTORE PUSH1 0x4 PUSH1 0x3 PUSH1 0xFF NOT DUP3 DUP5 ADD SLOAD AND OR SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x4 CALLDATALOAD SWAP8 DUP6 SWAP1 SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH1 0x80 DUP4 ADD SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x1 DUP7 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x7A3 JUMPI ISZERO PUSH2 0x1A08 JUMPI PUSH2 0x1EF5 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x79C JUMPI PUSH2 0x78E DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST POP DUP8 PUSH2 0x1A08 JUMP JUMPDEST SWAP6 SWAP1 POP DUP1 DUP1 PUSH2 0x1F0C JUMPI JUMPDEST POP PUSH2 0x1A0A JUMP JUMPDEST PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 DUP11 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x1F97 JUMPI ISZERO PUSH2 0x1F06 JUMPI PUSH2 0x1F90 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x79C JUMPI PUSH2 0x78E DUP2 DUP4 PUSH2 0x23D9 JUMP JUMPDEST POP DUP8 PUSH2 0x1F06 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x1FAD SWAP3 SWAP6 POP PUSH2 0x2585 JUMP JUMPDEST SWAP3 DUP9 DUP1 PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0x2 SWAP2 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52657665616C207068617365206E6F7420656E64656420796574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43617365206E6F7420726561647920666F722076657264696374000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x16A JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0xFF PUSH1 0x4 DUP5 ADD SLOAD AND PUSH1 0x6 DUP2 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x1 PUSH2 0x20A6 SWAP2 EQ PUSH2 0x24E8 JUMP JUMPDEST PUSH1 0xC DUP4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x22BD JUMPI PUSH1 0xD DUP4 ADD SLOAD TIMESTAMP GT PUSH2 0x2283 JUMPI PUSH2 0x20CA PUSH2 0x8D6 CALLER DUP6 PUSH2 0x2624 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP5 ADD PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD ISZERO PUSH2 0x224D JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 DUP6 ADD PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x9A2 JUMPI PUSH2 0x2215 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD PUSH1 0x0 SWAP4 DUP6 PUSH1 0xF8 SHL DUP3 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x21 DUP2 MSTORE PUSH2 0x2131 PUSH1 0x41 DUP3 PUSH2 0x23D9 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD SUB PUSH2 0x21D0 JUMPI CALLER DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x0 SWAP3 PUSH1 0x0 NOT DUP3 ADD PUSH2 0x21AC JUMPI PUSH1 0x9 ADD PUSH2 0x2177 DUP2 SLOAD PUSH2 0x2576 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH2 0x9A2 JUMPI DUP3 MSTORE PUSH32 0xFB0A2A4B906424480A54D601DB26AD920592115A97358D199495345723DF34CB PUSH1 0x20 CALLER SWAP4 LOG3 STOP JUMPDEST PUSH1 0x2 DUP3 EQ PUSH2 0x21BB JUMPI JUMPDEST POP PUSH2 0x217A JUMP JUMPDEST PUSH1 0xA ADD PUSH2 0x21C8 DUP2 SLOAD PUSH2 0x2576 JUMP JUMPDEST SWAP1 SSTORE DUP4 PUSH2 0x21B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F746520646F6573206E6F74206D6174636820636F6D6D6974000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E481C995D99585B1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x111A59081B9BDD0818DBDB5B5A5D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x14995D99585B081C1A185CD948195B991959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6D6D6974207068617365206E6F7420656E64656420796574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x16A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x16A JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x16A JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x237D JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x235C JUMP JUMPDEST SWAP1 PUSH1 0x6 DUP3 LT ISZERO PUSH2 0x9A2 JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x23CF JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x23B9 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x23AE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xFAB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x240F DUP5 PUSH2 0x239F JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x247D JUMPI POP PUSH1 0x1 EQ PUSH2 0x2436 JUMPI JUMPDEST POP PUSH2 0x2434 SWAP3 POP SUB DUP4 PUSH2 0x23D9 JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2461 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x2434 SWAP3 DUP3 ADD ADD CODESIZE PUSH2 0x2427 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x2448 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x2434 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x2427 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x24BA JUMPI PUSH1 0xC PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x24BA JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x24EF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F7420696E20766F74696E67207068617365 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2531 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F742061206A75726F7220666F722074686973206361736500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xF95 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x258F JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xF95 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xF95 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xF95 JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x16A JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x16A JUMPI SWAP1 JUMP JUMPDEST SWAP1 DUP2 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL DUP4 LT ISZERO PUSH2 0xFAB JUMPI DUP3 PUSH2 0x12E2 SWAP2 PUSH1 0x1 PUSH2 0x2434 SWAP6 ADD DUP2 SSTORE PUSH2 0x24D0 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2618 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x260D JUMP JUMPDEST SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP4 ADD DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x266B JUMPI DUP2 PUSH2 0x263F SWAP2 PUSH2 0x24D0 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND EQ PUSH2 0x2663 JUMPI PUSH1 0x1 ADD PUSH2 0x2628 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x2685 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xFAB JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x26B8 DUP3 PUSH2 0x2696 JUMP JUMPDEST PUSH2 0x26C5 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x23D9 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x26D6 PUSH1 0x1F NOT SWAP2 PUSH2 0x2696 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x24BA JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x258F JUMPI MOD SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xC SLOAD SWAP3 PUSH1 0x13 DUP3 ADD SLOAD SWAP1 DUP2 DUP6 LT PUSH2 0x2959 JUMPI DUP2 DUP6 EQ PUSH2 0x28FE JUMPI PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 TIMESTAMP DUP4 MSTORE PREVRANDAO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH6 0x185C1C19585B PUSH1 0xD2 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x66 DUP2 MSTORE PUSH2 0x2759 PUSH1 0x86 DUP3 PUSH2 0x23D9 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0x2766 DUP6 PUSH2 0x26AE JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST DUP1 DUP6 LT DUP1 PUSH2 0x28F5 JUMPI JUMPDEST ISZERO PUSH2 0x288E JUMPI PUSH1 0x0 SWAP7 DUP8 PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x27DF JUMPI JUMPDEST POP PUSH1 0x0 SWAP8 PUSH2 0x27D9 PUSH2 0x27D3 DUP12 DUP11 DUP5 PUSH2 0x27CB DUP13 PUSH2 0x27BD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP7 DUP8 SWAP2 PUSH1 0x60 SWAP4 SWAP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x23D9 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 PUSH2 0x2576 JUMP JUMPDEST SWAP9 PUSH2 0x2782 JUMP JUMPDEST PUSH2 0x27E9 DUP2 DUP6 PUSH2 0x26E0 JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x2885 JUMPI JUMPDEST PUSH2 0x2788 JUMPI SWAP1 SWAP3 SWAP8 POP SWAP5 SWAP1 SWAP5 PUSH2 0x2807 DUP2 DUP10 PUSH2 0x26E0 JUMP JUMPDEST MLOAD ISZERO PUSH2 0x2821 JUMPI JUMPDEST POP PUSH2 0x2818 SWAP1 PUSH2 0x2576 JUMP JUMPDEST SWAP4 SWAP6 SWAP1 SWAP6 PUSH2 0x276D JUMP JUMPDEST PUSH2 0x2818 SWAP2 SWAP4 PUSH2 0x283F DUP3 PUSH1 0x1 PUSH2 0x2839 PUSH2 0x287E SWAP6 DUP14 PUSH2 0x26E0 JUMP JUMPDEST MSTORE PUSH2 0x249F JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x285E DUP2 PUSH1 0x6 DUP10 ADD PUSH2 0x25EA JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x2576 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x280E JUMP JUMPDEST POP DUP10 DUP10 LT PUSH2 0x27F2 JUMP JUMPDEST SWAP6 SWAP7 POP POP POP SWAP1 POP PUSH1 0x6 SWAP2 POP ADD SLOAD SUB PUSH2 0x28A2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2061737369676E20656E6F7567682061707065616C206A PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x75726F7273 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP8 DUP4 LT PUSH2 0x2776 JUMP JUMPDEST POP SWAP2 SWAP3 SWAP2 POP PUSH1 0x6 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2915 JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x2921 PUSH1 0x1 SWAP3 PUSH2 0x249F JUMP JUMPDEST DUP4 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x2939 DUP2 DUP6 PUSH2 0x25EA JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820617661696C61626C65206A75726F727320666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x185C1C19585B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xC SLOAD SWAP3 PUSH1 0x3 SLOAD DUP5 EQ PUSH2 0x2B48 JUMPI PUSH1 0x40 SWAP3 SWAP2 SWAP3 MLOAD PUSH2 0x29F4 DUP2 PUSH2 0x27BD PUSH1 0x20 DUP3 ADD SWAP5 PREVRANDAO TIMESTAMP DUP8 SWAP2 PUSH1 0x60 SWAP4 SWAP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x2A01 DUP5 PUSH2 0x26AE JUMP JUMPDEST SWAP1 PUSH1 0x0 DUP1 SWAP3 JUMPDEST PUSH1 0x3 SLOAD DUP5 LT DUP1 PUSH2 0x2B3F JUMPI JUMPDEST ISZERO PUSH2 0x2AE4 JUMPI PUSH1 0x0 SWAP6 DUP7 PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x2A5F JUMPI JUMPDEST POP PUSH1 0x0 SWAP7 PUSH2 0x2A59 PUSH2 0x27D3 DUP11 DUP10 DUP5 PUSH2 0x27CB DUP12 PUSH2 0x27BD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH1 0x20 DUP5 ADD SWAP7 DUP8 SWAP2 PUSH1 0x60 SWAP4 SWAP2 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SWAP8 PUSH2 0x2A1E JUMP JUMPDEST PUSH2 0x2A69 DUP2 DUP5 PUSH2 0x26E0 JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x2ADB JUMPI JUMPDEST PUSH2 0x2A24 JUMPI SWAP1 SWAP5 SWAP2 SWAP7 POP PUSH2 0x2A85 DUP2 DUP9 PUSH2 0x26E0 JUMP JUMPDEST MLOAD ISZERO PUSH2 0x2A9D JUMPI JUMPDEST POP PUSH2 0x2A96 SWAP1 PUSH2 0x2576 JUMP JUMPDEST SWAP3 SWAP5 PUSH2 0x2A07 JUMP JUMPDEST PUSH2 0x2A96 SWAP2 SWAP3 PUSH2 0x2AB5 DUP3 PUSH1 0x1 PUSH2 0x2839 PUSH2 0x2AD4 SWAP6 DUP13 PUSH2 0x26E0 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x285E DUP2 PUSH1 0x6 DUP9 ADD PUSH2 0x25EA JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x2A8C JUMP JUMPDEST POP DUP9 DUP9 LT PUSH2 0x2A72 JUMP JUMPDEST POP POP SWAP2 POP POP PUSH1 0x6 SWAP2 SWAP3 POP ADD SLOAD PUSH1 0x3 SLOAD SUB PUSH2 0x2AFA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F2061737369676E20656E6F756768206A75726F72730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP7 DUP3 LT PUSH2 0x2A12 JUMP JUMPDEST POP SWAP2 SWAP1 PUSH1 0x6 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2B5D JUMPI POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x2B69 PUSH1 0x1 SWAP3 PUSH2 0x249F JUMP JUMPDEST DUP4 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH2 0x2B81 DUP2 DUP6 PUSH2 0x25EA JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD PUSH2 0x2B51 JUMP INVALID 0xB1 PUSH26 0xB08881890BD8E13EDDE8255F745991199906456A378692EC1143 EXP GASLIMIT PUSH1 0xA9 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC 0xB9 DUP10 0xFC 0xAD 0xBE SWAP7 BYTE 0xAF PUSH21 0x7D5C8835D0BEA1F22D094FB29D956F8A665189F95C 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "175:26761:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;;3763:26;175:26761;3763:26;;;;;;175:26761;3763:26;;:::i;:::-;175:26761;;;;;;;;;;-1:-1:-1;;;;;175:26761:21;;;;3763:26;175:26761;3763:26;;175:26761;;;;;;-1:-1:-1;;175:26761:21;;;;;;;;;;3719:37;175:26761;;;;;;;;3719:37;;175:26761;-1:-1:-1;;;;;175:26761:21;;;;;3719:37;;;175:26761;;;;3719:37;;;;;:::i;:::-;;175:26761;;3719:37;;175:26761;;;;3719:37;;;;;;175:26761;3719:37;;;;175:26761;3719:37;;;175:26761;3719:37;;;175:26761;3719:37;;;175:26761;3719:37;;;;175:26761;;;;;;;;3719:37;;;175:26761;;;3719:37;175:26761;3719:37;;;175:26761;3719:37;175:26761;;;;;3719:37;;175:26761;;3719:37;;175:26761;3719:37;;175:26761;3719:37;;175:26761;;3719:37;;175:26761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;3060:31;175:26761;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;;;;26481:5;175:26761;;;;;;;;;;;;;;;26551:18;;175:26761;;;;;;;;26583:18;;;175:26761;;;;26649:15;;175:26761;;26678:18;;;;175:26761;26710:27;;;175:26761;26751:27;;;175:26761;26792:21;26481:5;26792:21;;175:26761;26827:23;175:26761;;26827:23;;;175:26761;26864:23;;;;175:26761;;;26615:20;175:26761;26901:15;175:26761;;;;;26901:15;;175:26761;;26615:20;;175:26761;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;-1:-1:-1;;;;;175:26761:21;;:::i;:::-;;;;3926:47;175:26761;;;;;;;;;;3926:47;;;;175:26761;3926:47;175:26761;3926:47;;;175:26761;;3926:47;;;175:26761;;3926:47;;175:26761;3926:47;;;;;175:26761;3926:47;;175:26761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;175:26761:21;;7678:24;;;;:52;;175:26761;;;;7770:9;175:26761;7790:8;175:26761;-1:-1:-1;175:26761:21;;7933:15;175:26761;;;-1:-1:-1;;;7883:66:21;;7906:10;175:26761;7883:66;;175:26761;7926:4;175:26761;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7883:9:21;175:26761;7883:66;;;;;;;175:26761;7883:66;;;175:26761;;;;;8059:12;175:26761;8059:12;;;;:::i;:::-;;175:26761;;;;8104:5;175:26761;;;;;;;;;7933:15;8156:17;;175:26761;;;;;7906:10;175:26761;;;;;;;;;;8196:17;;;175:26761;;;;;;;;;;7790:8;8236:19;;175:26761;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;7933:15;175:26761;;;;;7790:8;175:26761;;;;;;;;;8280:14;;17164:21;175:26761;;;;;;;;7933:15;175:26761;8352:17;;;175:26761;8420:15;8104:5;8397:20;;175:26761;8512:22;8537:39;8470:32;175:26761;;8420:15;8470:32;:::i;:::-;8445:22;7770:9;8445:22;;175:26761;8352:17;175:26761;8537:39;;:::i;:::-;8512:22;;175:26761;8601:6;;;:::i;:::-;7933:15;175:26761;;;;;;;8624:60;175:26761;7906:10;8624:60;;175:26761;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;175:26761:21;-1:-1:-1;;175:26761:21;;;;;;;;;;;;7933:15;175:26761;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7790:8:21;175:26761;;;;;;;;;;;;;;;;;;;7933:15;175:26761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;175:26761:21;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;7883:66;;;;175:26761;7883:66;175:26761;7883:66;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;175:26761;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;7678:52;7720:10;;7706:24;;;7678:52;;175:26761;;;;;;-1:-1:-1;;175:26761:21;;;;;;2876:33;-1:-1:-1;;;;;175:26761:21;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;;;;;8828:5;175:26761;;;;;;;8860:18;;175:26761;;;;;;;;;8852:71;8860:39;;8852:71;:::i;:::-;8960:26;;;175:26761;8941:15;:45;175:26761;;9115:26;9056:10;9019:78;9027:40;9056:10;9027:40;;:::i;:::-;9019:78;:::i;:::-;9056:10;-1:-1:-1;175:26761:21;;;9115:26;;175:26761;;;;;;;;;;;9056:10;-1:-1:-1;175:26761:21;;;;;;;;;;;;;;;9056:10;9265:34;;;-1:-1:-1;9265:34:21;175:26761;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;3282:29;175:26761;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;3540:29;175:26761;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;;2466:103:9;;:::i;:::-;175:26761:21;;;16811:5;175:26761;;;;;;16843:18;;175:26761;;;;;;;;;;16865:19;16843:41;175:26761;;16947:26;;;175:26761;16928:15;:45;175:26761;;17019:22;;;175:26761;;;;;;;17142:18;;;175:26761;;17164:21;;175:26761;-1:-1:-1;;;;;175:26761:21;;;;;17142:43;;;;-1:-1:-1;17189:21:21;;;175:26761;-1:-1:-1;;;;;175:26761:21;17141:93;-1:-1:-1;;;;;175:26761:21;17252:10;:19;175:26761;;17379:47;:21;;;175:26761;17403:23;175:26761;17379:47;;:::i;:::-;175:26761;;-1:-1:-1;;;17490:66:21;;17252:10;175:26761;17490:66;;175:26761;17533:4;175:26761;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;17490:9:21;175:26761;17490:66;;;;;;;175:26761;17490:66;;;17141:93;175:26761;;;;17665:21;;;175:26761;;-1:-1:-1;;;;;;175:26761:21;17252:10;175:26761;;;17709:25;;;175:26761;;;;;-1:-1:-1;;175:26761:21;;;;;;;;;;;;;;;17881:14;175:26761;;17852:26;;;175:26761;-1:-1:-1;17950:30:21;;;175:26761;;;-1:-1:-1;17994:30:21;;175:26761;;;;18110:18;;;17665:21;;17403:23;18218:26;;;18276:25;;;;17665:21;;18137:3;175:26761;;18106:29;;;;;18176:21;;175:26761;18176:21;;;:::i;:::-;175:26761;;16865:19;175:26761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;;17142:18;175:26761;;;;;;18326:31;;175:26761;;;;;;;;18094:10;;18106:29;;;;175:26761;;;;;;;;18089:287;18539:7;;;;;:::i;:::-;18673:26;18702:43;18631:32;175:26761;;16928:15;18631:32;:::i;18702:43::-;18673:26;;175:26761;17164:21;175:26761;;;;;;;;;;;;;18817:53;175:26761;17252:10;18817:53;;175:26761;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;;;;17490:66;;;;175:26761;17490:66;175:26761;17490:66;;;;;;;:::i;:::-;;;;175:26761;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;;;;17141:93;;;175:26761;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;5724:10;175:26761;;5713:10;175:26761;;;;;;;;;;5907:16;175:26761;;;-1:-1:-1;;;5857:67:21;;5724:10;175:26761;5857:67;;175:26761;5900:4;175:26761;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5857:9:21;175:26761;5857:67;;;;;;;175:26761;5857:67;;;175:26761;;;;;5907:16;175:26761;;;;;;;;;;;;;;;;;;;;;6075:4;175:26761;;;6037:273;;175:26761;;;;6037:273;;175:26761;;;6037:273;;;175:26761;;;6037:273;;;175:26761;;;;;6037:273;;;175:26761;6240:2;175:26761;;6037:273;;;175:26761;;;;5724:10;175:26761;;5713:10;175:26761;;;;;;;;;;;;;;;;;;;;;;;;;;;;6075:4;175:26761;;;;;;5907:16;175:26761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6351:9;175:26761;-1:-1:-1;;;175:26761:21;;;;;;;6075:4;175:26761;;;6351:9;175:26761;6351:9;175:26761;:::i;:::-;;;-1:-1:-1;;;;;175:26761:21;;;;;;;;;;5724:10;175:26761;;;;;;;;6351:9;175:26761;-1:-1:-1;;175:26761:21;;;;;;;5724:10;175:26761;;6387:14;175:26761;;;;;;5907:16;175:26761;;;;;;6452:45;175:26761;5724:10;6452:45;;175:26761;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;5857:67;;;;175:26761;5857:67;175:26761;5857:67;;;;;;;:::i;:::-;;;;175:26761;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;;;;25990:5;175:26761;;25990:21;175:26761;;;25990:21;175:26761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;175:26761:21;;;;;-1:-1:-1;175:26761:21;;;;;;;;;;;;;;;;-1:-1:-1;;;;;175:26761:21;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;;;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;3688:25;175:26761;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;3140:23;175:26761;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;;:::i;:::-;-1:-1:-1;;;;;175:26761:21;;;;;25327:10;175:26761;;;;;;;;;;;;25443:18;;;175:26761;;25485:16;;175:26761;25530:21;;;175:26761;25581:22;;;;175:26761;25668:14;;;;25730:3;175:26761;;;;;;25730:3;175:26761;;;;;;;25714:33;;175:26761;25714:33;;:::i;:::-;25664:144;;175:26761;;;;;;;;;;;;;;;;;;;;;;25664:144;175:26761;25780:16;175:26761;25664:144;;;175:26761;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;6660:10;175:26761;;6649:10;175:26761;;;;;;;;;;;;;6753:15;;;175:26761;;;;6899:18;;175:26761;6660:10;175:26761;;7001:14;175:26761;;;;;;7057:9;175:26761;;;;;;;;;;7057:31;;;:::i;:::-;175:26761;;;;;;;;-1:-1:-1;;;;;175:26761:21;7098:36;175:26761;7098:24;;;:::i;:::-;175:26761;;-1:-1:-1;;;;;175:26761:21;;;;;;;;;;;;;;;;;;;;;;;;7098:36;175:26761;;7001:14;175:26761;;;;;;7057:9;175:26761;;;;;7369:44;;175:26761;;-1:-1:-1;;175:26761:21;;;;:::i;:::-;;;;;;;;;;;;;;;;;7057:9;175:26761;6660:10;175:26761;;6649:10;175:26761;;;;;;;;;;;6899:18;175:26761;;;;6753:15;175:26761;;;;;;;;;;;;;;;;;;;;6660:10;175:26761;;7001:14;175:26761;;;;;;;;;;;;;;;;7369:44;;6660:10;175:26761;7369:44;;175:26761;;;;;;;;;;;;;;;;;;;;;7369:44;;175:26761;;7369:9;-1:-1:-1;;;;;175:26761:21;7369:44;;;;;;;175:26761;7369:44;;;175:26761;;;;;6660:10;7480:29;175:26761;7480:29;;175:26761;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;7369:44;;;;175:26761;7369:44;175:26761;7369:44;;;;;;;:::i;:::-;;;;175:26761;;;;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;3453:38;175:26761;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;2995:30;175:26761;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;2466:103:9;;:::i;:::-;175:26761:21;;;;10645:5;175:26761;;;;;;;10677:18;;175:26761;;;;;;;;;10677:39;175:26761;;10783:26;;;175:26761;10765:15;:44;175:26761;;;;10677:18;;175:26761;;-1:-1:-1;;175:26761:21;10880:20;175:26761;;;10990:30;;;175:26761;11023:30;;;175:26761;-1:-1:-1;10989:113:21;;;175:26761;11057:21;;175:26761;-1:-1:-1;;;;;175:26761:21;10989:113;11112:18;;;175:26761;;-1:-1:-1;;;;;;175:26761:21;-1:-1:-1;;;;;175:26761:21;;;;;;;;;;11185:21;;175:26761;;;;11175:31;;;175:26761;11174:85;;175:26761;;;;;11447:3;175:26761;11420:18;;175:26761;11416:29;;;;;11486:21;11420:18;175:26761;11420:18;;11486:21;:::i;:::-;175:26761;;;;;;;;;;;;11544:36;175:26761;;-1:-1:-1;175:26761:21;;;;;;;;;11544:25;;;175:26761;;;;;;;;;11112:18;175:26761;;;;;11705:16;:18;175:26761;11705:16;;175:26761;11705:18;:::i;:::-;:16;;175:26761;11705:16;;175:26761;;;;;;;;;;;;;;;11742:24;;;:56;;;11447:3;11738:2779;;;11850:19;;;;;;:::i;:::-;11887:18;175:26761;11887:18;;:20;175:26761;;11887:20;:::i;:::-;175:26761;;;;;11925:22;;175:26761;12068:21;;;175:26761;;;12092:3;12068:27;;12064:253;;11738:2779;-1:-1:-1;175:26761:21;;;11705:16;;;175:26761;;;;;;;;;;;;;;;;;;;;12356:94;;175:26761;;;;12356:94;;;;11738:2779;175:26761;11404:10;;;12064:253;175:26761;;10880:20;175:26761;;;;;;;12356:94;175:26761;;12092:3;175:26761;12356:94;175:26761;;;;12194:27;12190:109;;12064:253;;;;;;;;;12190:109;12092:3;175:26761;;12190:109;;11738:2779;12542:22;;175:26761;12542:22;;;;;;;:24;175:26761;;12542:24;:::i;:::-;175:26761;;;;;;12782:21;;;12778:113;;11738:2779;175:26761;12973:26;;12969:213;;11738:2779;13270:21;;;;175:26761;13270:26;13294:2;13270:26;;13266:128;;11738:2779;175:26761;13447:18;;175:26761;;;13447:32;13483:3;13447:32;;;;:::i;:::-;175:26761;;11023:30;10880:20;175:26761;;13631:28;;;;;:::i;:::-;:39;13627:125;;11738:2779;13790:28;13270:21;13790:28;13855:26;13790:28;;;;;;:::i;:::-;175:26761;;13855:26;:::i;:::-;13968:25;;13270:21;;;;;;175:26761;-1:-1:-1;;175:26761:21;;;;;;;13270:21;;;175:26761;13964:193;175:26761;;14330:55;14408:94;14252:55;;;175:26761;14252:55;175:26761;14252:28;;:55;:28;;;175:26761;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;175:26761:21;;;;14252:55;175:26761;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14330:55;;;13270:21;;;175:26761;14408:94;175:26761;;14465:18;;175:26761;11705:16;;175:26761;;;14408:94;;;;175:26761;;;;;;;;;;;;;;;;;;14408:94;;;;11738:2779;;14252:55;175:26761;;;;;;;;:::i;:::-;11023:30;175:26761;;-1:-1:-1;;;175:26761:21;;;;14252:55;;13964:193;175:26761;13270:21;;;175:26761;13964:193;;13627:125;13790:28;13704:29;;;13855:26;13704:29;;13270:21;13704:29;;;:::i;:::-;13627:125;;;;;;;13266:128;175:26761;13348:2;175:26761;;;;;;13348:2;175:26761;;;;;;;13353:3;175:26761;;13266:128;;;12969:213;175:26761;;;-1:-1:-1;;175:26761:21;;;;;;;11023:30;175:26761;;;;;;11023:30;175:26761;;;;;;;13037:47;;;:::i;:::-;13110:16;13124:2;13110:16;;13106:38;;12969:213;;;;13106:38;13124:2;;-1:-1:-1;13106:38:21;;12778:113;175:26761;;;12778:113;;;11742:56;-1:-1:-1;175:26761:21;;-1:-1:-1;11770:28:21;;;11742:56;;11416:29;;;;;175:26761;14606:27;;14643:32;14685:28;14840:21;;;;175:26761;14913:21;;14909:110;;11399:3128;-1:-1:-1;;175:26761:21;11185:21;;175:26761;-1:-1:-1;;;;;175:26761:21;;;;;15041:31;175:26761;;15134:34;;15186:19;15182:116;;15037:523;;;175:26761;15663:3;175:26761;11420:18;;175:26761;15632:29;;;;;15702:21;11420:18;175:26761;11420:18;;15702:21;:::i;:::-;175:26761;;;;;;;-1:-1:-1;;;;;175:26761:21;-1:-1:-1;175:26761:21;;;11544:25;;;175:26761;;;;;;;;;;;;;;;;;;;;;;;;;15741:51;;15737:260;;15663:3;175:26761;;;;11112:18;175:26761;;;;;10880:20;16078:31;175:26761;;-1:-1:-1;;175:26761:21;;;;;15620:10;;15737:260;175:26761;;15943:39;175:26761;;;;;;11112:18;175:26761;;15849:57;175:26761;;;;;15849:34;175:26761;15849:57;:::i;:::-;175:26761;;;11112:18;175:26761;;;;;;15812:34;175:26761;15943:39;:::i;:::-;15737:260;;;;;;15632:29;;;;;175:26761;16181:22;;;175:26761;;16177:510;175:26761;;;-1:-1:-1;175:26761:21;;;;;;10645:5;175:26761;;;;;23347:21;;;175:26761;;16334:16;;;;23347:21;;175:26761;-1:-1:-1;;;;;175:26761:21;;;;;23337:31;16334:16;;;23388:1000;;;;23515:25;;;;;;175:26761;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;23582:49:21;;-1:-1:-1;;;;;175:26761:21;;;;23582:49;;175:26761;10880:20;175:26761;;;;;;;;;;;;;;;;;23582:49;175:26761;;23582:9;-1:-1:-1;;;;;175:26761:21;23582:49;;;;;;;23722:34;24531:81;23582:49;175:26761;23582:49;23701:56;23582:49;-1:-1:-1;;;;;;;;;;;23582:49:21;;;23388:1000;175:26761;;23722:34;:::i;:::-;23701:56;;:::i;:::-;23388:1000;;24406:18;175:26761;;-1:-1:-1;;175:26761:21;14840:21;175:26761;;;;;;-1:-1:-1;;;;;175:26761:21;;;;;;;;;;;;;;24467:49;;175:26761;24467:49;175:26761;;;;;;;24531:81;;175:26761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24531:81;;;;16177:510;175:26761;;;;23582:49;;;175:26761;23582:49;175:26761;23582:49;;;;;;;:::i;:::-;;;23388:1000;23947:25;;;175:26761;;;24004:21;;;175:26761;;23947:25;;-1:-1:-1;23947:25:21;;175:26761;;;;-1:-1:-1;23947:25:21;;24004:21;;23947:25;175:26761;-1:-1:-1;;;;;175:26761:21;;;;;23994:31;175:26761;;-1:-1:-1;;175:26761:21;;;-1:-1:-1;;;24045:54:21;;-1:-1:-1;;;;;175:26761:21;;;;24045:54;;175:26761;;;;;;;;;;;;;;24045:54;175:26761;;24045:9;-1:-1:-1;;;;;175:26761:21;24045:54;;;;;;;24337:39;24045:54;24117:30;24531:81;24045:54;-1:-1:-1;;;;;;;;;;;24045:54:21;175:26761;24045:54;24316:61;24045:54;;;23990:313;24117:30;;:::i;:::-;23990:313;;175:26761;24337:39;:::i;24316:61::-;23388:1000;;;24045:54;;;175:26761;24045:54;175:26761;24045:54;;;;;;;:::i;:::-;;;23990:313;10880:20;24205:21;;175:26761;;;-1:-1:-1;;;24186:54:21;;-1:-1:-1;;;;;175:26761:21;;;;24186:54;;175:26761;;;;;;;;;-1:-1:-1;175:26761:21;;-1:-1:-1;175:26761:21;;-1:-1:-1;175:26761:21;;;;;;24186:54;175:26761;;24186:9;-1:-1:-1;;;;;175:26761:21;24186:54;;;;;;;24337:39;24186:54;24258:30;24531:81;24186:54;-1:-1:-1;;;;;;;;;;;24186:54:21;175:26761;24186:54;24316:61;24186:54;;;24258:30;;:::i;:::-;23990:313;;;16177:510;-1:-1:-1;;;;;;;;;;;175:26761:21;;;16595:81;175:26761;16490:32;11544:25;175:26761;10765:15;16490:32;:::i;:::-;16461:26;;;175:26761;;;;;10677:18;;;175:26761;;;10677:18;;175:26761;;;;;;;;16595:81;;175:26761;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16595:81;;;;16177:510;;15182:116;175:26761;11185:21;;175:26761;;;-1:-1:-1;;;15225:58:21;;-1:-1:-1;;;;;175:26761:21;;;;15225:58;;175:26761;;;;;;;;;;;;;;15225:58;175:26761;;15225:9;-1:-1:-1;;;;;175:26761:21;15225:58;;;;;;;15182:116;15225:58;;;175:26761;15225:58;175:26761;15225:58;;;;;;;:::i;:::-;;;15182:116;;15037:523;15386:34;;-1:-1:-1;15386:34:21;;15434:116;;15037:523;;;;15434:116;10880:20;15496:21;;175:26761;;;-1:-1:-1;;;15477:58:21;;-1:-1:-1;;;;;175:26761:21;;;;15477:58;;175:26761;;;;;;;;;;;;;;15477:58;175:26761;;15477:9;-1:-1:-1;;;;;175:26761:21;15477:58;;;;;;;15434:116;15477:58;;;175:26761;15477:58;175:26761;15477:58;;;;;;;:::i;:::-;;;15434:116;;15477:58;175:26761;;;;;;;;;14909:110;14973:35;;;;;:::i;:::-;14909:110;;;;;11174:85;10880:20;11174:85;;;10989:113;10880:20;11081:21;;175:26761;-1:-1:-1;;;;;175:26761:21;10989:113;;175:26761;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;;;;;;;;;;;;;9457:5;175:26761;;;;;9489:18;175:26761;;9489:18;;175:26761;;;;;;;;;9481:71;9489:39;;9481:71;:::i;:::-;9588:26;;;175:26761;9570:15;:44;175:26761;;;9682:26;;;175:26761;9570:15;9663:45;175:26761;;9741:78;9749:40;9778:10;9749:40;;:::i;9741:78::-;9778:10;-1:-1:-1;175:26761:21;;;9837:26;;;175:26761;;;;;;;;;9837:52;175:26761;;9778:10;-1:-1:-1;175:26761:21;;;9926:25;;;175:26761;;;;;;;;;;;;;;;;;;;;;10058:30;175:26761;10058:30;;175:26761;;;;;;;;;;;;;;10058:30;;;;;;:::i;:::-;175:26761;10048:41;;9778:10;175:26761;;;;;;;;;;;10107:57;175:26761;;9778:10;175:26761;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;;;-1:-1:-1;;;;10265:32:21;;175:26761;;10313:30;;:32;175:26761;;10313:32;:::i;:::-;175:26761;;10261:196;175:26761;;;;;;;10472:40;175:26761;9778:10;10472:40;;175:26761;10261:196;10375:23;10366:32;;10362:95;;10261:196;;;;10362:95;10414:30;;:32;175:26761;;10414:32;:::i;:::-;175:26761;;10362:95;;;175:26761;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;3350:31;175:26761;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;;3596:29;175:26761;;;;;;;;-1:-1:-1;;;;;175:26761:21;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;175:26761:21;;;;;;;;;-1:-1:-1;175:26761:21;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;175:26761:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;175:26761:21;;;;;-1:-1:-1;175:26761:21;;-1:-1:-1;175:26761:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7057:9;175:26761;;;;;;7057:9;-1:-1:-1;175:26761:21;;-1:-1:-1;175:26761:21;;;-1:-1:-1;175:26761:21;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;175:26761:21;;-1:-1:-1;175:26761:21;;;-1:-1:-1;175:26761:21;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;175:26761:21;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;24709:272;;175:26761;24850:3;24829:12;;;175:26761;;24825:23;;;;;24873:15;;;;:::i;:::-;175:26761;;;;;;;;-1:-1:-1;;;;;175:26761:21;;;;;;24873:24;24869:74;;175:26761;;24813:10;;24869:74;24917:11;;;175:26761;24917:11;:::o;24825:23::-;;;;;175:26761;24709:272;:::o;2575:307:9:-;1899:1;2702:7;175:26761:21;2702:18:9;2698:86;;1899:1;2702:7;175:26761:21;2575:307:9:o;2698:86::-;2743:30;;;2702:7;2743:30;;2702:7;2743:30;175:26761:21;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;20904:2011::-;;175:26761;-1:-1:-1;175:26761:21;20996:5;175:26761;;;-1:-1:-1;175:26761:21;21039:9;175:26761;21090:26;;;;175:26761;21143:26;;;;175:26761;;21328:26;;;21324:273;;175:26761;;;21717:70;;21734:15;;175:26761;;21751:16;175:26761;;;;;;;;-1:-1:-1;;;175:26761:21;;;;21717:70;;;;;;;:::i;:::-;175:26761;21707:81;;21893:20;;;;:::i;:::-;-1:-1:-1;21972:13:21;-1:-1:-1;21967:830:21;22035:3;21987:18;;;:46;;;22035:3;21987:46;;;-1:-1:-1;22088:19:21;;22206:198;;;;;;22358:44;-1:-1:-1;175:26761:21;22325:10;22241:66;175:26761;;;22259:35;175:26761;22259:35;175:26761;;22259:35;;;175:26761;22259:35;;;;175:26761;;;;;;;;;;;;;;;;;22259:35;;175:26761;;22259:35;;;;;;:::i;:::-;175:26761;22249:46;;22241:66;:::i;:::-;22325:10;;:::i;:::-;22206:198;;;;22358:21;;;;:::i;:::-;175:26761;;;22358:44;;;22206:198;;22358:44;;;;;;;;22490:21;;;;:::i;:::-;175:26761;;22485:302;;22206:198;22035:3;;;;:::i;:::-;21972:13;;;;;;22485:302;22035:3;22531:28;;22601:22;22531:28;22206:198;22531:28;22757:15;22531:28;;;:::i;:::-;175:26761;22601:22;:::i;:::-;175:26761;;;;;;;;-1:-1:-1;;;;;175:26761:21;22641:38;175:26761;;22641:18;;:38;:::i;:::-;-1:-1:-1;175:26761:21;22697:10;175:26761;;22697:35;175:26761;-1:-1:-1;175:26761:21;22697:35;22206:198;175:26761;;;;;;;;22757:15;:::i;:::-;22485:302;;;;22358:44;22383:19;;;;22358:44;;21987:46;;;;;;;;175:26761;21987:46;;22823:18;175:26761;22823:43;175:26761;;20904:2011::o;175:26761::-;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;21987:46;22009:24;;;;21987:46;;21324:273;-1:-1:-1;21375:10:21;;;-1:-1:-1;21470:18:21;;-1:-1:-1;21387:12:21;;;;;;21580:7;;;:::o;21401:3::-;21440:12;;175:26761;21440:12;;:::i;:::-;175:26761;;;;;;;;;;;;21470:30;;;;:::i;:::-;-1:-1:-1;175:26761:21;21518:10;175:26761;;21518:27;175:26761;-1:-1:-1;175:26761:21;21518:27;175:26761;;;;;;;;;;21375:10;;175:26761;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;-1:-1:-1;;;175:26761:21;;;;;;;18992:1813;;175:26761;-1:-1:-1;175:26761:21;19078:5;175:26761;;;-1:-1:-1;175:26761:21;;19121:9;175:26761;;19265:8;175:26761;19253:20;;19249:267;;175:26761;;;;;19636:60;;;175:26761;19636:60;;19670:16;;19653:15;19636:60;175:26761;;;;;;;;;;;;;;;;;19636:60;175:26761;19626:71;;19802:20;;;;:::i;:::-;19832:25;-1:-1:-1;;19876:824:21;19938:3;19265:8;175:26761;19896:12;;:40;;;19938:3;19896:40;;;-1:-1:-1;19991:19:21;;20109:198;;;;;;20261:44;-1:-1:-1;175:26761:21;20228:10;20144:66;175:26761;;;20162:35;175:26761;20162:35;175:26761;;20162:35;;;175:26761;20162:35;;;;175:26761;;;;;;;;;;;;;;;;;20228:10;20109:198;;;;20261:21;;;;:::i;:::-;175:26761;;;20261:44;;;20109:198;;20261:44;;;;;;20393:21;;;;:::i;:::-;175:26761;;20388:302;;20109:198;19938:3;;;;:::i;:::-;19881:13;;;;20388:302;19938:3;20434:28;;20504:22;20434:28;20109:198;20434:28;20660:15;20434:28;;;:::i;20504:22::-;175:26761;;19265:8;175:26761;;;;;-1:-1:-1;;;;;175:26761:21;20544:38;175:26761;20544:18;;;:38;:::i;20660:15::-;20388:302;;;;20261:44;20286:19;;;;20261:44;;19896:40;;;;;;20726:18;19896:40;;;20726:18;175:26761;19265:8;175:26761;20726:37;175:26761;;18992:1813::o;175:26761::-;;;-1:-1:-1;;;175:26761:21;;;;;;;;;;;;;;;;;;;;19896:40;19912:24;;;;19896:40;;19249:267;-1:-1:-1;19294:10:21;;19389:18;;-1:-1:-1;19306:12:21;;;;;;19499:7;;;:::o;19320:3::-;19359:12;;175:26761;19359:12;;:::i;:::-;175:26761;;;;;;;;19265:8;175:26761;;;19389:30;;;;:::i;:::-;-1:-1:-1;175:26761:21;19437:10;175:26761;;19437:27;175:26761;-1:-1:-1;175:26761:21;19437:27;175:26761;;;;;;;;;;19294:10;"
            },
            "methodIdentifiers": {
              "appeal(uint256)": "7e69b7b0",
              "appealDepositMultiplier()": "317e48b6",
              "appealDuration()": "867bc61b",
              "appealJurySize()": "04495c99",
              "cases(uint256)": "f09790dd",
              "commitDuration()": "6f833811",
              "commitVote(uint256,bytes32)": "9da69180",
              "createCase(address,string)": "a2febe29",
              "executeVerdict(uint256)": "1c204d0e",
              "filingFeeAmount()": "232e0c87",
              "getCaseDetails(uint256)": "c3a90635",
              "getCaseJurors(uint256)": "7035aba2",
              "getJurorReputation(address)": "4c4b848c",
              "jurorPenaltyRate()": "059a184c",
              "jurorPool(uint256)": "f643d3d7",
              "jurorStakeAmount()": "d496c455",
              "jurorsInfo(address)": "b55796f3",
              "jurySize()": "536c8c15",
              "juryToken()": "9eacb5b9",
              "nextCaseId()": "6350eae8",
              "registerAsJuror()": "71929ad5",
              "revealDuration()": "886a6de1",
              "revealVote(uint256,uint8,bytes32)": "0b05b14f",
              "unregisterAsJuror()": "43bbdd3f"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_filingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_jurorStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_jurySize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_commitDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_revealDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_penaltyRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_appealDepositMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_appealDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_appealJurySize\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"caseId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"appellant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"appealDeposit\",\"type\":\"uint256\"}],\"name\":\"AppealInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"caseId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"appealSuccessful\",\"type\":\"bool\"}],\"name\":\"AppealResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"caseId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"plaintiff\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"defendant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"filingFee\",\"type\":\"uint256\"}],\"name\":\"CaseCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"caseId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"plaintiffReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"defendantReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalJurorReward\",\"type\":\"uint256\"}],\"name\":\"CaseResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"juror\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"penaltyAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"penaltyRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"JurorPenalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"juror\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"}],\"name\":\"JurorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"juror\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newReputation\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"correctVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"}],\"name\":\"JurorReputationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"juror\",\"type\":\"address\"}],\"name\":\"JurorUnregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"caseId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"juror\",\"type\":\"address\"}],\"name\":\"VoteCommitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"caseId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"juror\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum DeciCourt.VoteOption\",\"name\":\"vote\",\"type\":\"uint8\"}],\"name\":\"VoteRevealed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_caseId\",\"type\":\"uint256\"}],\"name\":\"appeal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"appealDepositMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"appealDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"appealJurySize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cases\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"plaintiff\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"defendant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"evidenceCID\",\"type\":\"string\"},{\"internalType\":\"enum DeciCourt.CaseStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"filingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"plaintiffVoteCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"defendantVoteCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commitDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revealDeadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"appellant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"appealDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"appealDeadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAppealed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"appealJurySize\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_caseId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_voteHash\",\"type\":\"bytes32\"}],\"name\":\"commitVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_defendant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_evidenceCID\",\"type\":\"string\"}],\"name\":\"createCase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_caseId\",\"type\":\"uint256\"}],\"name\":\"executeVerdict\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"filingFeeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_caseId\",\"type\":\"uint256\"}],\"name\":\"getCaseDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"plaintiff\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"defendant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"evidenceCID\",\"type\":\"string\"},{\"internalType\":\"enum DeciCourt.CaseStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"filingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"plaintiffVoteCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"defendantVoteCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"commitDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"revealDeadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_caseId\",\"type\":\"uint256\"}],\"name\":\"getCaseJurors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_juror\",\"type\":\"address\"}],\"name\":\"getJurorReputation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"correctVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputationScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"consecutiveWrong\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accuracyRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"jurorPenaltyRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"jurorPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"jurorStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"jurorsInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isRegistered\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isServing\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"correctVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reputationScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"consecutiveWrong\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"jurySize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"juryToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextCaseId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAsJuror\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"revealDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_caseId\",\"type\":\"uint256\"},{\"internalType\":\"enum DeciCourt.VoteOption\",\"name\":\"_vote\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"revealVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unregisterAsJuror\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"getCaseJurors(uint256)\":{\"details\":\"\\u83b7\\u53d6\\u6307\\u5b9a\\u6848\\u4ef6\\u7684\\u966a\\u5ba1\\u5458\\u5217\\u8868\"},\"getJurorReputation(address)\":{\"details\":\"\\u83b7\\u53d6\\u966a\\u5ba1\\u5458\\u7684\\u8be6\\u7ec6\\u58f0\\u8a89\\u4fe1\\u606f\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DeciCourt.sol\":\"DeciCourt\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/DeciCourt.sol\":{\"keccak256\":\"0x34b7a307b82d7e01bc84e2b9693170650c046df969e5497852502260c5d3b99d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a58f955200cae500094db4564adfa49a7946a4116dc499e70564629e56813cae\",\"dweb:/ipfs/QmcAtStyGokLrfTLMGpDc5GmXrNoUxcDx66yiK4to26q9a\"]}},\"version\":1}"
        }
      },
      "contracts/JuryToken.sol": {
        "JuryToken": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040523461043c57604080519081016001600160401b038111828210176103475760409081526009825268253ab93caa37b5b2b760b91b602083015280519081016001600160401b038111828210176103475760405260048152634a55525960e01b602082015281516001600160401b03811161034757600354600181811c91168015610432575b602082101461032757601f81116103cd575b50602092601f8211600114610368579281929360009261035d575b50508160011b916000199060031b1c1916176003555b80516001600160401b03811161034757600454600181811c9116801561033d575b602082101461032757601f81116102c2575b50602091601f821160011461025e57918192600092610253575b50508160011b916000199060031b1c1916176004555b331561023d5760058054610100600160a81b0319811633600881811b610100600160a81b03169290921790935590919082901c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360ff6000911661022e5760025469d3c21bcecceda1000000810180911161021a5760025550336000526000602052604060002069d3c21bcecceda1000000815401905560405169d3c21bcecceda1000000815260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a3604051610ab990816104428239f35b634e487b7160e01b82526011600452602482fd5b63d93c066560e01b8152600490fd5b631e4fbdf760e01b600052600060045260246000fd5b015190503880610119565b601f198216926004600052806000209160005b8581106102aa57508360019510610291575b505050811b0160045561012f565b015160001960f88460031b161c19169055388080610283565b91926020600181928685015181550194019201610271565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c8101916020841061031d575b601f0160051c01905b81811061031157506100ff565b60008155600101610304565b90915081906102fb565b634e487b7160e01b600052602260045260246000fd5b90607f16906100ed565b634e487b7160e01b600052604160045260246000fd5b0151905038806100b6565b601f198216936003600052806000209160005b8681106103b5575083600195961061039c575b505050811b016003556100cc565b015160001960f88460031b161c1916905538808061038e565b9192602060018192868501518155019401920161037b565b60036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c81019160208410610428575b601f0160051c01905b81811061041c575061009b565b6000815560010161040f565b9091508190610406565b90607f1690610089565b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461070757508063095ea7b31461065557806318160ddd1461063757806323b872dd146105ff578063313ce567146105e35780633f4ba83a1461057a57806340c10f19146104be57806342966c68146104a15780635c975abb1461047e57806370a0823114610444578063715018a6146103e357806379cc6790146103b15780638456cb59146103575780638da5cb5b1461032a57806395d89b4114610209578063a9059cbb146101d8578063dd62ed3e146101875763f2fde38b146100e557600080fd5b34610182576020366003190112610182576100fe610823565b6101066109b1565b6001600160a01b03811690811561016c5760058054610100600160a81b03198116600893841b610100600160a81b031617909155901c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b34610182576040366003190112610182576101a0610823565b6101a8610839565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b34610182576040366003190112610182576101fe6101f4610823565b60243590336108fa565b602060405160018152f35b346101825760003660031901126101825760405160006004548060011c90600181168015610320575b60208310811461030c578285529081156102f05750600114610299575b50819003601f01601f191681019067ffffffffffffffff8211818310176102835761027f829182604052826107da565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b8282106102da5750602091508201018261024f565b60018160209254838588010152019101906102c5565b90506020925060ff191682840152151560051b8201018261024f565b634e487b7160e01b84526022600452602484fd5b91607f1691610232565b346101825760003660031901126101825760055460405160089190911c6001600160a01b03168152602090f35b34610182576000366003190112610182576103706109b1565b610378610a66565b600160ff1960055416176005557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b34610182576040366003190112610182576103e16103cd610823565b602435906103dc82338361084f565b6109dd565b005b34610182576000366003190112610182576103fc6109b1565b60058054610100600160a81b0319811690915560009060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610182576020366003190112610182576001600160a01b03610465610823565b1660005260006020526020604060002054604051908152f35b3461018257600036600319011261018257602060ff600554166040519015158152f35b34610182576020366003190112610182576103e1600435336109dd565b34610182576040366003190112610182576104d7610823565b602435906104e36109b1565b6001600160a01b03168015610564576104fa610a66565b6002549180830180931161054e576020926002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600093849284845283825260408420818154019055604051908152a380f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b34610182576000366003190112610182576105936109b1565b60055460ff8116156105d25760ff19166005557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b638dfc202b60e01b60005260046000fd5b3461018257600036600319011261018257602060405160128152f35b34610182576060366003190112610182576101fe61061b610823565b610623610839565b6044359161063283338361084f565b6108fa565b34610182576000366003190112610182576020600254604051908152f35b346101825760403660031901126101825761066e610823565b6024359033156106f1576001600160a01b03169081156106db57336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b346101825760003660031901126101825760006003548060011c906001811680156107d0575b60208310811461030c578285529081156102f057506001146107795750819003601f01601f191681019067ffffffffffffffff8211818310176102835761027f829182604052826107da565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b8282106107ba5750602091508201018261024f565b60018160209254838588010152019101906107a5565b91607f169161072d565b91909160208152825180602083015260005b81811061080d575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016107ec565b600435906001600160a01b038216820361018257565b602435906001600160a01b038216820361018257565b6001600160a01b03908116600081815260016020908152604080832094861683529390529190912054929190600019841061088b575b50505050565b8284106108d55780156106f1576001600160a01b038216156106db57600052600160205260406000209060018060a01b031660005260205260406000209103905538808080610885565b508290637dc7a0d960e11b60005260018060a01b031660045260245260445260646000fd5b6001600160a01b031690811561099b576001600160a01b031691821561056457610922610a66565b60008281528060205260408120548281106109815791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fd5b60055460081c6001600160a01b031633036109c857565b63118cdaa760e01b6000523360045260246000fd5b6001600160a01b0316801561099b576109f4610a66565b600091818352826020526040832054818110610a4d57817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b6064939263391434e360e21b8452600452602452604452fd5b60ff60055416610a7257565b63d93c066560e01b60005260046000fdfea2646970667358221220ee5c79269cbd1a1e23352576f6e6ba31e249b0157cff93441cbd4baba2c1523464736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x43C JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x347 JUMPI PUSH1 0x40 SWAP1 DUP2 MSTORE PUSH1 0x9 DUP3 MSTORE PUSH9 0x253AB93CAA37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x347 JUMPI PUSH1 0x40 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x4A555259 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x347 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x432 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x327 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x3CD JUMPI JUMPDEST POP PUSH1 0x20 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x368 JUMPI SWAP3 DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x35D JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x347 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x33D JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x327 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x2C2 JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x25E JUMPI SWAP2 DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x253 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST CALLER ISZERO PUSH2 0x23D JUMPI PUSH1 0x5 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND CALLER PUSH1 0x8 DUP2 DUP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP4 SSTORE SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0xFF PUSH1 0x0 SWAP2 AND PUSH2 0x22E JUMPI PUSH1 0x2 SLOAD PUSH10 0xD3C21BCECCEDA1000000 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x21A JUMPI PUSH1 0x2 SSTORE POP CALLER PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH10 0xD3C21BCECCEDA1000000 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH10 0xD3C21BCECCEDA1000000 DUP2 MSTORE PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x40 MLOAD PUSH2 0xAB9 SWAP1 DUP2 PUSH2 0x442 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x119 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP3 PUSH1 0x4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x2AA JUMPI POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x291 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x12F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x283 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x271 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x31D JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x311 JUMPI POP PUSH2 0xFF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x304 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2FB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0xED JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xB6 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP4 PUSH1 0x3 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT PUSH2 0x3B5 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x39C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0xCC JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x38E JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x37B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x428 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x41C JUMPI POP PUSH2 0x9B JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x40F JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x406 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x89 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x707 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x637 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x5FF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x57A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x187 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0xFE PUSH2 0x823 JUMP JUMPDEST PUSH2 0x106 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x16C JUMPI PUSH1 0x5 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x1A0 PUSH2 0x823 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x1FE PUSH2 0x1F4 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x320 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x30C JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x299 JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x283 JUMPI PUSH2 0x27F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x7DA JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2DA JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x2C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x24F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x232 JUMP JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x370 PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x378 PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x3E1 PUSH2 0x3CD PUSH2 0x823 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x3DC DUP3 CALLER DUP4 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x9DD JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x3FC PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x465 PUSH2 0x823 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x3E1 PUSH1 0x4 CALLDATALOAD CALLER PUSH2 0x9DD JUMP JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x4D7 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x4E3 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x564 JUMPI PUSH2 0x4FA PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 DUP1 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x54E JUMPI PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 SWAP4 DUP5 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x593 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x5D2 JUMPI PUSH1 0xFF NOT AND PUSH1 0x5 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x1FE PUSH2 0x61B PUSH2 0x823 JUMP JUMPDEST PUSH2 0x623 PUSH2 0x839 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x632 DUP4 CALLER DUP4 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x66E PUSH2 0x823 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x6F1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x6DB JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x7D0 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x30C JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x779 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x283 JUMPI PUSH2 0x27F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x7DA JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x7BA JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x7A5 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x72D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x80D JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x7EC JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x182 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x182 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP3 SWAP2 SWAP1 PUSH1 0x0 NOT DUP5 LT PUSH2 0x88B JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x8D5 JUMPI DUP1 ISZERO PUSH2 0x6F1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x6DB JUMPI PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH2 0x885 JUMP JUMPDEST POP DUP3 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x99B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x564 JUMPI PUSH2 0x922 PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x981 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x9C8 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x99B JUMPI PUSH2 0x9F4 PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0xA4D JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH2 0xA72 JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE TLOAD PUSH26 0x269CBD1A1E23352576F6E6BA31E249B0157CFF93441CBD4BABA2 0xC1 MSTORE CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "481:690:22:-:0;;;;;;;;;;;;-1:-1:-1;;;;;481:690:22;;;;;;;;;;;;;;;-1:-1:-1;;;481:690:22;;;;;;;;;-1:-1:-1;;;;;481:690:22;;;;;;;;;;;;;-1:-1:-1;;;481:690:22;;;;;;-1:-1:-1;;;;;481:690:22;;;;1648:13:2;481:690:22;;;;;;;;;;;-1:-1:-1;481:690:22;;;;;;;;;;;-1:-1:-1;481:690:22;;;;;;;;;;;;;;-1:-1:-1;481:690:22;;;;;;;;;;;;;1648:13:2;481:690:22;;;;;1648:13:2;481:690:22;;;;-1:-1:-1;;;;;481:690:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:690:22;;;;;;;;;;;;;1648:13:2;481:690:22;;;;;;;;619:10;1273:26:0;1269:95;;3004:6;481:690:22;;-1:-1:-1;;;;;;481:690:22;;619:10;481:690;;;;-1:-1:-1;;;;;481:690:22;;;;;;;;;;619:10;481:690;;;-1:-1:-1;;;;;481:690:22;3052:40:0;-1:-1:-1;;3052:40:0;481:690:22;-1:-1:-1;481:690:22;;1939:61:8;;6137:21:2;481:690:22;;;;;;;;;6137:21:2;481:690:22;619:10;;-1:-1:-1;481:690:22;-1:-1:-1;481:690:22;;;-1:-1:-1;481:690:22;;;;;;;;;;;;-1:-1:-1;6987:25:2;481:690:22;619:10;6987:25:2;;481:690:22;;;;;;;;;;-1:-1:-1;;;481:690:22;;;;;;;;1939:61:8;-1:-1:-1;;;1974:15:8;;481:690:22;;1974:15:8;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;481:690:22;;;-1:-1:-1;1322:31:0;481:690:22;;;;-1:-1:-1;481:690:22;;;;;;;;;;;-1:-1:-1;481:690:22;;-1:-1:-1;481:690:22;;-1:-1:-1;481:690:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:2;481:690:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:690:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:690:22;;;;;;;;;-1:-1:-1;481:690:22;;;;;;;;-1:-1:-1;481:690:22;;;;;-1:-1:-1;481:690:22;;;;;;;;;;;;-1:-1:-1;481:690:22;;;;;-1:-1:-1;481:690:22;;;;;-1:-1:-1;481:690:22;;;;;;;;;;1648:13:2;-1:-1:-1;481:690:22;;-1:-1:-1;481:690:22;;-1:-1:-1;481:690:22;;;;;;;;;;;;;;;;;;;;;1648:13:2;481:690:22;;;;;;;;;;1648:13:2;481:690:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:2;-1:-1:-1;481:690:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:690:22;;;;;;;;;-1:-1:-1;481:690:22;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 2105,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_7671": {
                  "entryPoint": 2083,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 2010,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_burn": {
                  "entryPoint": 2525,
                  "id": 672,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 2481,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_requireNotPaused": {
                  "entryPoint": 2662,
                  "id": 1075,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_spendAllowance": {
                  "entryPoint": 2127,
                  "id": 798,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "fun_transfer": {
                  "entryPoint": 2298,
                  "id": 529,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461070757508063095ea7b31461065557806318160ddd1461063757806323b872dd146105ff578063313ce567146105e35780633f4ba83a1461057a57806340c10f19146104be57806342966c68146104a15780635c975abb1461047e57806370a0823114610444578063715018a6146103e357806379cc6790146103b15780638456cb59146103575780638da5cb5b1461032a57806395d89b4114610209578063a9059cbb146101d8578063dd62ed3e146101875763f2fde38b146100e557600080fd5b34610182576020366003190112610182576100fe610823565b6101066109b1565b6001600160a01b03811690811561016c5760058054610100600160a81b03198116600893841b610100600160a81b031617909155901c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b34610182576040366003190112610182576101a0610823565b6101a8610839565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b34610182576040366003190112610182576101fe6101f4610823565b60243590336108fa565b602060405160018152f35b346101825760003660031901126101825760405160006004548060011c90600181168015610320575b60208310811461030c578285529081156102f05750600114610299575b50819003601f01601f191681019067ffffffffffffffff8211818310176102835761027f829182604052826107da565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b8282106102da5750602091508201018261024f565b60018160209254838588010152019101906102c5565b90506020925060ff191682840152151560051b8201018261024f565b634e487b7160e01b84526022600452602484fd5b91607f1691610232565b346101825760003660031901126101825760055460405160089190911c6001600160a01b03168152602090f35b34610182576000366003190112610182576103706109b1565b610378610a66565b600160ff1960055416176005557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b34610182576040366003190112610182576103e16103cd610823565b602435906103dc82338361084f565b6109dd565b005b34610182576000366003190112610182576103fc6109b1565b60058054610100600160a81b0319811690915560009060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610182576020366003190112610182576001600160a01b03610465610823565b1660005260006020526020604060002054604051908152f35b3461018257600036600319011261018257602060ff600554166040519015158152f35b34610182576020366003190112610182576103e1600435336109dd565b34610182576040366003190112610182576104d7610823565b602435906104e36109b1565b6001600160a01b03168015610564576104fa610a66565b6002549180830180931161054e576020926002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600093849284845283825260408420818154019055604051908152a380f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b34610182576000366003190112610182576105936109b1565b60055460ff8116156105d25760ff19166005557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b638dfc202b60e01b60005260046000fd5b3461018257600036600319011261018257602060405160128152f35b34610182576060366003190112610182576101fe61061b610823565b610623610839565b6044359161063283338361084f565b6108fa565b34610182576000366003190112610182576020600254604051908152f35b346101825760403660031901126101825761066e610823565b6024359033156106f1576001600160a01b03169081156106db57336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b346101825760003660031901126101825760006003548060011c906001811680156107d0575b60208310811461030c578285529081156102f057506001146107795750819003601f01601f191681019067ffffffffffffffff8211818310176102835761027f829182604052826107da565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b8282106107ba5750602091508201018261024f565b60018160209254838588010152019101906107a5565b91607f169161072d565b91909160208152825180602083015260005b81811061080d575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016107ec565b600435906001600160a01b038216820361018257565b602435906001600160a01b038216820361018257565b6001600160a01b03908116600081815260016020908152604080832094861683529390529190912054929190600019841061088b575b50505050565b8284106108d55780156106f1576001600160a01b038216156106db57600052600160205260406000209060018060a01b031660005260205260406000209103905538808080610885565b508290637dc7a0d960e11b60005260018060a01b031660045260245260445260646000fd5b6001600160a01b031690811561099b576001600160a01b031691821561056457610922610a66565b60008281528060205260408120548281106109815791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fd5b60055460081c6001600160a01b031633036109c857565b63118cdaa760e01b6000523360045260246000fd5b6001600160a01b0316801561099b576109f4610a66565b600091818352826020526040832054818110610a4d57817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b6064939263391434e360e21b8452600452602452604452fd5b60ff60055416610a7257565b63d93c066560e01b60005260046000fdfea2646970667358221220ee5c79269cbd1a1e23352576f6e6ba31e249b0157cff93441cbd4baba2c1523464736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x707 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x655 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x637 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x5FF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x57A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x4A1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x187 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0xFE PUSH2 0x823 JUMP JUMPDEST PUSH2 0x106 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x16C JUMPI PUSH1 0x5 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND PUSH1 0x8 SWAP4 DUP5 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR SWAP1 SWAP2 SSTORE SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x1A0 PUSH2 0x823 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x839 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x1FE PUSH2 0x1F4 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x8FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x320 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x30C JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x299 JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x283 JUMPI PUSH2 0x27F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x7DA JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2DA JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x2C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x24F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x232 JUMP JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x370 PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x378 PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x3E1 PUSH2 0x3CD PUSH2 0x823 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x3DC DUP3 CALLER DUP4 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x9DD JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x3FC PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x465 PUSH2 0x823 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x3E1 PUSH1 0x4 CALLDATALOAD CALLER PUSH2 0x9DD JUMP JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x4D7 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x4E3 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x564 JUMPI PUSH2 0x4FA PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 DUP1 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x54E JUMPI PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 SWAP4 DUP5 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x593 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x5D2 JUMPI PUSH1 0xFF NOT AND PUSH1 0x5 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH4 0x8DFC202B PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x1FE PUSH2 0x61B PUSH2 0x823 JUMP JUMPDEST PUSH2 0x623 PUSH2 0x839 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x632 DUP4 CALLER DUP4 PUSH2 0x84F JUMP JUMPDEST PUSH2 0x8FA JUMP JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH2 0x66E PUSH2 0x823 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x6F1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x6DB JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x182 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x182 JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x7D0 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x30C JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x779 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x283 JUMPI PUSH2 0x27F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x7DA JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x7BA JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x24F JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x7A5 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x72D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x80D JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x7EC JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x182 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x182 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP7 AND DUP4 MSTORE SWAP4 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP3 SWAP2 SWAP1 PUSH1 0x0 NOT DUP5 LT PUSH2 0x88B JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST DUP3 DUP5 LT PUSH2 0x8D5 JUMPI DUP1 ISZERO PUSH2 0x6F1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x6DB JUMPI PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE CODESIZE DUP1 DUP1 DUP1 PUSH2 0x885 JUMP JUMPDEST POP DUP3 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x99B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x564 JUMPI PUSH2 0x922 PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x981 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x9C8 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x99B JUMPI PUSH2 0x9F4 PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0xA4D JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH2 0xA72 JUMPI JUMP JUMPDEST PUSH4 0xD93C0665 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE TLOAD PUSH26 0x269CBD1A1E23352576F6E6BA31E249B0157CFF93441CBD4BABA2 0xC1 MSTORE CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "481:690:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;481:690:22;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;481:690:22;;;2627:22:0;;2623:91;;3004:6;481:690:22;;-1:-1:-1;;;;;;481:690:22;;;;;;-1:-1:-1;;;;;481:690:22;;;;;;;-1:-1:-1;;;;;481:690:22;3052:40:0;-1:-1:-1;;3052:40:0;481:690:22;2623:91:0;2672:31;;;481:690:22;2672:31:0;481:690:22;;;;;2672:31:0;481:690:22;;;;;;;;;;-1:-1:-1;;481:690:22;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;481:690:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;481:690:22;;;;3388:5:2;481:690:22;;:::i;:::-;;;735:10:7;;3388:5:2;:::i;:::-;481:690:22;;;;;;;;;;;;;-1:-1:-1;;481:690:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:690:22;;;;;-1:-1:-1;;481:690:22;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;481:690:22;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;481:690:22;;;;1710:6:0;481:690:22;;;;;;;;-1:-1:-1;;;;;481:690:22;;;;;;;;;;;;-1:-1:-1;;481:690:22;;;;1500:62:0;;:::i;:::-;1315:72:8;;:::i;:::-;2408:4;481:690:22;;2398:14:8;481:690:22;;;2398:14:8;481:690:22;2427:20:8;481:690:22;;;735:10:7;481:690:22;;2427:20:8;481:690:22;;;;;;;-1:-1:-1;;481:690:22;;;;1166:5:4;481:690:22;;:::i;:::-;;;735:10:7;1135:5:4;735:10:7;;1135:5:4;;:::i;:::-;1166;:::i;:::-;481:690:22;;;;;;;-1:-1:-1;;481:690:22;;;;1500:62:0;;:::i;:::-;3004:6;481:690:22;;-1:-1:-1;;;;;;481:690:22;;;;;;;;;-1:-1:-1;;;;;481:690:22;3052:40:0;481:690:22;;3052:40:0;481:690:22;;;;;;;-1:-1:-1;;481:690:22;;;;-1:-1:-1;;;;;481:690:22;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;481:690:22;;;;;;1796:7:8;481:690:22;;;;;;;;;;;;;;;;-1:-1:-1;;481:690:22;;;;692:5:4;481:690:22;;735:10:7;692:5:4;:::i;481:690:22:-;;;;;;-1:-1:-1;;481:690:22;;;;;;:::i;:::-;;;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;481:690:22;7432:21:2;;7428:91;;1315:72:8;;:::i;:::-;6137:21:2;481:690:22;;;;;;;;;;;;6137:21:2;481:690:22;6987:25:2;481:690:22;;;;;;;;;;;;;;;;;;;;;;;;6987:25:2;481:690:22;;;;;;;;;;;;;;7428:91:2;7476:32;;;481:690:22;7476:32:2;481:690:22;;;;;7476:32:2;481:690:22;;;;;;-1:-1:-1;;481:690:22;;;;1500:62:0;;:::i;:::-;1796:7:8;481:690:22;;;;2140:9:8;2136:62;;481:690:22;;;1796:7:8;481:690:22;2674:22:8;481:690:22;;;735:10:7;481:690:22;;2674:22:8;481:690:22;2136:62:8;2172:15;;;481:690:22;2172:15:8;481:690:22;;2172:15:8;481:690:22;;;;;;-1:-1:-1;;481:690:22;;;;;;;2761:2:2;481:690:22;;;;;;;;;-1:-1:-1;;481:690:22;;;;4890:5:2;481:690:22;;:::i;:::-;;;:::i;:::-;;;735:10:7;4854:5:2;735:10:7;;4854:5:2;;:::i;:::-;4890;:::i;481:690:22:-;;;;;;-1:-1:-1;;481:690:22;;;;;2881:12:2;481:690:22;;;;;;;;;;;;;-1:-1:-1;;481:690:22;;;;;;:::i;:::-;;;735:10:7;;9717:19:2;9713:89;;-1:-1:-1;;;;;481:690:22;;9815:21:2;;9811:90;;735:10:7;481:690:22;;;;;;;;;-1:-1:-1;481:690:22;;;;;-1:-1:-1;481:690:22;;;;;;;9989:31:2;481:690:22;735:10:7;9989:31:2;;481:690:22;;;;;;;9811:90:2;9859:31;;;481:690:22;9859:31:2;481:690:22;;;;;9859:31:2;9713:89;9759:32;;;481:690:22;9759:32:2;481:690:22;;;;;9759:32:2;481:690:22;;;;;;-1:-1:-1;;481:690:22;;;;;1837:5:2;481:690:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;481:690:22;;;;;-1:-1:-1;;481:690:22;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1837:5:2;481:690:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;481:690:22;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;481:690:22;;;;;;:::o;10319:476:2:-;-1:-1:-1;;;;;481:690:22;;;-1:-1:-1;481:690:22;;;;;;;;;;;;;;;;;;;;;;;;;;10319:476:2;;-1:-1:-1;;10484:36:2;;10480:309;;10319:476;;;;;:::o;10480:309::-;10540:24;;;10536:130;;9717:19;;9713:89;;-1:-1:-1;;;;;481:690:22;;9815:21:2;9811:90;;-1:-1:-1;481:690:22;3561:11:2;481:690:22;;;-1:-1:-1;481:690:22;9910:27:2;481:690:22;;;;;;-1:-1:-1;481:690:22;;;;-1:-1:-1;481:690:22;;;;;10480:309:2;;;;;;10536:130;10591:60;;;;;;-1:-1:-1;10591:60:2;481:690:22;;;;;;10591:60:2;481:690:22;;;;;;-1:-1:-1;10591:60:2;5297:300;-1:-1:-1;;;;;481:690:22;;5380:18:2;;5376:86;;-1:-1:-1;;;;;481:690:22;;5475:16:2;;5471:86;;1315:72:8;;:::i;:::-;5396:1:2;481:690:22;;;;;;;;;;6244:19:2;;;6240:115;;481:690:22;;;;6987:25:2;481:690:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6987:25:2;5297:300::o;6240:115::-;6290:50;481:690:22;6290:50:2;;;;;;;;481:690:22;;;;;6290:50:2;5376:86;5421:30;;;5396:1;5421:30;5396:1;5421:30;481:690:22;;5396:1:2;5421:30;1796:162:0;1710:6;481:690:22;;;-1:-1:-1;;;;;481:690:22;735:10:7;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:0;735:10:7;1901:40:0;481:690:22;;-1:-1:-1;1901:40:0;7888:206:2;-1:-1:-1;;;;;481:690:22;7958:21:2;;7954:89;;1315:72:8;;:::i;:::-;7977:1:2;481:690:22;;;;;;;;;;;6244:19:2;;;6240:115;;481:690:22;6987:25:2;481:690:22;;;;;;;;;;;;;;;6714:21:2;481:690:22;;6714:21:2;481:690:22;;;;;;6987:25:2;7888:206::o;6240:115::-;481:690:22;6290:50:2;;;;;;;;481:690:22;;;;;6290:50:2;1878:128:8;481:690:22;1796:7:8;481:690:22;;1939:61:8;;1878:128::o;1939:61::-;1974:15;;;-1:-1:-1;1974:15:8;;-1:-1:-1;1974:15:8"
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "decimals()": "313ce567",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "renounceOwnership()": "715018a6",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b",
              "unpause()": "3f4ba83a"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/JuryToken.sol\":\"JuryToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"contracts/JuryToken.sol\":{\"keccak256\":\"0xd5c9310d78063f7d35083493b11e3062af698abddaa49ab8951251a99aec3ab5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ee3f04cf7b9ff0d7f19ea454a3bbda9fea4c48bcb637a369c708822eb9d5420\",\"dweb:/ipfs/QmZsYC5YKsZKXycN1ZcSbZ6Tg8S6Q9G1kpPEEWJs227zSQ\"]}},\"version\":1}"
        }
      },
      "contracts/SimpleTest.sol": {
        "SimpleTest": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "getMessage",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "message",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_message",
                  "type": "string"
                }
              ],
              "name": "setMessage",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601557610464908161001b8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c908163368b8772146100a5575080638da5cb5b1461007c578063ce6d41de1461004b5763e21f37ce1461004b57600080fd5b3461007757600036600319011261007757610073610067610369565b604051918291826102e6565b0390f35b600080fd5b34610077576000366003190112610077576001546040516001600160a01b039091168152602090f35b346100775760203660031901126100775760043567ffffffffffffffff811161007757366023820112156100775780600401359067ffffffffffffffff8211610269576100fc601f8301601f1916602001846102c4565b8183523660248383010111610077578160009260246020930183860137830101526001546001600160a01b0316330361027f57805167ffffffffffffffff81116102695761014b60005461032f565b601f81116101fd575b50602091601f821160011461019257918192600092610187575b5050600019600383901b1c191660019190911b17600055005b01519050828061016e565b601f198216926000805260008051602061040f8339815191529160005b8581106101e5575083600195106101cc575b505050811b01600055005b015160001960f88460031b161c191690558280806101c1565b919260206001819286850151815501940192016101af565b60008052601f820160051c60008051602061040f833981519152019060208310610253575b601f0160051c60008051602061040f83398151915201905b8181106102475750610154565b6000815560010161023a565b60008051602061040f8339815191529150610222565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601a60248201527f4f6e6c79206f776e65722063616e20736574206d6573736167650000000000006044820152606490fd5b90601f8019910116810190811067ffffffffffffffff82111761026957604052565b91909160208152825180602083015260005b818110610319575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016102f8565b90600182811c9216801561035f575b602083101461034957565b634e487b7160e01b600052602260045260246000fd5b91607f169161033e565b604051906000826000549161037d8361032f565b80835292600181169081156103ef57506001146103a3575b6103a1925003836102c4565b565b506000808052909160008051602061040f8339815191525b8183106103d35750509060206103a192820101610395565b60209193508060019154838589010152019101909184926103bb565b602092506103a194915060ff191682840152151560051b82010161039556fe290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563a2646970667358221220625f0abc0ee834f3230af88f69a60b40ca5d2732e534aac719e3f7cf6b0dc7ff64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0x464 SWAP1 DUP2 PUSH2 0x1B DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x368B8772 EQ PUSH2 0xA5 JUMPI POP DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0xCE6D41DE EQ PUSH2 0x4B JUMPI PUSH4 0xE21F37CE EQ PUSH2 0x4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x77 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x77 JUMPI PUSH2 0x73 PUSH2 0x67 PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2E6 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x77 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x77 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x77 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x77 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x77 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x77 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x269 JUMPI PUSH2 0xFC PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x2C4 JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x77 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x27F JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x269 JUMPI PUSH2 0x14B PUSH1 0x0 SLOAD PUSH2 0x32F JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1FD JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x192 JUMPI SWAP2 DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x187 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR PUSH1 0x0 SSTORE STOP JUMPDEST ADD MLOAD SWAP1 POP DUP3 DUP1 PUSH2 0x16E JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP3 PUSH1 0x0 DUP1 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x40F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x1E5 JUMPI POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x1CC JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP3 DUP1 DUP1 PUSH2 0x1C1 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x40F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x20 DUP4 LT PUSH2 0x253 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x40F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x247 JUMPI POP PUSH2 0x154 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x23A JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x40F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0x222 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E20736574206D657373616765000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x269 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x319 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x2F8 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x35F JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x349 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x33E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x0 SLOAD SWAP2 PUSH2 0x37D DUP4 PUSH2 0x32F JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3EF JUMPI POP PUSH1 0x1 EQ PUSH2 0x3A3 JUMPI JUMPDEST PUSH2 0x3A1 SWAP3 POP SUB DUP4 PUSH2 0x2C4 JUMP JUMPDEST JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP1 MSTORE SWAP1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x40F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP2 DUP4 LT PUSH2 0x3D3 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x3A1 SWAP3 DUP3 ADD ADD PUSH2 0x395 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x20 SWAP3 POP PUSH2 0x3A1 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD PUSH2 0x395 JUMP INVALID 0x29 0xD 0xEC 0xD9 SLOAD DUP12 PUSH3 0xA8D603 GASLIMIT 0xA9 DUP9 CODESIZE PUSH16 0xC84BA6BC95484008F6362F93160EF3E5 PUSH4 0xA2646970 PUSH7 0x7358221220625F EXP 0xBC 0xE 0xE8 CALLVALUE RETURN 0x23 EXP 0xF8 DUP16 PUSH10 0xA60B40CA5D2732E534AA 0xC7 NOT 0xE3 0xF7 0xCF PUSH12 0xDC7FF64736F6C634300081C STOP CALLER ",
              "sourceMap": "58:357:23:-:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_encode_string": {
                  "entryPoint": 742,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "copy_array_from_storage_to_memory_string": {
                  "entryPoint": 873,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 815,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 708,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b60003560e01c908163368b8772146100a5575080638da5cb5b1461007c578063ce6d41de1461004b5763e21f37ce1461004b57600080fd5b3461007757600036600319011261007757610073610067610369565b604051918291826102e6565b0390f35b600080fd5b34610077576000366003190112610077576001546040516001600160a01b039091168152602090f35b346100775760203660031901126100775760043567ffffffffffffffff811161007757366023820112156100775780600401359067ffffffffffffffff8211610269576100fc601f8301601f1916602001846102c4565b8183523660248383010111610077578160009260246020930183860137830101526001546001600160a01b0316330361027f57805167ffffffffffffffff81116102695761014b60005461032f565b601f81116101fd575b50602091601f821160011461019257918192600092610187575b5050600019600383901b1c191660019190911b17600055005b01519050828061016e565b601f198216926000805260008051602061040f8339815191529160005b8581106101e5575083600195106101cc575b505050811b01600055005b015160001960f88460031b161c191690558280806101c1565b919260206001819286850151815501940192016101af565b60008052601f820160051c60008051602061040f833981519152019060208310610253575b601f0160051c60008051602061040f83398151915201905b8181106102475750610154565b6000815560010161023a565b60008051602061040f8339815191529150610222565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601a60248201527f4f6e6c79206f776e65722063616e20736574206d6573736167650000000000006044820152606490fd5b90601f8019910116810190811067ffffffffffffffff82111761026957604052565b91909160208152825180602083015260005b818110610319575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016102f8565b90600182811c9216801561035f575b602083101461034957565b634e487b7160e01b600052602260045260246000fd5b91607f169161033e565b604051906000826000549161037d8361032f565b80835292600181169081156103ef57506001146103a3575b6103a1925003836102c4565b565b506000808052909160008051602061040f8339815191525b8183106103d35750509060206103a192820101610395565b60209193508060019154838589010152019101909184926103bb565b602092506103a194915060ff191682840152151560051b82010161039556fe290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563a2646970667358221220625f0abc0ee834f3230af88f69a60b40ca5d2732e534aac719e3f7cf6b0dc7ff64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x368B8772 EQ PUSH2 0xA5 JUMPI POP DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0xCE6D41DE EQ PUSH2 0x4B JUMPI PUSH4 0xE21F37CE EQ PUSH2 0x4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x77 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x77 JUMPI PUSH2 0x73 PUSH2 0x67 PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2E6 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x77 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x77 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x77 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x77 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x77 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x77 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x269 JUMPI PUSH2 0xFC PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x2C4 JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x77 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x27F JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x269 JUMPI PUSH2 0x14B PUSH1 0x0 SLOAD PUSH2 0x32F JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1FD JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x192 JUMPI SWAP2 DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x187 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND PUSH1 0x1 SWAP2 SWAP1 SWAP2 SHL OR PUSH1 0x0 SSTORE STOP JUMPDEST ADD MLOAD SWAP1 POP DUP3 DUP1 PUSH2 0x16E JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP3 PUSH1 0x0 DUP1 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x40F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x1E5 JUMPI POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x1CC JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP3 DUP1 DUP1 PUSH2 0x1C1 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1AF JUMP JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH1 0x1F DUP3 ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x40F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 PUSH1 0x20 DUP4 LT PUSH2 0x253 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x40F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x247 JUMPI POP PUSH2 0x154 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x23A JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x40F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 POP PUSH2 0x222 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E20736574206D657373616765000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x269 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x319 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x2F8 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x35F JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x349 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x33E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x0 SLOAD SWAP2 PUSH2 0x37D DUP4 PUSH2 0x32F JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3EF JUMPI POP PUSH1 0x1 EQ PUSH2 0x3A3 JUMPI JUMPDEST PUSH2 0x3A1 SWAP3 POP SUB DUP4 PUSH2 0x2C4 JUMP JUMPDEST JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP1 MSTORE SWAP1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x40F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP2 DUP4 LT PUSH2 0x3D3 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x3A1 SWAP3 DUP3 ADD ADD PUSH2 0x395 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x20 SWAP3 POP PUSH2 0x3A1 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD PUSH2 0x395 JUMP INVALID 0x29 0xD 0xEC 0xD9 SLOAD DUP12 PUSH3 0xA8D603 GASLIMIT 0xA9 DUP9 CODESIZE PUSH16 0xC84BA6BC95484008F6362F93160EF3E5 PUSH4 0xA2646970 PUSH7 0x7358221220625F EXP 0xBC 0xE 0xE8 CALLVALUE RETURN 0x23 EXP 0xF8 DUP16 PUSH10 0xA60B40CA5D2732E534AA 0xC7 NOT 0xE3 0xF7 0xCF PUSH12 0xDC7FF64736F6C634300081C STOP CALLER ",
              "sourceMap": "58:357:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;58:357:23;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;58:357:23;;;;;;;;-1:-1:-1;;;;;58:357:23;;;;;;;;;;;;;;-1:-1:-1;;58:357:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;58:357:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;58:357:23;231:10;:19;58:357;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;58:357:23;;;;;;;245:5;58:357;;;;;;;;;;;;-1:-1:-1;58:357:23;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;58:357:23;;;;;;;;;;245:5;58:357;;;;;-1:-1:-1;;;58:357:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;245:5;58:357;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;58:357:23;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;58:357:23;;;;;;;;;;;;;;;245:5;58:357;;;;-1:-1:-1;;;;;;;;;;;58:357:23;-1:-1:-1;58:357:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;58:357:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;58:357:23;;;;;;-1:-1:-1;;;;;;;;;;;58:357:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "getMessage()": "ce6d41de",
              "message()": "e21f37ce",
              "owner()": "8da5cb5b",
              "setMessage(string)": "368b8772"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getMessage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"message\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"setMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleTest.sol\":\"SimpleTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/SimpleTest.sol\":{\"keccak256\":\"0x7747635dafe240d201ea88c229f014a2593dd4ecd60ef0ea7deea267c203c18c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16734f1d1261d4cdcf54b2a1cf76c78666bb044f7b551c6fd7d6f8dbd1804551\",\"dweb:/ipfs/QmTGmi6SnCCpo3mKJod4kEmgenTHmjQj3UKaEmWo4kX7Xq\"]}},\"version\":1}"
        }
      }
    }
  }
}